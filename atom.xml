<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Text Blog</title>
 <link href="http://sankame.github.com/atom.xml" rel="self"/>
 <link href="http://sankame.github.com"/>
 <updated>2013-08-28T12:21:30+09:00</updated>
 <id>http://sankame.github.com</id>
 <author>
   <name>sankame</name>
   <email>mt_fuji_3776@live.jp</email>
 </author>

 
 <entry>
   <title>MySQLコマンド メモ</title>
   <link href="http://sankame.github.com/MySQL/2013/08/26/mysql_command"/>
   <updated>2013-08-26T00:00:00+09:00</updated>
   <id>http://sankame.github.com/MySQL/2013/08/26/mysql_command</id>
   <content type="html">&lt;p&gt;投稿日：&lt;span&gt;2013年08月26日&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id='mysql_'&gt;MySQLコマンド メモ&lt;/h4&gt;

&lt;h5 id='webdb1'&gt;WebサーバとDBサーバが1台のマシンにある場合によく行う操作。&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# そのマシンのMySQLサーバにrootで接続
# (パスワードを聞かれるので入力してEnter)
# mysql -h 127.0.0.1 -u root -p

mysql&amp;gt; -- UTF8でDBを作成し、接続ユーザを作成 (先頭がtestの文字は読み替えて下さい)
mysql&amp;gt; create database testdb default character set utf8;
mysql&amp;gt; grant all on testdb.* to &amp;#39;testuser&amp;#39;@&amp;#39;localhost&amp;#39; identified by &amp;#39;testpassword&amp;#39;;
mysql&amp;gt; flush privileges;

mysql&amp;gt; -- 別マシンからDBへ接続する必要がある場合は、以下のように別ユーザを作成
mysql&amp;gt; -- (192.168.0.1の部分を別マシンのIPに読み替える)
mysql&amp;gt; grant all on testdb.* to testuser@192.168.0.1 identified by &amp;#39;testpassword&amp;#39;;

mysql&amp;gt; -- 作成したDBに切り替え、テーブルを作成
mysql&amp;gt; use testdb;

mysql&amp;gt; DROP TABLE IF EXISTS `users`;

mysql&amp;gt; CREATE TABLE `users` (
mysql&amp;gt;   `id`         bigint unsigned NOT NULL AUTO_INCREMENT PRIMARY KEY,
mysql&amp;gt;   `username`   varchar(32) NOT NULL
mysql&amp;gt; ) ENGINE=InnoDB;&lt;/code&gt;&lt;/pre&gt;</content>
 </entry>
 
 <entry>
   <title>Nexus7とGitHubでプログラミング環境を作る</title>
   <link href="http://sankame.github.com/Nexus7/2013/08/11/nexus7_github_devenv"/>
   <updated>2013-08-11T00:00:00+09:00</updated>
   <id>http://sankame.github.com/Nexus7/2013/08/11/nexus7_github_devenv</id>
   <content type="html">&lt;p&gt;投稿日：&lt;span&gt;2013年08月11日&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h5 id='0'&gt;0.環境&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;[端末] Nexus7
[OS]   Android 4.2.2
[BlueToothキーボード] ELECOM TK-FBP013&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id='1nexus7bit_web_server_'&gt;1.Nexus7にBit Web Serverをインストール &lt;a href='https://play.google.com/store/apps/details?id=com.andi.serverweb'&gt;(ダウンロード)&lt;/a&gt;&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;Android上でPHPとMySQLを動かせるアプリ。(有料 約230円)
root化しないで使用可能。&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id='2nexus7terminal_ide_'&gt;2.Nexus7にTerminal IDEをインストール &lt;a href='https://play.google.com/store/apps/details?id=com.spartacusrex.spartacuside'&gt;(ダウンロード)&lt;/a&gt;&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;Android用の開発環境。java、c、c++等のコンパイラを含む。
root化しないで使用可能。&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id='3hello_world'&gt;3.Hello World&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;Nexus7にBlueToothキーボードを接続。

Nexus7でTerminal IDEを起動。

いくつかのボタンが表示されるので、[Install System]をクリック。

Overwrite ALLにチェックを入れ、[Install System]をクリックし、システムアップデート。

[Terminal IDE]をクリック。

コンソールが起動するので、ファイルを作成し、以下の内容を書き込む。

$ cd $HOME/sdcard/wwww
$
$ vim hello.php
--------------(追記内容)-----------
&amp;lt;?php
echo &amp;#39;hello&amp;#39;;
--------------(追記内容)-----------

Nexus7でBit Web Serverを起動。

[Localhost]をクリック。

ブラウザが起動し、表示されたファイル一覧から上記で作成したhello.phpをクリック。

ブラウザにhelloと表示されれば成功。&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id='4github'&gt;4.GitHubにファイルをアップ(準備)&lt;/h5&gt;

&lt;p&gt;せっかくなのでNexus7からGitHubにファイルをアップしてみる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ 公開鍵と秘密鍵を作成。
$ Nexus7で以下のコマンドを打つ。
$ dropbearkey -t rsa -f $HOME/.ssh/id_rsa
$
$ 作成した鍵を表示。
$ dropbearkey -y -f ~/.ssh/id_rsa
$ 
$ ssh-rsaの1行(公開鍵)をコピーする。

GitHubダッシュボード画面の右上「Account Settings」をクリック。
(GitHubアカウントは作成済みとします)
左メニューの「SSH Keys」クリック。
「Add SSH key」をクリックし、Titleに任意の値、Keyに上記でコピーした内容(公開鍵)を入力する。

GitHubダッシュボード画面の「Repositories」-「New」をクリックし、新規リポジトリを作成する。

$ Nexus7に戻り、以下のファイルを作成し、追記内容を書き込む。
$ vim /data/data/com.spartacusrex.spartacuside/files/bin/ssh-with-default-key

--------------(追記内容)-----------
#!/data/data/com.spartacusrex.spartacuside/files/system/bin/bash
exec ssh -i ~/.ssh/id_rsa &amp;quot;$@&amp;quot;
--------------(追記内容)-----------

$ chmod 755 /data/data/com.spartacusrex.spartacuside/files/bin/ssh-with-default-key

$ さらに以下のファイルに追記内容を書き込む。
$ vim $HOME/.bashrc

--------------(追記内容)-----------
export GIT_SSH=$HOME/bin/ssh-with-default-key
--------------(追記内容)-----------&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id='5github'&gt;5.GitHubにファイルをアップ&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;$ Nexus7に戻って以下のコマンドを打つ。
$ cd $HOME/sdcard/wwww
$ git init
$ touch new.txt
$ git add .
$ git commit -m &amp;#39;add new.txt&amp;#39;
$ 【】内は自分の設定に読み替える。
$ git remote add origin git@github.com:【アカウント名】/【リポジトリ名】.git
$ git push origin master
$
$ これでGitHubにnew.txtがアップロードできたはず。&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id='id124'&gt;参考ページ&lt;/h5&gt;

&lt;p&gt;&lt;a href='https://play.google.com/store/apps/details?id=com.andi.serverweb'&gt;Terminal IDEの設定&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href='http://blog.katsuma.tv/2009/02/first_github.html'&gt;Githubへのpush&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href='https://jp.linux.com/linux-community/blog/236-mirainoitsuka/403358'&gt;Githubへのpush2&lt;/a&gt;&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Redisインストール</title>
   <link href="http://sankame.github.com/DELL/2013/07/10/redis_install"/>
   <updated>2013-07-10T00:00:00+09:00</updated>
   <id>http://sankame.github.com/DELL/2013/07/10/redis_install</id>
   <content type="html">&lt;p&gt;投稿日：&lt;span&gt;2013年07月10日&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h5 id='id122'&gt;環境&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;[CentOS] 5.6 (32bit版カーネル)&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id='id123'&gt;インストール&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# ソース取得。
# wget http://redis.googlecode.com/files/redis-2.6.7.tar.gz
#
# tar xzf redis-2.6.7.tar.gz
#
# cd redis-2.6.7
#
# 続いてmakeを実行すると下記エラーが発生。
# make

cd src &amp;amp;&amp;amp; make all
make[1]: ディレクトリ `/root/redis-2.6.7/src&amp;#39; に入ります
LINK redis-server
zmalloc.o: In function `zmalloc_used_memory&amp;#39;:
/root/redis-2.6.7/src/zmalloc.c:223: undefined reference to `__sync_add_and_fetch_4&amp;#39;
collect2: ld はステータス 1 で終了しました
make[1]: *** [redis-server] エラー 1
make[1]: ディレクトリ `/root/redis-2.6.7/src&amp;#39; から出ます
make: *** [all] エラー 2

# アーキテクチャを調べて、コンパイルオプションを指定。
# uname -m

i686

# 
# export CFLAGS=-march=i686
#
# make distclean
# make
# 下記メッセージが出てmakeは通ったらしい。

Hint: To run &amp;#39;make test&amp;#39; is a good idea ;)

# 続いてmake testを実行すると下記エラーが発生。
# make test

ERROR:
*** [err]: SLOWLOG - RESET subcommand works in tests/unit/slowlog.tcl
Expected &amp;#39;0&amp;#39; to equal or match &amp;#39;1&amp;#39;
*** [err]: SLOWLOG - logged entry sanity check in tests/unit/slowlog.tcl
Expected &amp;#39;105&amp;#39; to be equal to &amp;#39;106&amp;#39;
Cleanup: may take some time... OK
make[1]: *** [test] エラー 1
make[1]: ディレクトリ `/root/redis-2.6.7/src&amp;#39; から出ます
make: *** [test] エラー 2

# 構わずインストール。
# make install
# 
# 起動。
# redis-server
#
# 動作確認。
# redis-cli PING

PONG

# redisサーバは起動しているようだ…&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href='http://www.eschrade.com/page/undefined-reference-to-__sync_add_and_fetch_4/'&gt;エラー時に参照したページ&lt;/a&gt;&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>DELL E5520 のタッチパッドをOFFにする</title>
   <link href="http://sankame.github.com/DELL/2013/07/05/dell_e5520_touchpad"/>
   <updated>2013-07-05T00:00:00+09:00</updated>
   <id>http://sankame.github.com/DELL/2013/07/05/dell_e5520_touchpad</id>
   <content type="html">&lt;p&gt;投稿日：&lt;span&gt;2013年07月05日&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h5 id='id121'&gt;環境&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;[PC] DELL E5520
[OS] Windows 7 Professional (SP1)&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id='1_'&gt;1. ドライバダウンロード&lt;/h5&gt;

&lt;p&gt;&lt;a href='http://www.dell.com/support/drivers/jp/ja/jpdhs1/Product/latitude-e5520'&gt;ダウンロードページ&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;上記ダウンロードページを開く。
&amp;quot;マウス、キーボード、入力デバイス&amp;quot; を開く。
&amp;quot;Dell Multi-Touch Touchpad Driver&amp;quot; の右横にある「ファイルのダウンロード」をクリック。&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id='2_'&gt;2. ドライバファイルの選択&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;Hard-Drive-ALPS_MULTI-TOUCH-TOUCHPAD_A06_GGY5W_SETUP_ZPE.exe
を選択して「続行」をクリック。&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id='3_'&gt;3. ダウンロードセレクタ&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;単一ファイルのダウンロード&amp;quot;
を選択して「続行」をクリック。&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id='4_'&gt;4. インストール&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;ダウンロード後、EXEファイルを実行。
インストールしたら再起動。&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id='5_'&gt;5. アプリ起動&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;Windows[スタートメニュー] - [コントロールパネル]を開く。
Dell Touchpad が増えているのでダブルクリック。&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id='6_off'&gt;6. タッチパッドOff&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;DELLポインティングデバイス　というダイアログが起動。
左メニューで任意のものを選択して、タッチパッドのOn/Offで O をクリックして、保存ボタンクリック。
こうするとタッチパッドがOffになる。

※見つからない場合は右上の「表示方法」を「小さいアイコン」または「大きいアイコン」に変更する。&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href='http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q13104530838'&gt;参考ページ&lt;/a&gt;&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Smartyで3点リーダー(省略)表現</title>
   <link href="http://sankame.github.com/Smarty/2013/05/12/smarty_ellipses"/>
   <updated>2013-05-12T00:00:00+09:00</updated>
   <id>http://sankame.github.com/Smarty/2013/05/12/smarty_ellipses</id>
   <content type="html">&lt;p&gt;投稿日：&lt;span&gt;2013年05月12日&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h5 id='109'&gt;10文字以上の場合、9文字目を…にして残りを切り捨てる。&lt;/h5&gt;

&lt;h5 id='1'&gt;(半角、全角ともに1文字として扱う)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;{if mb_strlen($keyword) &amp;gt; 9}
	{assign var=cutKeyword value=$keyword|mb_substr:0:8|cat:&amp;#39;…&amp;#39;}
{else}
	{assign var=cutKeyword value=$keyword}
{/if}
&amp;lt;a class=&amp;quot;keyword-link&amp;quot; href=&amp;quot;#&amp;quot; title=&amp;quot;{$keyword}&amp;quot;&amp;gt;{$cutKeyword}&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id='id120'&gt;上記コードで各文字列を変換した場合。&lt;/h5&gt;

&lt;h5 id='_'&gt;(&amp;#8220;→&amp;#8221; は変換前後を表す)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;１２３４５６７８　　　→　１２３４５６７８
１２３４５６７８９　　→　１２３４５６７８９
１２３４５６７８９Ａ　→　１２３４５６７８…
123456789          →　123456789
123456789A         →　12345678…&lt;/code&gt;&lt;/pre&gt;</content>
 </entry>
 
 <entry>
   <title>PHPでMeCabを利用</title>
   <link href="http://sankame.github.com/MeCab/2013/04/29/php_mecab"/>
   <updated>2013-04-29T00:00:00+09:00</updated>
   <id>http://sankame.github.com/MeCab/2013/04/29/php_mecab</id>
   <content type="html">&lt;p&gt;投稿日：&lt;span&gt;2013年04月29日&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id='phpmecab'&gt;PHPからMeCabを使ってみる。&lt;/h4&gt;

&lt;h5 id='id119'&gt;環境&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;[CentOS] 5.6 (32bit版カーネル)
[PHP]    5.3.3&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id='0mecab'&gt;0.MeCabインストール&lt;/h5&gt;

&lt;p&gt;&lt;a href='/MeCab/2013/01/28/mecab_install/'&gt;MeCabインストール方法&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# まずは上記の手順でMeCabをインストール。&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id='1php_mecab'&gt;1.php_mecabインストール&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# wget -O php_mecab-0.5.zip https://nodeload.github.com/rsky/php-mecab/zip/master --no-check-certificate
# 
# unzip php_mecab-0.5.zip
# 
# mv -f php-mecab-master php_mecab-0.5
# 
# cd php_mecab-0.5/mecab
# 
# phpize
# 
# ./configure
# 
# make
# 
# make test
# 
# make install&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id='2'&gt;2.テスト&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# インストールが成功したら、phpからテスト
# (Apache経由で動かす場合はhttpdを再起動して下さい)
# 
# echo &amp;quot;extension=mecab.so&amp;quot; &amp;gt; /etc/php.d/mecab.ini
# vim mecabtest.php

--------------(記述内容)--------------
&amp;lt;?php
dl(&amp;#39;mecab.so&amp;#39;);

$t = new MeCab_Tagger();
$str = &amp;#39;すもももももももものうち&amp;#39;;

echo $t-&amp;gt;parse($str);
--------------(記述内容)--------------


# 作成したphpファイルを実行
# php mecabtest.php 

--------------(実行結果)--------------
すもも  名詞,一般,*,*,*,*,すもも,スモモ,スモモ
も      助詞,係助詞,*,*,*,*,も,モ,モ
もも    名詞,一般,*,*,*,*,もも,モモ,モモ
も      助詞,係助詞,*,*,*,*,も,モ,モ
もも    名詞,一般,*,*,*,*,もも,モモ,モモ
の      助詞,連体化,*,*,*,*,の,ノ,ノ
うち    名詞,非自立,副詞可能,*,*,*,うち,ウチ,ウチ
EOS
--------------(実行結果)--------------&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href='http://kohkimakimoto.hatenablog.com/entry/2012/05/02/112020'&gt;参照したページ1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href='http://kouhei.hatenablog.com/entry/2012/12/13/022040'&gt;参照したページ2&lt;/a&gt;&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>MeCabインストール</title>
   <link href="http://sankame.github.com/MeCab/2013/01/28/mecab_install"/>
   <updated>2013-01-28T00:00:00+09:00</updated>
   <id>http://sankame.github.com/MeCab/2013/01/28/mecab_install</id>
   <content type="html">&lt;p&gt;投稿日：&lt;span&gt;2013年01月28日&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id='mecab'&gt;形態素解析エンジンMeCabをインストールしてみる。&lt;/h4&gt;

&lt;h5 id='id118'&gt;環境&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;[CentOS] 5.6 (32bit版カーネル)&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id='1'&gt;1.インストール&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# mecabのソースを取得
# wget http://mecab.googlecode.com/files/mecab-0.98.tar.gz
# tar xzf mecab-0.98.tar.gz 
# cd mecab-0.98
# cd src

# mecab.hを開いて点線で囲んだ部分を修正する。数字に付けられている()を削除する。
# vim mecab.h 
--------------------------------------
	#define MECAB_NOR_NODE  0
	#define MECAB_UNK_NODE  1
	#define MECAB_BOS_NODE  2
	#define MECAB_EOS_NODE  3
	#define MECAB_EON_NODE  4

	#define MECAB_USR_DIC   1
	#define MECAB_SYS_DIC   0
	#define MECAB_UNK_DIC   2
--------------------------------------

# cd ..

# ./configure --with-charset=utf-8
# make
# make install

# cd ..

# 辞書のソースを取得
# wget http://downloads.sourceforge.net/project/mecab/mecab-ipadic/2.7.0-20070801/mecab-ipadic-2.7.0-20070801.tar.gz
# tar zxvf mecab-ipadic-2.7.0-20070801.tar.gz
# cd mecab-ipadic-2.7.0-20070801

# char.def を開いて点線で囲んだ部分を修正する。オリジナルの部分をコメントアウトし、7行追加。
# vim char.def 
--------------------------------------
	# ASCII
	 #0x0021..0x002F SYMBOL
	 #0x0030..0x0039 NUMERIC
	 #0x003A..0x0040 SYMBOL
	 #0x0041..0x005A ALPHA
	 #0x005B..0x0060 SYMBOL
	 #0x0061..0x007A ALPHA
	 #0x007B..0x007E SYMBOL
	 0x0021..0x002F ALPHA
	 0x0030..0x0039 ALPHA
	 0x003A..0x0040 ALPHA
	 0x0041..0x005A ALPHA
	 0x005B..0x0060 ALPHA
	 0x0061..0x007A ALPHA
	 0x007B..0x007E ALPHA
--------------------------------------

./configure --with-charset=utf-8
make
make install&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id='2'&gt;2.テスト&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# 以下のようにmecabと打ってEnterキーを押すと待機状態になるので、次に解析したい文字列を入力する。
# mecab
# すもももももももものうち

すもももももももものうち
すもも  名詞,一般,*,*,*,*,すもも,スモモ,スモモ
も      助詞,係助詞,*,*,*,*,も,モ,モ
もも    名詞,一般,*,*,*,*,もも,モモ,モモ
も      助詞,係助詞,*,*,*,*,も,モ,モ
もも    名詞,一般,*,*,*,*,もも,モモ,モモ
の      助詞,連体化,*,*,*,*,の,ノ,ノ
うち    名詞,非自立,副詞可能,*,*,*,うち,ウチ,ウチ
EOS&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href='/MeCab/2013/04/29/php_mecab/'&gt;PHPから利用する方法はこちら&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href='http://brandofme.vi-king.net/?p=197'&gt;参照したページ&lt;/a&gt;&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>OpenX仕組み1 配信処理</title>
   <link href="http://sankame.github.com/OpenX/2013/01/20/openx_structure1"/>
   <updated>2013-01-20T00:00:00+09:00</updated>
   <id>http://sankame.github.com/OpenX/2013/01/20/openx_structure1</id>
   <content type="html">&lt;p&gt;投稿日：&lt;span&gt;2013年01月20日&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id='openx'&gt;OpenX仕組みに関する自分用メモ　配信処理&lt;/h4&gt;

&lt;h4 id='1'&gt;1.テーブル定義&lt;/h4&gt;

&lt;p&gt;&lt;a href='http://www.zulutime.org/openxschema/index.html'&gt;テーブル定義？&lt;/a&gt;&lt;/p&gt;

&lt;h4 id='2'&gt;2.インプレッションカウント&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;PHP : plugins/deliveryLog/oxLogImpression/logImpression.delivery.php
		→lib/OA/Dal/Delivery/mysql.php:function OX_bucket_updateTable
DB	: ox_data_bkt_m
処理: INSERT(1レコード)
概要: &lt;/code&gt;&lt;/pre&gt;</content>
 </entry>
 
 <entry>
   <title>Subversionリポジトリ作成</title>
   <link href="http://sankame.github.com/Subversion/2013/01/19/svn_create_repos"/>
   <updated>2013-01-19T00:00:00+09:00</updated>
   <id>http://sankame.github.com/Subversion/2013/01/19/svn_create_repos</id>
   <content type="html">&lt;p&gt;投稿日：&lt;span&gt;2013年01月19日&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id='svnsubversion'&gt;SVN(Subversion)でのリポジトリ作成メモ&lt;/h4&gt;

&lt;h4 id='_svn'&gt;手順 (SVNはインストール済みとする)&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;# ※最初だけ下記モジュールをインストール。
# ブラウザ経由でリポジトリ見るため、予めmod_dav_svnをインストール。
# yum install mod_dav_svn

# データが壊れにくいfsfsを指定し、リポジトリ作成。
# svnadmin create /var/svn/repos/test --fs-type fsfs

# SVNの作法通り、下記3つを用意。
svn mkdir file:///var/svn/repos/test/trunk -m &amp;quot;create&amp;quot;
svn mkdir file:///var/svn/repos/test/tags -m &amp;quot;create&amp;quot;
svn mkdir file:///var/svn/repos/test/branches -m &amp;quot;create&amp;quot;

# 他のリポジトリのソースを引き継ぐ場合。
# (例)test_orgリポジトリを出力。
# svn export file:///var/svn/repos/test_org/ /tmp/test_org

# 上記で出力ソースを取りこむ。
# svn import /tmp/test_org/trunk file:///var/svn/repos/test/trunk -m &amp;quot;first import&amp;quot;

# ブラウザからアクセスするため、設定ファイルを変更。
# vim /etc/httpd/conf.d/subversion.conf

# 下記を追記。
&amp;lt;Location /svn/test&amp;gt;
    DAV svn
    SVNPath /var/svn/repos/test
&amp;lt;/Location&amp;gt;

# apache再起動
# /etc/init.d/httpd restart

# 下記URLでブラウザからリポジトリにアクセス。(localhostは環境に応じて読み替え)
# http://localhost/svn/test/

# コミットしたらエラーが出たので、作成したリポジトリのパーミッションをゆるめに変更。
# cd /var/svn/repos
# chmod -R 777 test&lt;/code&gt;&lt;/pre&gt;</content>
 </entry>
 
 <entry>
   <title>OpenX配信テスト</title>
   <link href="http://sankame.github.com/OpenX/2013/01/15/openx_delivery_test"/>
   <updated>2013-01-15T00:00:00+09:00</updated>
   <id>http://sankame.github.com/OpenX/2013/01/15/openx_delivery_test</id>
   <content type="html">&lt;p&gt;投稿日：&lt;span&gt;2013年01月15日&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id='openxver2810'&gt;OpenX(ver2.8.10)で広告配信テストをしてみる。&lt;/h4&gt;

&lt;h4 id='1'&gt;1.管理画面ログイン&lt;/h4&gt;

&lt;p&gt;管理画面にログイン後、画面右上でログインユーザが「Working as Default manager」であることを確認。&lt;/p&gt;

&lt;p&gt;「インベントリ」タブをクリックし、左メニューの上から順に登録していく。&lt;/p&gt;

&lt;h4 id='2'&gt;2.広告主&lt;/h4&gt;

&lt;p&gt;「インベントリ」-「広告主」-「広告主の追加」とリンクを辿り、下記項目に入力して「変更の保存」クリック。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;名称、担当者名、メールアドレス&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上記で登録した広告主をクリックすると広告主の詳細画面が表示されるので、&lt;/p&gt;

&lt;p&gt;「ユーザアクセス」タブ -「アクション▼」-「ユーザを追加する」からユーザを追加。&lt;/p&gt;

&lt;p&gt;※ログアウト後、入力した「ユーザー名」と「パスワード」で広告主ユーザーとしてログインできる。&lt;/p&gt;

&lt;h4 id='3'&gt;3.キャンペーン&lt;/h4&gt;

&lt;p&gt;「インベントリ」-「広告主」で登録済みの広告主の「キャンペーンの追加」をクリック。&lt;/p&gt;

&lt;p&gt;キャンペーン追加画面で下記項目を入力して「変更の保存」をクリック。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;名称            :  (任意)
キャンペーン名 ： 担当者名  (※各選択肢の意味は未確認)
「日付」以下の項目はとりあえずデフォルトのまま。

(2013/01/20,追記) 「他のキャンペーンに対する優先度」が未設定だとアラートメッセージが出るので下記のように設定。
優先度レベル=10、Limit=インプレッション、終了=15000/日&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id='4'&gt;4.バナー&lt;/h4&gt;

&lt;p&gt;「インベントリ」-「キャンペーン」で登録済みキャンペーンの「バナーの追加」をクリック。&lt;/p&gt;

&lt;p&gt;バナーの追加画面で下記項目を入力して「Save changes」をクリック。(今回はGoogle AdSenseを配信してみる)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;バナーの種別 : html OpenX Generic HTML Banner
名称 : (任意)
HTMLバナー - banner code : (ここにGoogle AdSenseの広告ユニットコードを張り付ける)
Alter HTML to enable click tracking for: Rich Media - Google AdSense
Banner display : (Google AdSenseの広告ユニットコードと同じサイズを指定)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;「インベントリ」-「バナー」で、登録済みバナーをクリックし、バナー詳細画面を表示。&lt;/p&gt;

&lt;p&gt;「配信オプション」で下記のような値を設定しておくと、広告が毎回表示されるのでテストの際は便利。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;バナービュー上限数 : 20000 総配信数
バナービュー上限数 : 20000／セッション
カウンタリセット条件 : 15 分間&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href='http://www.openx.com/docs/tutorials/using-google-adsense-with-openx'&gt;マニュアル&lt;/a&gt;&lt;/p&gt;

&lt;h4 id='5_web'&gt;5. Webサイト&lt;/h4&gt;

&lt;p&gt;「インベントリ」-「Webサイト」-「Webサイトの追加」から、広告を配信したいWebサイトを登録する。&lt;/p&gt;

&lt;h4 id='6_'&gt;6. ゾーン&lt;/h4&gt;

&lt;p&gt;「インベントリ」-「Webサイト」で登録済みのWebサイトの「ゾーンの追加」をクリック。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;名称：(任意)
ゾーンタイプ：バナー・ボタン・レクタングル広告
サイズ：(バナーのBanner displayで指定した値と合わせる)&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id='7_'&gt;7. リンク済バナー&lt;/h4&gt;

&lt;p&gt;「インベントリ」-「ゾーン」で、登録済みゾーンの「リンク済みバナー」をクリック。&lt;/p&gt;

&lt;p&gt;プルダウンで、広告主→キャンペーン　の順に選択。(※日本語は文字化けする…)&lt;/p&gt;

&lt;p&gt;○で囲まれた小さな右矢印ボタンをクリックすると、選択したキャンペーンが表示される。&lt;/p&gt;

&lt;p&gt;「バナーの表示」をクリックするとプレビューが表示される。&lt;/p&gt;

&lt;h4 id='8_'&gt;8. 広告コード&lt;/h4&gt;

&lt;p&gt;「インベントリ」-「ゾーン」で登録済みゾーンの「広告表示コードの生成」をクリック。&lt;/p&gt;

&lt;p&gt;表示されたコードをコピーして、表示させたいWebサイトに貼り付ける。&lt;/p&gt;

&lt;h4 id='9_'&gt;9. 疑問&lt;/h4&gt;

&lt;p&gt;上記8の広告コードは、上記5のWebサイト以外のドメインでも表示することができる。&lt;/p&gt;

&lt;p&gt;Webサイトとバナーを紐付けたのはなぜ？レポートのため？&lt;/p&gt;

&lt;h4 id='10_'&gt;10. 参考ページ&lt;/h4&gt;

&lt;p&gt;&lt;a href='http://ohwhsmm7.blog28.fc2.com/blog-entry-206.html'&gt;参考ページ&lt;/a&gt;&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>CentOSコマンド メモ</title>
   <link href="http://sankame.github.com/CentOS/2012/12/31/centos_command"/>
   <updated>2012-12-31T00:00:00+09:00</updated>
   <id>http://sankame.github.com/CentOS/2012/12/31/centos_command</id>
   <content type="html">&lt;p&gt;投稿日：&lt;span&gt;2012年12月31日&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id='centos_'&gt;CentOSコマンド メモ&lt;/h4&gt;

&lt;h5 id='id117'&gt;・ファイル検索&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt; find / -name filename&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id='locate_20130101'&gt;・locateインストール (更新日：2013/01/01)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# which locate
/usr/bin/which: no locate in ・・・以下省略

# パッケージ名がlocateではないので注意。
# yum install mlocate

# which locate
/usr/bin/locate

# 下記コマンドでDBを更新するとlocateが使えるようになる。
# updatedb&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id='date_20130127'&gt;・dateで日時設定 (更新日：2013/01/27)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# 引数を次の順番に設定。→ date [月][日][時間][分][年]

# date 012723232013
2013年  1月 27日 日曜日 23:23:00 JST&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id='centos_20130707'&gt;・CentOSバージョン (更新日：2013/07/07)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# cat /etc/redhat-release&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id='cpu_20130707'&gt;・CPUアーキテクチャ確認 (更新日：2013/07/07)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# grep flags /proc/cpuinfo | grep lm | wc -l
# 上記が0ならCPU 32bit、1ならCPU 64bit
# lm(long mode)フラグがあれば64bit&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id='_20130707'&gt;・カーネルバージョン確認 (更新日：2013/07/07)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# uname -a|grep x86_64|wc -l
# 上記が0なら32bitカーネル、1ならCPU 64bitカーネル
# (x86_64 の場合、64bit)
# (i386/i486/i586/i686 の場合、32bit)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href='http://www.cyberciti.biz/faq/linux-how-to-find-if-processor-is-64-bit-or-not/'&gt;参考ページ&lt;/a&gt;&lt;/p&gt;

&lt;h5 id='php_20130707'&gt;・PHPバージョン (更新日：2013/07/07)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# php -v&lt;/code&gt;&lt;/pre&gt;</content>
 </entry>
 
 <entry>
   <title>PHPサンプル isset関数化</title>
   <link href="http://sankame.github.com/PHP/2012/12/28/php_sample_viaisset"/>
   <updated>2012-12-28T00:00:00+09:00</updated>
   <id>http://sankame.github.com/PHP/2012/12/28/php_sample_viaisset</id>
   <content type="html">&lt;p&gt;投稿日：&lt;span&gt;2012年12月28日&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id='undefined_index_noticeisset'&gt;&amp;#8220;Undefined index&amp;#8221; Noticeを防ぐためのissetが冗長なので関数化。&lt;/h4&gt;
&lt;script src='https://gist.github.com/4389910.js' /&gt;</content>
 </entry>
 
 <entry>
   <title>GitHubPagesが動かない</title>
   <link href="http://sankame.github.com/GitHub/2012/12/27/github_pages_doesnt_work"/>
   <updated>2012-12-27T00:00:00+09:00</updated>
   <id>http://sankame.github.com/GitHub/2012/12/27/github_pages_doesnt_work</id>
   <content type="html">&lt;p&gt;投稿日：&lt;span&gt;2012年12月27日&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id='githubpagesindexhtml'&gt;GitHubPagesでブログを公開しようと、下記ページに従って作業したがindex.htmlすら表示されない…&lt;/h4&gt;

&lt;h4 id='id116'&gt;&lt;a href='http://tokkono.cute.coocan.jp/blog/slow/index.php/programming/github-pages-almost-perfect-guide/'&gt;参考ページ&lt;/a&gt;&lt;/h4&gt;

&lt;h4 id='1github'&gt;1.GitHubに登録したメールアドレスの受信箱をチェック&lt;/h4&gt;

&lt;p&gt;&amp;#8220;Page build failure&amp;#8221;というサブジェクトでGitHubからメールが届いていた。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;The page build failed with the following error:

You need a verified email address in your GitHub account to publish Pages.
You can verify your email addresses from your Settings panel:

https://github.com/settings/emails&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;設定パネルであなたのメアドが正しいことを確認してください、と書いてある。&lt;/p&gt;

&lt;p&gt;上記メール内のリンクを押してページ遷移した後、メールアドレスの確認ボタンをクリック。&lt;/p&gt;

&lt;p&gt;その後、github pagesのページ作成ボタンを押すと下記URLにアクセスできた。 (usernameは読み替え)&lt;/p&gt;

&lt;p&gt;http://username.github.com/&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>OpenXインストール</title>
   <link href="http://sankame.github.com/OpenX/2012/12/24/openx_install"/>
   <updated>2012-12-24T00:00:00+09:00</updated>
   <id>http://sankame.github.com/OpenX/2012/12/24/openx_install</id>
   <content type="html">&lt;p&gt;投稿日：&lt;span&gt;2012年12月24日&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id='pcvmwareplayeropenx'&gt;ローカルPCのVmwarePlayerにOpenXをインストール。&lt;/h4&gt;

&lt;h4 id='id115'&gt;&lt;a href='http://www.openx.com/docs/qsg-install'&gt;マニュアル&lt;/a&gt;に従ってインストールした。&lt;/h4&gt;

&lt;h4 id='1'&gt;1.ソース取得&lt;/h4&gt;

&lt;p&gt;マニュアルの下記リンクからソースをダウンロード。(アンケートあるためwgetでは落とせない)&lt;/p&gt;

&lt;p&gt;Download the latest installation archive from: &lt;a href='http://www.openx.com/publisher/open-source-ad-server'&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ソースをWebサーバへアップし、解凍して公開ディレクトリへ配置する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# mv openx-2.8.10 openx
# mv openx /var/www/html/&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;/var/www/html/openx/varと/var/www/html/openx/www/images　に777を与える。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# cd /var/www/html/openx/
# chmod -R 777 var
# chmod -R 777 ./www/images/&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ブラウザでhttp://localhost/openx/ へアクセスし、Webのインストーラを起動する。&lt;/p&gt;

&lt;p&gt;下記のディレクトリにも書き込み権限が必要というエラーが出た。&lt;/p&gt;

&lt;p&gt;/var/www/html/openx/plugins&lt;/p&gt;

&lt;p&gt;/var/www/html/openx/www/admin/plugins&lt;/p&gt;

&lt;p&gt;画面にコマンドが書いてあったのでそのまま実行。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# chmod -R a+w /var/www/html/openx/plugins
# chmod -R a+w /var/www/html/openx/www/admin/plugins&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id='2registration'&gt;2.Registration&lt;/h4&gt;

&lt;p&gt;Webインストーラを続行、下記項目に入力。&lt;/p&gt;

&lt;p&gt;name, password, e-mail&lt;/p&gt;

&lt;h4 id='3database'&gt;3.Database&lt;/h4&gt;

&lt;p&gt;DBがなかったら作成されると画面に書いてあったが、エラーになったので&lt;/p&gt;

&lt;p&gt;下記コマンドであらかじめDBとユーザを作成。(testxxxxの部分は適当に変更)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# create database testdb;
# grant all on testdb.* to &amp;#39;testuser&amp;#39;@&amp;#39;localhost&amp;#39; identified by &amp;#39;testpassword&amp;#39;;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id='4_configuration'&gt;4. Configuration&lt;/h4&gt;

&lt;p&gt;Webインストーラを続行、下記項目に入力。&lt;/p&gt;

&lt;p&gt;Admin User, Admin User Password&lt;/p&gt;

&lt;h4 id='5_finish'&gt;5. Finish&lt;/h4&gt;

&lt;p&gt;エラーが出たからログを見てね、と書いてあったが無視してそのままcontinue&lt;/p&gt;

&lt;p&gt;※その後、ログを見たがエラーは出力されていなかった。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# view /var/www/html/openx/var/install.log&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id='6_'&gt;6. その他&lt;/h4&gt;

&lt;p&gt;そのまま広告設定の管理画面ぽいところへ遷移。&lt;/p&gt;

&lt;p&gt;ページ上部に下記のエラーメッセージが…&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Warning: date_default_timezone_get(): It is not safe to rely
 on the system&amp;#39;s timezone settings.
 You are *required* to use the date.timezone setting or the
 date_default_timezone_set() function.
 In case you used any of those methods and you are still getting
 this warning, you most likely misspelled the timezone identifier.
 We selected &amp;#39;Asia/Tokyo&amp;#39; for &amp;#39;JST/9.0/no DST&amp;#39; instead in
 /var/www/html/openx/variables.php on line 82 &lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下記ソースに追記する。&lt;/p&gt;

&lt;p&gt;■ソース&lt;/p&gt;

&lt;p&gt;/var/www/html/openx/variables.php&lt;/p&gt;

&lt;p&gt;■追記&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;//追記ここから
if( ! ini_get(&amp;#39;date.timezone&amp;#39;) ){
	date_default_timezone_set(&amp;#39;Asia/Tokyo&amp;#39;);
}
//追記ここまで
	$GLOBALS[&amp;#39;serverTimezone&amp;#39;] = date_default_timezone_get();&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href='http://www.jamescrowley.co.uk/2010/09/12/running-openx-under-iis-with-php-5-3-date-default-timezone-get-errors/'&gt;参考ページ&lt;/a&gt;&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Jekyllとgithubでブログ作成</title>
   <link href="http://sankame.github.com/Jekyll/2012/12/23/jekyll_and_github"/>
   <updated>2012-12-23T00:00:00+09:00</updated>
   <id>http://sankame.github.com/Jekyll/2012/12/23/jekyll_and_github</id>
   <content type="html">&lt;p&gt;投稿日：&lt;span&gt;2012年12月23日&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id='pcvmwareplayerruby_rubygems_jekyll'&gt;ローカルPCのVmwarePlayerにRuby, RubyGems, Jekyllをインストール。&lt;/h4&gt;

&lt;h4 id='jekyllgithub'&gt;Jekyllで作ったブログをGitHubに設置する。&lt;/h4&gt;

&lt;h4 id='1ruby'&gt;1.Rubyインストール&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;# インストール済みか？
# rpm -q ruby
# インストールされていない場合、インストールを行う。
# yum install ruby ruby-devel rdoc irb&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id='2rubygems'&gt;2.RubyGemsインストール&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;# wget http://rubyforge.org/frs/download.php/60718/rubygems-1.3.5.tgz
# tar xzf rubygems-1.3.5.tgz
# cd rubygems-1.3.5
# ruby setup.rb
# インストールされたgemsのバージョン確認。
# gem -v&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id='3jekyll'&gt;3.Jekyllインストール&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;# gem install jekyll&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下記メッセージ(抜粋)でインストール失敗…&lt;/p&gt;

&lt;p&gt;buffer overflow detected&lt;/p&gt;

&lt;h5 id='31_vmware_player192mb__256mb_'&gt;3-1. vmware playerの割り当てメモリ変更。192MB -&amp;gt; 256MB (問題の解決とは無関係と思われる)&lt;/h5&gt;

&lt;h5 id='32_ruby'&gt;3-2. Ruby再インストール&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# cd /etc/yum.repos.d/
# wget http://rubyworks.rubyforge.org/RubyWorks.repo
# yum install ruby

# ruby -v
ruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id='33_jekyll'&gt;3-3. Jekyll再インストール&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# gem install jekyll
ERROR: Error installing jekyll:
liquid requires RubyGems version &amp;gt;= 1.3.7
# またもやエラー。&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id='34_rubygems'&gt;3-4. RubyGems再インストール&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# 上記3-3でRubyGemsのバージョンが違うというエラーが出たのでRuby Forgeで当該バージョンのURLをコピー。
# http://rubyforge.org/frs/?group_id=126

# wget http://rubyforge.org/frs/download.php/60718/rubygems-1.3.7.tgz
# cd rubygems-1.3.7
# ruby setup.rb&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id='35_jekyll'&gt;3-5. Jekyll再インストール&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# gem install jekyll
# 今回はインストール成功。
# jekyll -v
Jekyll 0.11.2&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id='36_'&gt;3-6. &lt;a href='http://help.papertrailapp.com/discussions/questions/114-buffer-overflow-detected'&gt;参考ページ&lt;/a&gt;&lt;/h5&gt;

&lt;h4 id='4jekyll_bootstrap'&gt;4.Jekyll Bootstrap取得&lt;/h4&gt;

&lt;h5 id='1'&gt;1から作ると大変なのでテンプレートを利用。&lt;/h5&gt;

&lt;h5 id='varwwwhtmlapache'&gt;※/var/www/html/はapacheのドキュメントルート&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# cd /var/www/html/jekyll
# git clone http://github.com/plusjade/jekyll-bootstrap.git JEKYLL_HOME&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id='5jekyll'&gt;5.Jekyll起動&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;# jekyll --server --auto

WARNING: Could not read configuration. Using defaults (and options).
No such file or directory - /root/_config.yml
Auto-regenerating enabled: /root -&amp;gt; /root/_site

# 起動失敗…
# エラーメッセージを見ると、_config.ymlが見つからないと言っている。

# Jekyll Bootstrapを配置したディレクトリへ移動して起動すると成功。
# cd /var/www/html/jekyll/JEKYLL_HOME
# jekyll --server --auto
Configuration from /var/www/html/jekyll/JEKYLL_HOME/_config.yml
Auto-regenerating enabled: /var/www/html/jekyll/JEKYLL_HOME -&amp;gt; /var/www/html/jekyll/JEKYLL_HOME/_site

# ブラウザで下記URLへアクセスすると初期画面が表示される。(localhostの部分は環境によって読み替える)
# http://localhost:4000/

# 後は下記ディレクトリに記事ファイルを追加していく。
# /var/www/html/jekyll/JEKYLL_HOME/_posts/YYYY-MM-DD-*.md&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id='6github'&gt;6.GitHubへアップ&lt;/h4&gt;

&lt;h5 id='githtmlgithubpush'&gt;任意のディレクトリをGitの作業ツリーにして、そこからHTMLをGitHubへPushする。&lt;/h5&gt;

&lt;h5 id='id114'&gt;&lt;code&gt;【注意】/var/www/html/jekyll/JEKYLL_HOME/_site/ を作業ツリーにするとJekyllを起動する度に.gitが削除されるので適さない。&lt;/code&gt;&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# Jekyllが生成したHTMLをGit作業ツリー(任意のディレクトリ)へコピーする。
# cp -pr /var/www/html/jekyll/JEKYLL_HOME/_site/* /var/www/html/sankame.github.com/
# cd /var/www/html/sankame.github.com
# git init
# git add .
# git commit -m &amp;quot;initial commit.&amp;quot;
# git remote add origin git@github.com:Sankame/sankame.github.com.git
# git fetch
# git merge -s ours origin/master
# git push&lt;/code&gt;&lt;/pre&gt;</content>
 </entry>
 
 <entry>
   <title>Jekyll Tips1</title>
   <link href="http://sankame.github.com/Jekyll/2012/12/17/jekyll_tips1"/>
   <updated>2012-12-17T00:00:00+09:00</updated>
   <id>http://sankame.github.com/Jekyll/2012/12/17/jekyll_tips1</id>
   <content type="html">&lt;p&gt;投稿日：&lt;span&gt;2012年12月17日&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id='jekyll'&gt;Jekyllの設定に関するメモ。&lt;/h4&gt;

&lt;h4 id='jekyllbootstrap'&gt;JekyllBootstrapの配置先は下記ディレクトリ。(&lt;a href='/Jekyll/2012/12/23/jekyll_and_github/'&gt;関連記事&lt;/a&gt;)&lt;/h4&gt;

&lt;h5 id='varwwwhtmljekylljekyll_home'&gt;/var/www/html/jekyll/JEKYLL_HOME/&lt;/h5&gt;

&lt;h6 id='id109'&gt;・画面ヘッダ部分のナビゲーションを変更したい。&lt;/h6&gt;

&lt;pre&gt;&lt;code&gt;(例)
画面ヘッダ部分にArchiveを表示したくない場合
下記ファイルのヘッダ部分の&amp;quot;group: navigation&amp;quot;を#でコメントアウトする。
/var/www/html/jekyll/JEKYLL_HOME/archive.html&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id='id110'&gt;・記事タイトルに日本語を使いたい。&lt;/h6&gt;

&lt;pre&gt;&lt;code&gt;記事のファイル名に日本語は使えないので、YAMLのFront Matterでtitleを指定する。
(例)
---
layout: page
category: Jekyll
tags: [Ruby, RubyGems, Jekyll, GitHub]
date: 2012-12-23 00:00:00
title: Jekyllとgithubでブログ作成
---&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id='id111'&gt;・ループ回数を制限したい。&lt;/h6&gt;

&lt;pre&gt;&lt;code&gt;limitを使う。

(例)最近の5件だけ記事を表示。

&amp;lt;ul class=&amp;quot;posts&amp;quot;&amp;gt;
  {% for post in site.posts limit:5 %}
    &amp;lt;li&amp;gt;&amp;lt;span&amp;gt;{{ post.date | date_to_string }}&amp;lt;/span&amp;gt; &amp;amp;raquo; &amp;lt;a href=&amp;quot;{{ BASE_PATH }}{{ post.url }}&amp;quot;&amp;gt;{{ post.title }}&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
  {% endfor %}
&amp;lt;/ul&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id='liquid'&gt;・liquidの文法をエスケープしたい。&lt;a href='http://stackoverflow.com/questions/3426182/how-to-escape-liquid-template-tags'&gt;参考ページ&lt;/a&gt;&lt;/h6&gt;

&lt;pre&gt;&lt;code&gt;Markdownの中でif文やliquidの文法をそのまま出力したい場合、下記のタグを使用する。

{% raw %}
エスケープしたい表現
{% endraw %}&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id='id112'&gt;・日付のフォーマット(書式)を変更したい。&lt;a href='http://stackoverflow.com/questions/7395520/jekyll-date-format'&gt;参考ページ&lt;/a&gt;&lt;/h6&gt;

&lt;pre&gt;&lt;code&gt;日本語を使う場合、ファイルをUTF8で保存する。

(例)

{ post.date | date: &amp;quot;%Y年%m月%d日&amp;quot; }&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id='id113'&gt;・文法に関する参考ページ&lt;/h6&gt;

&lt;p&gt;・&lt;a href='https://github.com/mojombo/jekyll/wiki/template-data'&gt;Jekyll変数&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;・&lt;a href='https://github.com/shopify/liquid/wiki/liquid-for-designers'&gt;liquid文法&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;・&lt;a href='http://technetium.matrix.jp/markdown.html'&gt;Markdown記法1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;・&lt;a href='http://www.zone0.ne.jp/2011/markdown-cheatsheet.html'&gt;Markdown記法2&lt;/a&gt;&lt;/p&gt;</content>
 </entry>
 
 
</feed>