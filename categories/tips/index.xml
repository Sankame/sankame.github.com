<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tips on プログラマー備忘録</title>
    <link>/categories/tips/index.xml</link>
    <description>Recent content in Tips on プログラマー備忘録</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <atom:link href="/categories/tips/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Eclipseでタブをスペースに置換</title>
      <link>/blog/2016-10-08-convert_tabs_to_spaces_on_eclipse/</link>
      <pubDate>Sat, 08 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>/blog/2016-10-08-convert_tabs_to_spaces_on_eclipse/</guid>
      <description>

&lt;h3 id=&#34;0-環境&#34;&gt;0. 環境&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;[OS] Mac OS X 10.11.4
[Eclipse] Mars.2 Release (4.5.2)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1-問題&#34;&gt;1. 問題&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;久々にEclipseをさわっていたら、タブをスペースに変換する設定に手間取ったのでメモ。&lt;/p&gt;

&lt;p&gt;(Windowsでもメニュー名を読み替えて頂くと使えます)&lt;/p&gt;

&lt;p&gt;プログラミングで使うインデントに関して、僕はタブ派ですが、職場や&lt;a href=&#34;http://www.gizmodo.jp/2016/09/tab-vs-space.html&#34; target=&#34;_blank&#34;&gt;最近の流れ&lt;/a&gt;からしてもスペースを使わざるを得ないでしょう。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;2-解決&#34;&gt;2. 解決&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Eclipseに標準でついている機能が動かなかったので、AnyEditToolsというプラグインを入れました。&lt;/p&gt;

&lt;p&gt;メニューの [ヘルプ]-[Install new software] をクリック。&lt;/p&gt;

&lt;p&gt;[作業対象]に下記を入力。(anyぐらいまで打つと補完されます)&lt;/p&gt;

&lt;p&gt;&lt;code&gt;anyedit - http://andrei.gmxhome.de/eclipse/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;とりあえず最新バージョンのAnyEditToolsにチェック。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;/assets/posts/img/convert_tabs_to_spaces_on_eclipse/install.jpg&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;50%&#34; height=&#34;50%&#34; title=&#34;インストール&#34; alt=&#34;インストール&#34; src=&#34;/assets/posts/img/convert_tabs_to_spaces_on_eclipse/install.jpg&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[次へ]をクリック。&lt;/p&gt;

&lt;p&gt;途中ライセンスへの同意やセキュリティ警告が出ますが、最後までいくと再起動を求められるのでそのままOKをクリックします。&lt;/p&gt;

&lt;p&gt;起動後、Eclipse上で任意のファイルにタブを入力し、保存したタイミングでスペースに置換されます。&lt;/p&gt;

&lt;p&gt;変わらない場合や細かい設定をしたい場合は下記の設定画面から行って下さい。&lt;/p&gt;

&lt;p&gt;メニューの [Eclipse]-[環境設定] をクリック。&lt;/p&gt;

&lt;p&gt;[一般]-[エディタ]-[AnyEdit Tools]&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;/assets/posts/img/convert_tabs_to_spaces_on_eclipse/settings.jpg&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;50%&#34; height=&#34;50%&#34; title=&#34;設定&#34; alt=&#34;設定&#34; src=&#34;/assets/posts/img/convert_tabs_to_spaces_on_eclipse/settings.jpg&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Eclipseでマークダウンを書く人は[Remove trailing whitespace]のチェックを外しておいたほうがいいかもしれません。&lt;/p&gt;

&lt;p&gt;ファイルフィルタ(上記の[Add Filter])で拡張子mdを除外したり、プロジェクトごとに設定&lt;font color=&#34;green&#34;&gt;(*1)&lt;/font&gt;を変えることもできます。&lt;/p&gt;

&lt;p&gt;&lt;font color=&#34;green&#34;&gt;(*1)プロジェクトごとの設定&lt;/font&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;プロジェクト・エクスプローラーの該当プロジェクトを右クリック。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[プロパティ]-[AnyEdit Tools] をクリック。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[Enable project specific settings]にチェックを入れる。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>.gitignoreをaddできない</title>
      <link>/blog/2016-08-21-how-to-add-gitignore/</link>
      <pubDate>Sun, 21 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>/blog/2016-08-21-how-to-add-gitignore/</guid>
      <description>

&lt;h3 id=&#34;0-環境&#34;&gt;0. 環境&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;[git] 2.7.4 (Apple Git-66)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1-問題&#34;&gt;1. 問題&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;アプリのルートディレクトリに.gitignoreをおいたのですが、git status で見ても追加対象として出てきません。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;2-解決&#34;&gt;2. 解決&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;最初(A)のように書いていたのですが、これだとダメで、[除外設定]→[例外] の順に書かないといけないようです。&lt;/p&gt;

&lt;p&gt;(「. が先頭にあるファイルは除外してね」→「但し .gitignore は例外だよ」)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;(A) 修正前&lt;/li&gt;
&lt;/ul&gt;

&lt;script src=&#34;https://gist.github.com/Sankame/5918ea08bcdc09322907a34434277f08.js&#34;&gt;&lt;/script&gt;

&lt;ul&gt;
&lt;li&gt;(B) 修正後&lt;/li&gt;
&lt;/ul&gt;

&lt;script src=&#34;https://gist.github.com/Sankame/dc68236f9088ca8964f43009cae285cd.js&#34;&gt;&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>ショートカットのファイルパス</title>
      <link>/blog/2016-07-16-windows_shortcut_path/</link>
      <pubDate>Sat, 16 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>/blog/2016-07-16-windows_shortcut_path/</guid>
      <description>

&lt;h3 id=&#34;0-環境&#34;&gt;0. 環境&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;[OS] Windows 7
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1-課題&#34;&gt;1. 課題&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ファイル(①)に対してショートカット(②)を作った場合・・・&lt;/p&gt;

&lt;p&gt;① C:\tmp\test.txt&lt;/p&gt;

&lt;p&gt;② C:\tmp2\test.txt - ショートカット&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;エクスプローラーやスタートメニューの「ファイル名を指定して実行」から②を指定してもエラーになります。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;/assets/posts/img/windows_shortcut_path/exec-file.jpg&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;50%&#34; height=&#34;50%&#34; title=&#34;ショートカットのファイルパス&#34; alt=&#34;ショートカットのファイルパス&#34; src=&#34;/assets/posts/img/windows_shortcut_path/exec-file.jpg&#34;&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;これは下記のように &lt;font color=&#39;red&#39;&gt;&amp;rdquo;.lnk&amp;rdquo;&lt;/font&gt; をつけると解決します。&lt;/p&gt;

&lt;p&gt;&lt;font color=&#39;red&#39;&gt;C:\tmp2\test.txt - ショートカット.lnk&lt;/font&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;OSの内部的にはこのパスになっているんだと思います・・・&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>AppleWatch実機でサンプル実行</title>
      <link>/blog/2016-05-05-running_it_on_apple_watch/</link>
      <pubDate>Thu, 05 May 2016 00:00:00 +0000</pubDate>
      
      <guid>/blog/2016-05-05-running_it_on_apple_watch/</guid>
      <description>

&lt;h3 id=&#34;0-環境&#34;&gt;0.環境&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;[OS] Mac OS X 10.11.4
[IDE] Xcode 7.3
[iOS] 9.3
[watchOS] 2.1
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1-問題&#34;&gt;1.問題&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;AppleWatch用のサンプルプログラムを実機でも動かしたくなりました。&lt;/p&gt;

&lt;p&gt;最初下記の環境だったのですが、Xcodeでサンプルプログラムを実行すると、&amp;rdquo;paired device unavailable for development&amp;rdquo; というエラー出ました。&lt;/p&gt;

&lt;p&gt;原因が分からなかったので、とりあえずiOSを9.3にバージョンアップしました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[OS] Mac OS X 10.11.4
[IDE] Xcode 7.2.1
[iOS (iPhone)] 9.1
[watchOS (AppleWatch)] 2.1

※MacとiPhoneはUSBケーブルで接続。
※iPhoneとAppleWatchはペアリング済み。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;その後、今度は &amp;ldquo;Could not find Developer Disk Image&amp;rdquo; というエラーで先へ進めず。&lt;/p&gt;

&lt;p&gt;Xcodeの下記フォルダに9.3がないことが原因らしいのですが、そもそもXcode 7.2はiOS9.3には対応していないようです。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Finderを開き、左ペインの&amp;quot;アプリケーション&amp;quot;を選択すると、右ペインにXcode.appが表示されるので右クリックで&amp;quot;パッケージの内容を表示&amp;quot;
Contents/Developer/Platforms/iPhoneOS.platform/DeviceSupport/
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;2-xcodeバージョンアップ&#34;&gt;2.Xcodeバージョンアップ&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Xcodeを 7.3に上げることにしました。&lt;/p&gt;

&lt;p&gt;・LaunchpadでXcodeを長押し後、Xcodeの左上の×印をクリックしアンインストール。&lt;/p&gt;

&lt;p&gt;　(Dockに残っているけど無視)&lt;/p&gt;

&lt;p&gt;・OS再起動。&lt;/p&gt;

&lt;p&gt;・App StoreからXcodeをインストール。&lt;/p&gt;

&lt;p&gt;　(Macをwifiルーターの近くに持って行って、電源コードをつないで…　終わるまで1時間以上かかりました)&lt;/p&gt;

&lt;p&gt;Launchpadでインストールが終わったことを確認して、Xcodeを起動すると無事7.3になってました。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Xcodeでサンプルプログラムをビルド＆起動。&lt;/p&gt;

&lt;p&gt;Xcode再インストール後は下記の警告が出ますが &amp;ldquo;Fix issue&amp;rdquo; をクリックして先へ進みます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Failed to code sign &amp;quot;hello-watch WatchKit App&amp;quot;.

No provisioning profiles with a valid signing identity (i.e. certificate and private key pair) matching the bundle identifier “home.hello-watch.watchkitapp” were found.

Xcode can attempt to fix this issue. This will reset your code signing and provisioning settings to recommended values and resolve issues with signing identities and provisioning profiles.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ビルドは通ったようですが、起動時に下記エラーが出ました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Error Launching &#39;hello-watch WatchKit Extension&#39;
Apple Watch is locked. Unlock the device and launch again.
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Error Launching &#39;hello-watch WatchKit Extension&#39;
The operation couldn’t be completed. (FBSOpenApplicationErrorDomain error 3.)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;開発中アプリなのでAppleWatch側で許可が必要なようです。&lt;/p&gt;

&lt;p&gt;見慣れないアイコンが増えているので、これをタップ。(オレンジの線)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;/assets/posts/img/running_it_on_apple_watch/installed_sample.jpg&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;30%&#34; height=&#34;30%&#34; title=&#34;AppleWatchサンプルアプリ&#34; alt=&#34;AppleWatchサンプルアプリ&#34; src=&#34;/assets/posts/img/running_it_on_apple_watch/installed_sample.jpg&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;ldquo;信頼されていないAppデベロッパ&amp;rdquo;という警告が出るので、&amp;rdquo;信頼する&amp;rdquo; をタップ。&lt;/p&gt;

&lt;p&gt;再びXcodeでビルド＆起動すると、AppleWatch側で実行されるようになりました。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;参考ページ&#34;&gt;参考ページ&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;①&lt;a href=&#34;http://stackoverflow.com/questions/33380684/ios-watch-kit-paired-device-unavailable-for-development&#34; target=&#34;_blank&#34;&gt;iOS: Watch Kit paired device unavailable for development&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;②&lt;a href=&#34;http://stackoverflow.com/questions/33885080/xcode-7-1-with-ios-9-2-error-could-not-find-developer-disk-image&#34; target=&#34;_blank&#34;&gt;Xcode 7.1 with iOS 9.2 Error (Could not find Developer Disk image) [duplicate]&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;③&lt;a href=&#34;http://swift-bettychang.hatenadiary.jp/entry/2016/03/26/045524&#34; target=&#34;_blank&#34;&gt;Xcode7.3にアップデートできない&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;④&lt;a href=&#34;http://stackoverflow.com/questions/34384015/fbsopenapplicationerrordomain-error-3-when-trying-to-launch-a-watch-kit-app-on-a&#34; target=&#34;_blank&#34;&gt;FBSOpenApplicationErrorDomain error 3 when trying to launch a watch kit app on a physical device&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>AppleWatchサンプルプログラム</title>
      <link>/blog/2016-05-02-apple_watch_sample/</link>
      <pubDate>Mon, 02 May 2016 00:00:00 +0000</pubDate>
      
      <guid>/blog/2016-05-02-apple_watch_sample/</guid>
      <description>

&lt;h3 id=&#34;0-環境&#34;&gt;0.環境&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;[OS] Mac OS X 10.11.4
[IDE] Xcode 7.2.1
[watchOS] 2.1
[Swift] 2.1.1
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1-完成イメージ&#34;&gt;1.完成イメージ&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;メイン画面からサブ画面へ行って戻るサンプルを作成します。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;/assets/posts/img/apple_watch_sample/result.png&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;50%&#34; height=&#34;50%&#34; title=&#34;完成イメージ&#34; alt=&#34;完成イメージ&#34; src=&#34;/assets/posts/img/apple_watch_sample/result.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;2-プロジェクト作成&#34;&gt;2.プロジェクト作成&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Xcodeのスプラッシュ画面で&amp;rdquo;Create a new Xcode project&amp;rdquo;を選択。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;/assets/posts/img/apple_watch_sample/splash.png&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;50%&#34; height=&#34;50%&#34; title=&#34;スプラッシュ画面&#34; alt=&#34;スプラッシュ画面&#34; src=&#34;/assets/posts/img/apple_watch_sample/splash.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;watchOS Applicationを選択。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;/assets/posts/img/apple_watch_sample/project_template.png&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;50%&#34; height=&#34;50%&#34; title=&#34;テンプレート選択&#34; alt=&#34;テンプレート選択&#34; src=&#34;/assets/posts/img/apple_watch_sample/project_template.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;適当なプロジェクト名を入力して下さい。&lt;/p&gt;

&lt;p&gt;サンプルなので&amp;rdquo;Notification&amp;rdquo;と&amp;rdquo;Glance&amp;rdquo;のチェックは外します。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;/assets/posts/img/apple_watch_sample/project_options.png&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;50%&#34; height=&#34;50%&#34; title=&#34;オプション選択&#34; alt=&#34;オプション選択&#34; src=&#34;/assets/posts/img/apple_watch_sample/project_options.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;プロジェクトを作成するフォルダを選択して下さい。&lt;/p&gt;

&lt;p&gt;下記のように /app/ を指定するとプロジェクトのパスは /app/hello-watch/ になります。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;/assets/posts/img/apple_watch_sample/folder.png&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;50%&#34; height=&#34;50%&#34; title=&#34;フォルダ選択&#34; alt=&#34;フォルダ選択&#34; src=&#34;/assets/posts/img/apple_watch_sample/folder.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;3-実装&#34;&gt;3.実装&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;左のプロジェクトナビゲーターで&amp;rdquo;Interface.storyboard&amp;rdquo;を選択。(A-1)&lt;/p&gt;

&lt;p&gt;デフォルトで用意されている Interface Controller を選択して、Identifier に適当な値(例ではIC1)を入力。 (A-2、A-3、A-4)&lt;/p&gt;

&lt;p&gt;ドラッグ＆ドロップで Label と Button を Interface Controller 上に配置します。 (A-5)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;/assets/posts/img/apple_watch_sample/ready_controller.png&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;100%&#34; height=&#34;100%&#34; title=&#34;コントローラ準備&#34; alt=&#34;コントローラ準備&#34; src=&#34;/assets/posts/img/apple_watch_sample/ready_controller.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ドラッグ＆ドロップで Interface Controller をもう一つ追加。(B-1)&lt;/p&gt;

&lt;p&gt;追加した方を選択し、Identifier に適当な値(例ではIC2)を入力。 (B-2、B-3)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;/assets/posts/img/apple_watch_sample/ready_controller2.png&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;80%&#34; height=&#34;80%&#34; title=&#34;コントローラ準備&#34; alt=&#34;コントローラ準備&#34; src=&#34;/assets/posts/img/apple_watch_sample/ready_controller2.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;上記のIC2に Label を配置し、IC2と入力しておきます。&lt;/p&gt;

&lt;p&gt;区別するため、IC1に配置した Label にはIC1と入力します。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;/assets/posts/img/apple_watch_sample/ready_controller3.png&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;50%&#34; height=&#34;50%&#34; title=&#34;コントローラ準備&#34; alt=&#34;コントローラ準備&#34; src=&#34;/assets/posts/img/apple_watch_sample/ready_controller3.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;アシスタントエディターを表示します。(C-1)&lt;/p&gt;

&lt;p&gt;Button を右クリックし、[Sent Actions]-[selector] からドラッグ＆ドロップでエディターまで線を伸ばします。(C-2)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;/assets/posts/img/apple_watch_sample/coding1.png&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;100%&#34; height=&#34;100%&#34; title=&#34;実装1&#34; alt=&#34;実装1&#34; src=&#34;/assets/posts/img/apple_watch_sample/coding1.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;適当なメソッド名を入力します。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;/assets/posts/img/apple_watch_sample/coding2.png&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;80%&#34; height=&#34;80%&#34; title=&#34;実装2&#34; alt=&#34;実装2&#34; src=&#34;/assets/posts/img/apple_watch_sample/coding2.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Button タップ時に呼ばれるメソッドが追加されました。(D-1、D-2)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;/assets/posts/img/apple_watch_sample/coding3.png&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;80%&#34; height=&#34;80%&#34; title=&#34;実装3&#34; alt=&#34;実装3&#34; src=&#34;/assets/posts/img/apple_watch_sample/coding3.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;上記で追加したメソッドにIC2へ遷移するコードを記述します。&lt;/p&gt;

&lt;p&gt;(IC1へ戻るリンクは自動で作成されます)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;@IBAction func onPushButton() {
    pushControllerWithName(&amp;quot;IC2&amp;quot;, context: &amp;quot;some messages&amp;quot;)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;シュミレーターで Apple Watch を選択し、[Command]-[R]キーを押すと数十秒後にプログラムが実行されます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;/assets/posts/img/apple_watch_sample/run.png&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;100%&#34; height=&#34;100%&#34; title=&#34;実行&#34; alt=&#34;実行&#34; src=&#34;/assets/posts/img/apple_watch_sample/run.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;実機で起動させた際の&lt;a href=&#34;/applewatch/running_it_on_apple_watch/&#34; target=&#34;_blank&#34;&gt;記事はこちら。&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;参考ページ&#34;&gt;参考ページ&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.haranicle.net/watchkit_push/&#34; target=&#34;_blank&#34;&gt;WatchKitでpush画面遷移&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>setVibrateメソッドの使い方</title>
      <link>/blog/2016-02-08-notification_compat_builder_setvibrate/</link>
      <pubDate>Mon, 08 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>/blog/2016-02-08-notification_compat_builder_setvibrate/</guid>
      <description>

&lt;h3 id=&#34;環境&#34;&gt;環境&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;[Android SDK]  API 21: Android 5.0(Lollipop)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;実装&#34;&gt;実装&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;スマートウォッチ(Android Wear)に通知を送るため、NotificationCompat.Builder の&lt;/p&gt;

&lt;p&gt;setVibrateメソッドを使った際の自分用メモ。&lt;/p&gt;

&lt;p&gt;バイブレーション・パターンの設定は下記仕様ですが、&lt;/p&gt;

&lt;p&gt;long型配列の&lt;font color=&#34;green&#34;&gt;&lt;b&gt;1つ目の要素を除いて、偶数は振動、奇数は休止&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;と覚えておけば良さそうです。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;NotificationCompat.Builder builder = new NotificationCompat.Builder( getApplicationContext() );

// 単位はミリ秒
// 
// 要素1 : 振動開始までの時間
// 要素2 : 振動
// 要素3 : 休止
// 要素4 : (これ以降は要素2-3の繰り返し)
builder.setVibrate(new long[]{0, 500, 250, 500, 250, 1000});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下記の例だと、ツー・ツ・ツ　みたいな感じになります。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;// 1秒振動、0.1秒休止、0.1秒振動、0.05秒休止、0.1秒振動
builder.setVibrate(new long[]{0, 1000, 100, 100, 50, 100});
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;関連リンク&#34;&gt;関連リンク&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html&#34; target=&#34;_blank&#34;&gt;API : NotificationCompat.Builder&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Googleスプレッドシート  行ごとに背景色を変える</title>
      <link>/blog/2015-11-28-google_sheets_colors_for_lines/</link>
      <pubDate>Sat, 28 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>/blog/2015-11-28-google_sheets_colors_for_lines/</guid>
      <description>

&lt;h3 id=&#34;googleスプレッドシート-設定方法&#34;&gt;Googleスプレッドシート  設定方法&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;あるセルに値を入れることで、行全体の色を変える場合の設定です。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;下記のようなリストを例に、完了日を入れるだけで項目を自動的にグレーアウトします。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;/assets/posts/img/google_sheets_colors_for_lines/リスト.png&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;50%&#34; height=&#34;50%&#34; title=&#34;リスト&#34; alt=&#34;リスト&#34; src=&#34;/assets/posts/img/google_sheets_colors_for_lines/リスト.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;メニューで「条件付き書式」を選択。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;/assets/posts/img/google_sheets_colors_for_lines/条件付き書式.png&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;50%&#34; height=&#34;50%&#34; title=&#34;条件付き書式&#34; alt=&#34;条件付き書式&#34; src=&#34;/assets/posts/img/google_sheets_colors_for_lines/条件付き書式.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;右端に枠が表示されます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;/assets/posts/img/google_sheets_colors_for_lines/条件付き書式設定ルール.png&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;30%&#34; height=&#34;30%&#34; title=&#34;条件付き書式設定ルール&#34; alt=&#34;条件付き書式設定ルール&#34; src=&#34;/assets/posts/img/google_sheets_colors_for_lines/条件付き書式設定ルール.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;まず範囲を選択します。今回はヘッダーを除いたデータ部分を指定。(A4:C6)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;次に書式設定の条件を指定します。&lt;/p&gt;

&lt;p&gt;例では「C列の4行目以降に値がある」場合にtrueを返すようにします。&lt;/p&gt;

&lt;p&gt;(C列を固定するため絶対参照の$マークをつけ、4行目からは相対参照にしたいため下記のように指定)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;=IF($C4 &amp;lt;&amp;gt; &amp;quot;&amp;quot;, true, false)
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;最後に書式設定で上記がtrueの場合に適用される書式を設定します。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;以上で「完了日」に文字列を入れると行全体をグレーにする設定ができました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;/assets/posts/img/google_sheets_colors_for_lines/条件付き書式設定完了.png&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;70%&#34; height=&#34;70%&#34; title=&#34;条件付き書式設定完了&#34; alt=&#34;条件付き書式設定完了&#34; src=&#34;/assets/posts/img/google_sheets_colors_for_lines/条件付き書式設定完了.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>【Laravel】integerメソッドの引数</title>
      <link>/blog/2015-05-27-laravel_migration_integer_args/</link>
      <pubDate>Wed, 27 May 2015 00:00:00 +0000</pubDate>
      
      <guid>/blog/2015-05-27-laravel_migration_integer_args/</guid>
      <description>

&lt;h3 id=&#34;0-環境&#34;&gt;0.環境&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;[PHP]     5.4.17
[Laravel] 4.1.30
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1-内容&#34;&gt;1.内容&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Fluentテーブルビルダーのintegerメソッドの引数について、意外と探すのに手間取ったのでメモ。&lt;/p&gt;

&lt;p&gt;```php
/**&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;@param $column        テーブルのカラム名&lt;/li&gt;
&lt;li&gt;@param $autoIncrement 自動採番するかどうか&lt;/li&gt;
&lt;li&gt;@param $unsigned      0以上の正の整数とするか
*/
public function integer($column, $autoIncrement = false, $unsigned = false)
```&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;参考にしたページ&#34;&gt;※参考にしたページ&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/28895454/laravel-migration-incorrect-table-definition&#34; target=&#34;_blank&#34;&gt;Laravel Migration incorrect table definition&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>wget ファイル名を指定してダウンロード</title>
      <link>/blog/2014-07-03-wget_option_O/</link>
      <pubDate>Thu, 03 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>/blog/2014-07-03-wget_option_O/</guid>
      <description>

&lt;h5 id=&#34;o-オプションを使って-ダウンロードファイル名を指定します&#34;&gt;-O オプションを使って、ダウンロードファイル名を指定します。&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;下記例では MyWget という名前に変更。&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;	# wget -O MyWget http://ftp.gnu.org/gnu/wget/wget-1.15.tar.gz
	# ls
	# -rw-r--r--  1 root  root  3417936  1月 19 19:17 MyWget
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>PHPメモ</title>
      <link>/blog/2014-02-02-php_sample/</link>
      <pubDate>Sun, 02 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>/blog/2014-02-02-php_sample/</guid>
      <description>

&lt;h4 id=&#34;phpメモ-自分用&#34;&gt;PHPメモ (自分用)&lt;/h4&gt;

&lt;h5 id=&#34;1-extensionが追加されたかコマンドラインで確認&#34;&gt;(1) extensionが追加されたかコマンドラインで確認&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;下記は例。OAuthの部分は任意のextension名に置き換える。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# php -r &amp;quot;echo phpinfo();&amp;quot;|grep OAuth
OAuth
OAuth support =&amp;gt; enabled
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Gitコマンド メモ</title>
      <link>/blog/2013-09-09-git_command/</link>
      <pubDate>Mon, 09 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>/blog/2013-09-09-git_command/</guid>
      <description>

&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&#34;color:#d14; float:right;&#34;&gt;更新日：2016年11月13日&lt;/span&gt;&lt;/p&gt;

&lt;h2 id=&#34;gitコマンド-メモ-自分用&#34;&gt;Gitコマンド メモ (自分用)&lt;/h2&gt;

&lt;h3 id=&#34;1-gitignoreファイル-参考ページ-http-www-omakase-org-misc-gitignore-html&#34;&gt;(1) .gitignoreファイル &lt;a href=&#34;http://www.omakase.org/misc/gitignore.html&#34;&gt;参考ページ&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;gitの管理外にしたいファイルを定義。下記のようにディレクトリ指定も可能。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# view .gitignore
app/logs/
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;2-インデックスから降ろす-git管理外にする&#34;&gt;(2) インデックスから降ろす(git管理外にする)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;インデックスから降ろすだけ。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# git rm --cached -f hoge.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;インデックスから降ろして、ファイルを物理削除。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# git rm -f hoge.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;3-ブランチ操作-2013-10-07&#34;&gt;(3) ブランチ操作(2013/10/07)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;今いるブランチは？&lt;/p&gt;

&lt;p&gt;```sh&lt;/p&gt;

&lt;h1 id=&#34;git-branch&#34;&gt;git branch&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;master
```&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ブランチtest1を作って、test1へ切り替える。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# git branch test1
# git checkout test1
Switched to branch &#39;test1&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;masterブランチへ戻る。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# git checkout master
Switched to branch &#39;master&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;使わなくなったブランチtest1を削除。&lt;/p&gt;

&lt;p&gt;```sh&lt;/p&gt;

&lt;h1 id=&#34;git-branch-d-test1&#34;&gt;git branch -d test1&lt;/h1&gt;

&lt;p&gt;Deleted branch test1 (was 0854f22).&lt;/p&gt;

&lt;h1 id=&#34;git-branch-1&#34;&gt;git branch&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;master
```&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;4-githubからソースを取得-2013-10-07&#34;&gt;(4) GitHubからソースを取得(2013/10/07)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;4-1.GitHubで対象のリポジトリに移動後、画面右下のボタン(下記)をクリックしてURLをクリップボードにコピー。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/assets/posts/img/git_command/github-clone.jpg&#34; alt=&#34;github-clone&#34; title=&#34;github-clone&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;4-2.git clone の後に上記4-1でコピーしたURLを貼り付ける。&lt;/p&gt;

&lt;p&gt;予めGitHubに登録した公開鍵のパスフレーズを入力。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# git clone git@github.com:Sankame/test.git
Cloning into &#39;test&#39;...
Enter passphrase for key &#39;/root/.ssh/id_rsa&#39;: 
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;5-ローカル変更の取り消し-2014-02-24&#34;&gt;(5) ローカル変更の取り消し(2014/02/24)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ファイル指定でローカル変更を取り消し。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# git checkout filename
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;全てのローカル変更を取り消し。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# git checkout .
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;6-リモートのブランチをローカルに取り込む-2016-11-13&#34;&gt;(6) リモートのブランチをローカルに取り込む(2016/11/13)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;リモートブランチを全て表示。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# git branch -a
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;最新情報を取得。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# git fetch
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ローカルブランチ名を指定してリモートブランチをチェックアウトし、指定したローカルブランチへ切り替え。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# git checkout -b branch_name origin/branch_name
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;7-ローカル変更を破棄してリモートの最新を取り込む-2016-11-13&#34;&gt;(7) ローカル変更を破棄してリモートの最新を取り込む(2016/11/13)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;とにかくリモートの情報で上書きしたい時。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# git fetch origin
# git reset --hard origin/master
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>MySQLコマンド メモ</title>
      <link>/blog/2013-08-26-mysql_command/</link>
      <pubDate>Mon, 26 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>/blog/2013-08-26-mysql_command/</guid>
      <description>

&lt;h4 id=&#34;mysqlコマンド-メモ&#34;&gt;MySQLコマンド メモ&lt;/h4&gt;

&lt;h5 id=&#34;webサーバとdbサーバが1台のマシンにある場合によく行う操作&#34;&gt;WebサーバとDBサーバが1台のマシンにある場合によく行う操作。&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# そのマシンのMySQLサーバにrootで接続
# (パスワードを聞かれるので入力してEnter)
# mysql -h 127.0.0.1 -u root -p

mysql&amp;gt; -- UTF8でDBを作成し、接続ユーザを作成 (先頭がtestの文字は読み替えて下さい)
mysql&amp;gt; create database testdb default character set utf8;
mysql&amp;gt; grant all on testdb.* to &#39;testuser&#39;@&#39;localhost&#39; identified by &#39;testpassword&#39;;
mysql&amp;gt; flush privileges;

mysql&amp;gt; -- 別マシンからDBへ接続する必要がある場合は、以下のように別ユーザを作成
mysql&amp;gt; -- (192.168.0.1の部分を別マシンのIPに読み替える)
mysql&amp;gt; grant all on testdb.* to testuser@192.168.0.1 identified by &#39;testpassword&#39;;

mysql&amp;gt; -- 作成したDBに切り替え、テーブルを作成
mysql&amp;gt; use testdb;

mysql&amp;gt; DROP TABLE IF EXISTS `users`;

mysql&amp;gt; CREATE TABLE `users` (
mysql&amp;gt;   `id`         bigint unsigned NOT NULL AUTO_INCREMENT PRIMARY KEY,
mysql&amp;gt;   `username`   varchar(32) NOT NULL
mysql&amp;gt; ) ENGINE=InnoDB;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>CentOSコマンド メモ</title>
      <link>/blog/2012-12-31-centos_command/</link>
      <pubDate>Mon, 31 Dec 2012 00:00:00 +0000</pubDate>
      
      <guid>/blog/2012-12-31-centos_command/</guid>
      <description>

&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&#34;color:#d14; float:right;&#34;&gt;更新日：2015年03月18日&lt;/span&gt;&lt;/p&gt;

&lt;h4 id=&#34;centosコマンド-メモ&#34;&gt;CentOSコマンド メモ&lt;/h4&gt;

&lt;h5 id=&#34;ファイル検索&#34;&gt;・ファイル検索&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt; find / -name filename
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;locateインストール-更新日-2013-01-01&#34;&gt;・locateインストール (更新日：2013/01/01)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# which locate
/usr/bin/which: no locate in ・・・以下省略

# パッケージ名がlocateではないので注意。
# yum install mlocate

# which locate
/usr/bin/locate

# 下記コマンドでDBを更新するとlocateが使えるようになる。
# updatedb
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;dateで日時設定-更新日-2013-01-27&#34;&gt;・dateで日時設定 (更新日：2013/01/27)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# 引数を次の順番に設定。→ date [月][日][時間][分][年]

# date 012723232013
2013年  1月 27日 日曜日 23:23:00 JST
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;centosバージョン-更新日-2013-07-07&#34;&gt;・CentOSバージョン (更新日：2013/07/07)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# cat /etc/redhat-release
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;cpuアーキテクチャ確認-更新日-2013-07-07&#34;&gt;・CPUアーキテクチャ確認 (更新日：2013/07/07)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# grep flags /proc/cpuinfo | grep lm | wc -l
# 上記が0ならCPU 32bit、1ならCPU 64bit
# lm(long mode)フラグがあれば64bit
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;カーネルバージョン確認-更新日-2013-07-07&#34;&gt;・カーネルバージョン確認 (更新日：2013/07/07)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# uname -a|grep x86_64|wc -l
# 上記が0なら32bitカーネル、1ならCPU 64bitカーネル
# (x86_64 の場合、64bit)
# (i386/i486/i586/i686 の場合、32bit)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://www.cyberciti.biz/faq/linux-how-to-find-if-processor-is-64-bit-or-not/&#34;&gt;参考ページ&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&#34;phpバージョン-更新日-2013-07-07&#34;&gt;・PHPバージョン (更新日：2013/07/07)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# php -v
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;apacheバージョン-更新日-2013-09-16&#34;&gt;・Apacheバージョン (更新日：2013/09/16)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# httpd -v
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;svnバージョン-更新日-2013-09-26&#34;&gt;・SVNバージョン (更新日：2013/09/26)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# svn --version --quiet
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;historyコマンドに日時-タイムスタンプ-追加-更新日-2013-09-24&#34;&gt;・historyコマンドに日時(タイムスタンプ)追加 (更新日：2013/09/24)&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1.bashプロファイルを編集。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim ~/.bash_profile
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;2.以下を記述。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;HISTTIMEFORMAT=&#39;%Y-%m-%d %T &#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;3.すぐに反映させたい場合は以下のコマンドを実行。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ source ~/.bash_profile
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;port使用状況チェック-更新日-2014-05-07&#34;&gt;・port使用状況チェック (更新日：2014/05/07)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;$ netstat -anp
$ netstat -anp | grep 【ポート番号】

-a：接続待ち状態にあるソケットも、接続待ち状態にないソケットも表示する。
-n：ホスト・ポート・ユーザーなどの名前を解決せずに、数字のアドレスで表示する。
-p：各ソケットが属しているプログラムの PID と名前が表示される。
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;crontabバックアップ-更新日-2015-03-18&#34;&gt;・crontabバックアップ (更新日：2015/03/18)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;$ crontab -l &amp;gt; crontab.bak
$ crontab -e

クーロンの設定を変更後、バックアップとの差分を見る。

$ crontab -l | diff crontab.bak -
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Jekyll Tips1</title>
      <link>/blog/2012-12-17-jekyll_tips1/</link>
      <pubDate>Mon, 17 Dec 2012 00:00:00 +0000</pubDate>
      
      <guid>/blog/2012-12-17-jekyll_tips1/</guid>
      <description>

&lt;h4 id=&#34;jekyllの設定に関するメモ&#34;&gt;Jekyllの設定に関するメモ。&lt;/h4&gt;

&lt;h4 id=&#34;jekyllbootstrapの配置先は下記ディレクトリ-関連記事-jekyll-2012-12-23-jekyll-and-github&#34;&gt;JekyllBootstrapの配置先は下記ディレクトリ。(&lt;a href=&#34;/Jekyll/2012/12/23/jekyll_and_github/&#34;&gt;関連記事&lt;/a&gt;)&lt;/h4&gt;

&lt;h5 id=&#34;var-www-html-jekyll-jekyll-home&#34;&gt;/var/www/html/jekyll/JEKYLL_HOME/&lt;/h5&gt;

&lt;h6 id=&#34;画面ヘッダ部分のナビゲーションを変更したい&#34;&gt;・画面ヘッダ部分のナビゲーションを変更したい。&lt;/h6&gt;

&lt;pre&gt;&lt;code&gt;(例)
画面ヘッダ部分にArchiveを表示したくない場合
下記ファイルのヘッダ部分の&amp;quot;group: navigation&amp;quot;を#でコメントアウトする。
/var/www/html/jekyll/JEKYLL_HOME/archive.html
&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;記事タイトルに日本語を使いたい&#34;&gt;・記事タイトルに日本語を使いたい。&lt;/h6&gt;

&lt;pre&gt;&lt;code&gt;記事のファイル名に日本語は使えないので、YAMLのFront Matterでtitleを指定する。
(例)
---
layout: page
category: Jekyll
tags: [Ruby, RubyGems, Jekyll, GitHub]
date: 2012-12-23 00:00:00
title: Jekyllとgithubでブログ作成
---
&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;ループ回数を制限したい&#34;&gt;・ループ回数を制限したい。&lt;/h6&gt;

&lt;pre&gt;&lt;code&gt;limitを使う。

(例)最近の5件だけ記事を表示。
{% raw %}
&amp;lt;ul class=&amp;quot;posts&amp;quot;&amp;gt;
  {% for post in site.posts limit:5 %}
    &amp;lt;li&amp;gt;&amp;lt;span&amp;gt;{{ post.date | date_to_string }}&amp;lt;/span&amp;gt; &amp;amp;raquo; &amp;lt;a href=&amp;quot;{{ BASE_PATH }}{{ post.url }}&amp;quot;&amp;gt;{{ post.title }}&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
  {% endfor %}
&amp;lt;/ul&amp;gt;
{% endraw %}
&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;liquidの文法をエスケープしたい-参考ページ-http-stackoverflow-com-questions-3426182-how-to-escape-liquid-template-tags&#34;&gt;・liquidの文法をエスケープしたい。&lt;a href=&#34;http://stackoverflow.com/questions/3426182/how-to-escape-liquid-template-tags&#34;&gt;参考ページ&lt;/a&gt;&lt;/h6&gt;

&lt;pre&gt;&lt;code&gt;Markdownの中でif文やliquidの文法をそのまま出力したい場合、下記のタグを使用する。

{{ &amp;quot;{% raw &amp;quot; }}%}
エスケープしたい表現
{{ &amp;quot;{% endraw &amp;quot; }}%}
&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;日付のフォーマット-書式-を変更したい-参考ページ-http-stackoverflow-com-questions-7395520-jekyll-date-format&#34;&gt;・日付のフォーマット(書式)を変更したい。&lt;a href=&#34;http://stackoverflow.com/questions/7395520/jekyll-date-format&#34;&gt;参考ページ&lt;/a&gt;&lt;/h6&gt;

&lt;pre&gt;&lt;code&gt;日本語を使う場合、ファイルをUTF8で保存する。

(例)
{% raw %}
{ post.date | date: &amp;quot;%Y年%m月%d日&amp;quot; }
{% endraw %}
&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;文法に関する参考ページ&#34;&gt;・文法に関する参考ページ&lt;/h6&gt;

&lt;p&gt;・&lt;a href=&#34;https://github.com/mojombo/jekyll/wiki/template-data&#34;&gt;Jekyll変数&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;・&lt;a href=&#34;https://github.com/shopify/liquid/wiki/liquid-for-designers&#34;&gt;liquid文法&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;・&lt;a href=&#34;http://technetium.matrix.jp/markdown.html&#34;&gt;Markdown記法1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;・&lt;a href=&#34;http://www.zone0.ne.jp/2011/markdown-cheatsheet.html&#34;&gt;Markdown記法2&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>