<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
<channel>
        <title>Text Blog</title>
        <description>Text Blog - sankame</description>
        <link>http://sankame.github.io/</link>
        <link>http://sankame.github.io/</link>
        <lastBuildDate>2014-07-16T22:07:33+09:00</lastBuildDate>
        <pubDate>2014-07-16T22:07:33+09:00</pubDate>
        <ttl>1800</ttl>


        <item>
                <title>【Laravel】AjaxでPOSTできない</title>
                <description>
&lt;p&gt;&lt;span&gt;&lt;a class=&#39;twitter-follow-button&#39; data-dnt=&#39;true&#39; data-lang=&#39;ja&#39; data-show-count=&#39;false&#39; data-show-screen-name=&#39;false&#39; data-size=&#39;large&#39; href=&#39;https://twitter.com/handycola&#39;&gt;@handycolaさんをフォロー&lt;/a&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&amp;#39;http&amp;#39;:&amp;#39;https&amp;#39;;if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+&amp;#39;://platform.twitter.com/widgets.js&amp;#39;;fjs.parentNode.insertBefore(js,fjs);}}(document, &amp;#39;script&amp;#39;, &amp;#39;twitter-wjs&amp;#39;);&lt;/script&gt;&lt;/span&gt;&lt;span style=&#39;float:right;&#39;&gt;投稿日：2014年07月15日&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;ins class=&#39;adsbygoogle&#39; data-ad-client=&#39;ca-pub-7938855665302783&#39; data-ad-slot=&#39;6346277556&#39; style=&#39;display:inline-block;width:468px;height:60px&#39; /&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;
&lt;/div&gt;
&lt;h5 id=&quot;0&quot;&gt;0.環境&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;[CentOS]   5.6 (32bit版カーネル)
[Apache]   2.2.3
[PHP]      5.4.1
[Laravel]  4.1.23&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;1&quot;&gt;1.問題&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;PHPのLaravelフレームワークを使っていたら、AjaxでPOSTした値がサーバ側で取得できずにはまりました。&lt;/p&gt;

&lt;p&gt;①から②へ test という名前で hoge という値を送信します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;① Javascript側&lt;/p&gt;
&lt;script src=&#39;https://gist.github.com/a9da32445d224fb1df63.js?file=ajax-test.js&#39;&gt; &lt;/script&gt;&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;② PHP側&lt;/p&gt;
&lt;script src=&#39;https://gist.github.com/649420870dc9835cb08c.js?file=routes.php&#39;&gt; &lt;/script&gt;&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;ログ出力結果を見ると、下記のようにPOST値が取得できていません。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[2014-07-16 12:09:36] local.DEBUG:  [] []&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;2&quot;&gt;2.原因&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Firefox の “Live HTTP headers” アドオンでURLの遷移を見たところ、下記のようにリダイレクトしていることがわかりました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;http://local.vm/test/
	↓↓↓
http://local.vm/test&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;grepしたところ、.htaccessでリダイレクトしてました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ソース&lt;/p&gt;

&lt;p&gt;app-root/public/.htaccess&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;記述&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Redirect Trailing Slashes...
RewriteRule ^(.*)/$ /$1 [L,R=301]&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;3&quot;&gt;3.対策&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Laravelはtrailing slash非推奨なのか？ とにかく下記のように修正。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;箇所&lt;/p&gt;

&lt;p&gt;ajax-test.js (6行目)&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;内容&lt;/p&gt;

&lt;p&gt;URLの末尾のスラッシュを削除し、/test に修正。&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;ログにもPOST値が出力されました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[2014-07-16 13:03:39] local.DEBUG: hoge [] []&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;参考&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#39;http://www.suzukikenichi.com/blog/do-we-need-a-trailing-slash-at-the-end-of-url/&#39; target=&#39;_blank&#39;&gt;URLの終りに「/」(スラッシュ)は必要?、不要?&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href=&#39;http://stackoverflow.com/questions/22063520/laravel-slash-after-url-redirects-to-root-folder&#39; target=&#39;_blank&#39;&gt;Laravel slash after url redirects to root folder&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
                <link>http://sankame.github.io//Laravel/2014/07/15/laravel_trailing_slash_redirect</link>
                <guid>http://sankame.github.io//Laravel/2014/07/15/laravel_trailing_slash_redirect</guid>
                <pubDate>2014-07-15T09:00:00+09:00</pubDate>
        </item>

        <item>
                <title>wget ファイル名を指定してダウンロード</title>
                <description>
&lt;p&gt;&lt;span&gt;&lt;a class=&#39;twitter-follow-button&#39; data-dnt=&#39;true&#39; data-lang=&#39;ja&#39; data-show-count=&#39;false&#39; data-show-screen-name=&#39;false&#39; data-size=&#39;large&#39; href=&#39;https://twitter.com/handycola&#39;&gt;@handycolaさんをフォロー&lt;/a&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&amp;#39;http&amp;#39;:&amp;#39;https&amp;#39;;if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+&amp;#39;://platform.twitter.com/widgets.js&amp;#39;;fjs.parentNode.insertBefore(js,fjs);}}(document, &amp;#39;script&amp;#39;, &amp;#39;twitter-wjs&amp;#39;);&lt;/script&gt;&lt;/span&gt;&lt;span style=&#39;float:right;&#39;&gt;投稿日：2014年07月03日&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;ins class=&#39;adsbygoogle&#39; data-ad-client=&#39;ca-pub-7938855665302783&#39; data-ad-slot=&#39;6346277556&#39; style=&#39;display:inline-block;width:468px;height:60px&#39; /&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;
&lt;/div&gt;
&lt;h5 id=&quot;o_&quot;&gt;-O オプションを使って、ダウンロードファイル名を指定します。&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;下記例では MyWget という名前に変更。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# wget -O MyWget http://ftp.gnu.org/gnu/wget/wget-1.15.tar.gz
# ls
# -rw-r--r--  1 root  root  3417936  1月 19 19:17 MyWget&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
                <link>http://sankame.github.io//wget/2014/07/03/wget_option_O</link>
                <guid>http://sankame.github.io//wget/2014/07/03/wget_option_O</guid>
                <pubDate>2014-07-03T09:00:00+09:00</pubDate>
        </item>

        <item>
                <title>開発環境用 NTP 設定</title>
                <description>
&lt;p&gt;&lt;span&gt;&lt;a class=&#39;twitter-follow-button&#39; data-dnt=&#39;true&#39; data-lang=&#39;ja&#39; data-show-count=&#39;false&#39; data-show-screen-name=&#39;false&#39; data-size=&#39;large&#39; href=&#39;https://twitter.com/handycola&#39;&gt;@handycolaさんをフォロー&lt;/a&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&amp;#39;http&amp;#39;:&amp;#39;https&amp;#39;;if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+&amp;#39;://platform.twitter.com/widgets.js&amp;#39;;fjs.parentNode.insertBefore(js,fjs);}}(document, &amp;#39;script&amp;#39;, &amp;#39;twitter-wjs&amp;#39;);&lt;/script&gt;&lt;/span&gt;&lt;span style=&#39;float:right;&#39;&gt;投稿日：2014年06月25日&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;ins class=&#39;adsbygoogle&#39; data-ad-client=&#39;ca-pub-7938855665302783&#39; data-ad-slot=&#39;6346277556&#39; style=&#39;display:inline-block;width:468px;height:60px&#39; /&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;
&lt;/div&gt;
&lt;h5 id=&quot;0&quot;&gt;0.環境&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;  [VMware Player] 3.0.0
  [CentOS]        5.6 (32bit版カーネル) (Windows上でゲストOSとして使用)
  [NTP]           4.2.6&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;1&quot;&gt;1.セットアップ&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ソース取得&lt;/p&gt;

&lt;p&gt;任意のディレクトリにNTPのソース(ntpd)をダウンロード。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# cd /usr/local/src/
# wget http://www.eecis.udel.edu/~ntp/ntp_spool/ntp4/ntp-4.2/ntp-4.2.6p5.tar.gz&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;インストール&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# tar xzf ntp-4.2.6p5.tar.gz
# cd ntp-4.2.6p5
# ./configure
# make
# make install&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;設定&lt;/p&gt;

&lt;p&gt;下記URL①の設定を行ったところうまく時刻同期されませんでした。&lt;/p&gt;

&lt;p&gt;(VMwareをサスペンドすると時刻が離れ過ぎるため？)&lt;/p&gt;

&lt;p&gt;結局、自分用の開発環境で、ログイン時に1回同期させれば十分なので下記のようにしました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# echo &amp;#39;ntpdate -u ntp.nict.jp&amp;#39; &amp;gt;&amp;gt; ~/.bash_profile&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;2url&quot;&gt;2.参考URL&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#39;http://www.ipa.go.jp/security/awareness/administrator/secure-web/chap4/4_ntpd.html&#39; target=&#39;_blank&#39;&gt;①ntpdのインストールと設定&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href=&#39;http://www.turbolinux.co.jp/products/server/11s/user_guide/x6278.html&#39; target=&#39;_blank&#39;&gt;②ntpd の起動と動作確認&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href=&#39;http://tech.n-linux.com/index.php?%A5%C6%A5%AF%A5%CB%A5%AB%A5%EB%A5%CE%A1%BC%A5%C8%2FNTP%2FNTP%20%A5%B7%A5%EA%A1%BC%A5%BA%20%A5%D1%A1%BC%A5%C8%203%20ntpdate%20%A5%B3%A5%DE%A5%F3%A5%C9%A4%CB%A4%C4%A4%A4%A4%C6&#39; target=&#39;_blank&#39;&gt;③ntpdate コマンドについて&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href=&#39;http://wiki.nothing.sh/page/NTP/%BF%E4%BE%A9%B8%F8%B3%AB%A5%B5%A1%BC%A5%D0&#39; target=&#39;_blank&#39;&gt;④推奨公開サーバ&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
                <link>http://sankame.github.io//NTP/2014/06/25/ntp_for_dev</link>
                <guid>http://sankame.github.io//NTP/2014/06/25/ntp_for_dev</guid>
                <pubDate>2014-06-25T09:00:00+09:00</pubDate>
        </item>

        <item>
                <title>GithubからBitbucketへソース移行</title>
                <description>
&lt;p&gt;&lt;span&gt;&lt;a class=&#39;twitter-follow-button&#39; data-dnt=&#39;true&#39; data-lang=&#39;ja&#39; data-show-count=&#39;false&#39; data-show-screen-name=&#39;false&#39; data-size=&#39;large&#39; href=&#39;https://twitter.com/handycola&#39;&gt;@handycolaさんをフォロー&lt;/a&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&amp;#39;http&amp;#39;:&amp;#39;https&amp;#39;;if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+&amp;#39;://platform.twitter.com/widgets.js&amp;#39;;fjs.parentNode.insertBefore(js,fjs);}}(document, &amp;#39;script&amp;#39;, &amp;#39;twitter-wjs&amp;#39;);&lt;/script&gt;&lt;/span&gt;&lt;span style=&#39;float:right;&#39;&gt;投稿日：2014年06月21日&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;ins class=&#39;adsbygoogle&#39; data-ad-client=&#39;ca-pub-7938855665302783&#39; data-ad-slot=&#39;6346277556&#39; style=&#39;display:inline-block;width:468px;height:60px&#39; /&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;
&lt;/div&gt;
&lt;h5 id=&quot;0&quot;&gt;0.環境&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;  [CentOS]   5.6 (32bit版カーネル)
  [Git]      1.9.4&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;1&quot;&gt;1.ダウンロード&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Githubのソース取得&lt;/p&gt;

&lt;p&gt;&lt;a href=&#39;/assets/posts/img/github_to_bitbucket/1.github.png&#39; target=&#39;_blank&#39;&gt;&lt;img alt=&#39;githubリポジトリ&#39; height=&#39;50%&#39; src=&#39;/assets/posts/img/github_to_bitbucket/1.github.png&#39; title=&#39;githubリポジトリ&#39; width=&#39;50%&#39; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;任意のディレクトリへ移動。&lt;/p&gt;

&lt;p&gt;GitHubのリポジトリから対象ソースを取得。(上図の画面右下がURL)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# git clone git@github.com:Sankame/repo-of-github.git&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;取得したソースの第1階層へ移動。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# cd repo-of-github/&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Bitbucketへソースアップ&lt;/p&gt;

&lt;p&gt;予めBitbucket上で任意のリポジトリを作っておきます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#39;/assets/posts/img/github_to_bitbucket/2.bitbucket_make_repo.png&#39; target=&#39;_blank&#39;&gt;&lt;img alt=&#39;bitbucketリポジトリ作成&#39; height=&#39;50%&#39; src=&#39;/assets/posts/img/github_to_bitbucket/2.bitbucket_make_repo.png&#39; title=&#39;bitbucketリポジトリ作成&#39; width=&#39;50%&#39; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;空のリポジトリができました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#39;/assets/posts/img/github_to_bitbucket/3.bitbucket_new_repo.png&#39; target=&#39;_blank&#39;&gt;&lt;img alt=&#39;bitbucket新規リポジトリ&#39; height=&#39;50%&#39; src=&#39;/assets/posts/img/github_to_bitbucket/3.bitbucket_new_repo.png&#39; title=&#39;bitbucket新規リポジトリ&#39; width=&#39;50%&#39; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;上記で GitHub から取得したソースは origin がGitHubになっているので、 Bitbucket へ変更。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# git remote -v
origin  git@github.com:Sankame/repo-of-github.git (fetch)
origin  git@github.com:Sankame/repo-of-github.git (push)

# git remote rm origin
# git remote add origin git@bitbucket.org:Sankame/repo-of-bitbucket.git
# git push -u origin --all # pushes up the repo and its refs for the first time
# git push -u origin --tags # pushes up any tags&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;GithubのソースがBitbucketへ取り込まれました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#39;/assets/posts/img/github_to_bitbucket/4.bitbucket_imported_repo.png&#39; target=&#39;_blank&#39;&gt;&lt;img alt=&#39;bitbucket取り込んだソース&#39; height=&#39;50%&#39; src=&#39;/assets/posts/img/github_to_bitbucket/4.bitbucket_imported_repo.png&#39; title=&#39;bitbucket取り込んだソース&#39; width=&#39;50%&#39; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;※上記 &amp;quot;git remote add origin&amp;quot; でプロトコルにhttpsを指定していて、&amp;quot;git push&amp;quot; で下記エラーが出た場合は「2.git pushが動かない場合」参照。&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;fatal: Unable to find remote helper for &amp;#39;https&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;2git_push&quot;&gt;2.git pushが動かない場合&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Gitをhttpsへ対応させる&lt;/p&gt;

&lt;p&gt;下記URLを見るとcurl-develがないのが原因と書いてあったが、自分の環境には既に入っていたので、&lt;/p&gt;

&lt;p&gt;gitを再コンパイル＆インストールしたところうまくいきました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#39;http://clavier.hatenablog.com/entry/2013/05/18/204050&#39; target=&#39;_blank&#39;&gt;CentOSに最新のgitをインストールする&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;※gitのソースが手元にある場合は再取得しなくてもOKです。&lt;/p&gt;

&lt;p&gt;※rootで操作しているのでインストール時にprefix指定&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# wget https://www.kernel.org/pub/software/scm/git/git-1.9.4.tar.gz
# tar xzf git-1.9.4.tar.gz
# cd git-1.9.4
# ./configure
# make clean
# make
# make prefix=/usr install&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
                <link>http://sankame.github.io//GitHub/2014/06/21/github_to_bitbucket</link>
                <guid>http://sankame.github.io//GitHub/2014/06/21/github_to_bitbucket</guid>
                <pubDate>2014-06-21T09:00:00+09:00</pubDate>
        </item>

        <item>
                <title>ポイントだけ ApacheBench</title>
                <description>
&lt;p&gt;&lt;span&gt;&lt;a class=&#39;twitter-follow-button&#39; data-dnt=&#39;true&#39; data-lang=&#39;ja&#39; data-show-count=&#39;false&#39; data-show-screen-name=&#39;false&#39; data-size=&#39;large&#39; href=&#39;https://twitter.com/handycola&#39;&gt;@handycolaさんをフォロー&lt;/a&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&amp;#39;http&amp;#39;:&amp;#39;https&amp;#39;;if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+&amp;#39;://platform.twitter.com/widgets.js&amp;#39;;fjs.parentNode.insertBefore(js,fjs);}}(document, &amp;#39;script&amp;#39;, &amp;#39;twitter-wjs&amp;#39;);&lt;/script&gt;&lt;/span&gt;&lt;span style=&#39;float:right;&#39;&gt;投稿日：2014年06月07日&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;ins class=&#39;adsbygoogle&#39; data-ad-client=&#39;ca-pub-7938855665302783&#39; data-ad-slot=&#39;6346277556&#39; style=&#39;display:inline-block;width:468px;height:60px&#39; /&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;
&lt;/div&gt;
&lt;h5 id=&quot;0&quot;&gt;0.環境&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;  [CentOS]      5.6 (32bit版カーネル)
  [Apache]      2.2.3
  [ApacheBench] 2.0.40-dev&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;1&quot;&gt;1.基本&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;実行&lt;/p&gt;

&lt;p&gt;Apacheをインストールすると ab というコマンドで負荷テストが行えます。&lt;/p&gt;

&lt;p&gt;主に使うのは2つのオプションで、下記のように実行します。&lt;/p&gt;

&lt;p&gt;後述の “Requests per second” が十分な値になるよう、n と c の値を増やして負荷をかけます。&lt;/p&gt;

&lt;p&gt;(n : リクエスト数　c : 同時接続数)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ab -n 10000 -c 100 &amp;quot;http://test.vm/test.php&amp;quot;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;※abでテストできるのはサーバ側の処理だけなので、HTMLレンダリングやJavascript実行等、&lt;/p&gt;

&lt;p&gt;　トータルの計測を行いたい場合は、下記のようなツールを検討して下さい。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://gtmetrix.com/&quot;&gt;GTmetrix&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://knowledge.sakura.ad.jp/tech/1599/&quot;&gt;PageSpeed&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;結果&lt;/p&gt;

&lt;p&gt;下記のような実行結果が表示されるので、主に2つの項目を確認します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Failed requests (失敗したリクエスト数)&lt;/p&gt;

&lt;p&gt;この項目が0であることを確認します。&lt;/p&gt;

&lt;p&gt;但し、表示毎にHTMLのバイト数が異なるサイトの場合、ここがカウントされ、さらに内訳を表す “Length:” もカウントされます。&lt;/p&gt;

&lt;p&gt;(1つ前の結果とHTMLのバイト数を比較し、異なる場合は Length がカウントされる仕様)&lt;/p&gt;

&lt;p&gt;上記のようなサイトの場合、”Failed requests” に数字があっても、全て Length が原因ならば無視してかまいませんが、&lt;/p&gt;

&lt;p&gt;念のため、Apacheのアクセスログを確認し、HTTP Response Code が全て200になっていることを確認して下さい。&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Requests per second (秒間に処理したリクエスト数)&lt;/p&gt;

&lt;p&gt;対象WEBサイトのアクセス数などから算出した基準を達成しているか確認します。&lt;/p&gt;

&lt;p&gt;(例) 月間 1億 PVのサイトの場合、アクセスが均等という前提で、秒間 38.5 リクエストは達成する必要がありそうです。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;100,000,000 / 30 / 24 / 60 / 60 ≒ 38.5&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;(注意) 下記 &amp;quot;ab 実行結果&amp;quot; は文字を表示するだけのページなので &amp;quot;Requests per second&amp;quot; はかなり高い数字になっています。&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;ab 実行結果&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# ab -n 10000 -c 100 &amp;quot;http://test.vm/test.php&amp;quot;

This is ApacheBench, Version 2.0.40-dev &amp;lt;$Revision: 1.146 $&amp;gt; apache-2.0
Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/
Copyright 2006 The Apache Software Foundation, http://www.apache.org/

Benchmarking test.vm (be patient)
Completed 1000 requests
Completed 2000 requests
Completed 3000 requests
Completed 4000 requests
Completed 5000 requests
Completed 6000 requests
Completed 7000 requests
Completed 8000 requests
Completed 9000 requests
Finished 10000 requests

Server Software:        Apache/2.2.3
Server Hostname:        test.vm
Server Port:            80

Document Path:          /test.php
Document Length:        80 bytes

Concurrency Level:      100
Time taken for tests:   5.772060 seconds
Complete requests:      10000
Failed requests:        9899
   (Connect: 0, Length: 9899, Exceptions: 0)
Write errors:           0
Total transferred:      2418216 bytes
HTML transferred:       499081 bytes
Requests per second:    1732.48 [#/sec] (mean)
Time per request:       57.721 [ms] (mean)
Time per request:       0.577 [ms] (mean, across all concurrent requests)
Transfer rate:          409.04 [Kbytes/sec] received

Connection Times (ms)
              min  mean[+/-sd] median   max
Connect:        0    0   0.3      0       6
Processing:     5   56 112.2     55    5769
Waiting:        5   54  77.3     55    4398
Total:          5   57 112.2     55    5769

Percentage of the requests served within a certain time (ms)
  50%     55
  66%     56
  75%     58
  80%     59
  90%     62
  95%     69
  98%     77
  99%    284
 100%   5769 (longest request)&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;2&quot;&gt;2.応用&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;コマンドサンプル&lt;/p&gt;

&lt;p&gt;他によく使うオプションを記載しておきます。&lt;/p&gt;

&lt;p&gt;Cookieを指定。(C : [Cookie名]=[値])&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ab -n 100 -c 10 -C &amp;#39;id=test&amp;#39; &amp;quot;http://test.vm/test.php&amp;quot;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;複数のCookieを指定。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ab -n 100 -c 10 -C &amp;#39;id=test;flag=1&amp;#39; &amp;quot;http://test.vm/test.php&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;host名の指定が必要な場合&lt;/p&gt;

&lt;p&gt;host名の指定が必須のWEBサイトで、かつ ab 実行環境で /etc/hosts に記載ができない場合、&lt;/p&gt;

&lt;p&gt;下記のようにヘッダオプション(-H) と Host を使います。&lt;/p&gt;

&lt;p&gt;これに対応した ab はApache 2.2.22 以降で、自分の環境は未対応だったのでソースを落としてきてビルドしました。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;(注意) ab を使うだけなので、Apacheのインストール(make install)は行わない。&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# cd /usr/local/src/
# wget http://ftp.meisei-u.ac.jp/mirror/apache/dist//httpd/httpd-2.2.27.tar.gz
# tar xzf httpd-2.2.27.tar.gz
# cd httpd-2.2.27
# ./configure
# make
# 
# /usr/local/src/httpd-2.2.27/support/ab -n 100 -c 10 -H &amp;#39;Host: test.vm&amp;#39; &amp;quot;http://192.168.130.130/test.php&amp;quot;
#
# /usr/local/src/httpd-2.2.27/support/ab -V
#This is ApacheBench, Version 2.3 &amp;lt;$Revision: 655654 $&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
                <link>http://sankame.github.io//ApacheBench/2014/06/07/apache_bench</link>
                <guid>http://sankame.github.io//ApacheBench/2014/06/07/apache_bench</guid>
                <pubDate>2014-06-07T09:00:00+09:00</pubDate>
        </item>

        <item>
                <title>Jenkins から Seleniumを動かしてみる</title>
                <description>
&lt;p&gt;&lt;span&gt;&lt;a class=&#39;twitter-follow-button&#39; data-dnt=&#39;true&#39; data-lang=&#39;ja&#39; data-show-count=&#39;false&#39; data-show-screen-name=&#39;false&#39; data-size=&#39;large&#39; href=&#39;https://twitter.com/handycola&#39;&gt;@handycolaさんをフォロー&lt;/a&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&amp;#39;http&amp;#39;:&amp;#39;https&amp;#39;;if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+&amp;#39;://platform.twitter.com/widgets.js&amp;#39;;fjs.parentNode.insertBefore(js,fjs);}}(document, &amp;#39;script&amp;#39;, &amp;#39;twitter-wjs&amp;#39;);&lt;/script&gt;&lt;/span&gt;&lt;span style=&#39;float:right;&#39;&gt;投稿日：2014年06月04日&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;ins class=&#39;adsbygoogle&#39; data-ad-client=&#39;ca-pub-7938855665302783&#39; data-ad-slot=&#39;6346277556&#39; style=&#39;display:inline-block;width:468px;height:60px&#39; /&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;
&lt;/div&gt;
&lt;h5 id=&quot;0&quot;&gt;0.環境&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;・親ノード端末
  [CentOS]   5.6 (32bit版カーネル)
  [ruby]     2.1.1p76
  [rvm]      1.25.25
  [java]     1.7.0_51
  [Jenkins]  1.562

・子ノード端末
  [Windows]  Vista Home Premium (32bit)
  [java]     1.7.0_51
  [IE]       8&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;1&quot;&gt;1.準備&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Jenkinsインストール&lt;/p&gt;

&lt;p&gt;下記のリンクを参考にJenkinsをインストールしました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://d.hatena.ne.jp/katsuren/20121030/1351569655&quot;&gt;俺の成長日記&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://oscasierra.net/2013/05/jenkins-to-redhat/&quot;&gt;OSCALOG&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://kohkimakimoto.hatenablog.com/entry/2013/11/22/192646&quot;&gt;JenkinsをCentOSにインストールしたときのメモ&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;前回の続き&lt;/p&gt;

&lt;p&gt;親ノードと子ノードでSelenium Serverを起動します。(下記リンク参照)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/Selenium/2014/05/24/selenium_webdriver/&quot;&gt;Selenium WebDriverを動かしてみる&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;前回と異なる点は、Jenkinsがポート4444を使っていたので、Selenium Serverは4445を使って起動します。&lt;/p&gt;

&lt;p&gt;・親ノード&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# java -jar selenium-server-standalone-2.41.0.jar -role hub -port 4445&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;・子ノード&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; java -jar selenium-server-standalone-2.41.0.jar -role webdriver -hub http://192.168.130.130:4445/grid/register -Dwebdriver.ie.driver=./IEDriverServer.exe&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Jenkins プラグイン追加&lt;/p&gt;

&lt;p&gt;rvmでrubyを使っているので、予めJenkinsにrvmプラグインを追加。&lt;/p&gt;

&lt;p&gt;Jenkinsのダッシュボードから[Jenkinsの管理]-[プラグインの管理]-[利用可能]&lt;/p&gt;

&lt;p&gt;右上のフィルターでrvmと打つとRVMプラグインが表示されるのでチェックをつけ、[再起動せずにインストール]クリック。&lt;/p&gt;

&lt;p&gt;(インストールは何回か失敗することがあります)&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Jenkins ジョブ追加&lt;/p&gt;

&lt;p&gt;Jenkinsのダッシュボードから[新規ジョブ作成]、ジョブ名を入力し、[フリースタイル・プロジェクトのビルド]を選択して[OK]クリック。&lt;/p&gt;

&lt;p&gt;ビルド環境のRVMで使用したいrubyのバージョンを指定。(自分の場合 2.1.1) (下図参照)&lt;/p&gt;

&lt;p&gt;シェルスクリプトで下記のように指定。(パス等は読み替えて下さい) (下図参照)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/usr/local/rvm/rubies/ruby-2.1.1/bin/ruby /app/seleniumtest/seleniumtest_4445.rb&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;「保存」ボタンクリック。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#39;/assets/posts/img/jenkins_selenium/jenkins_project.png&#39; target=&#39;_blank&#39;&gt;&lt;img alt=&#39;Jenkinsプロジェクト設定&#39; height=&#39;50%&#39; src=&#39;/assets/posts/img/jenkins_selenium/jenkins_project.png&#39; title=&#39;Jenkinsプロジェクト設定&#39; width=&#39;50%&#39; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;rubyスクリプト&lt;/p&gt;

&lt;p&gt;上記でJenkinsに設定した “seleniumtest_4445.rb” は以下の内容です。(ポート番号4445でアクセス)&lt;/p&gt;
&lt;script src=&#39;https://gist.github.com/dc5fb2d680b67acefbf3.js?file=seleniumtest_4445.rb&#39;&gt; &lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;2&quot;&gt;2.起動&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;ビルド実行
&lt;p&gt;上記で作成したジョブで「ビルド実行」をクリック。&lt;/p&gt;

&lt;p&gt;子ノードでIEが起動すれば成功です。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
                <link>http://sankame.github.io//Selenium/2014/06/04/jenkins_selenium</link>
                <guid>http://sankame.github.io//Selenium/2014/06/04/jenkins_selenium</guid>
                <pubDate>2014-06-04T09:00:00+09:00</pubDate>
        </item>

        <item>
                <title>Selenium WebDriverを動かしてみる</title>
                <description>
&lt;p&gt;&lt;span&gt;&lt;a class=&#39;twitter-follow-button&#39; data-dnt=&#39;true&#39; data-lang=&#39;ja&#39; data-show-count=&#39;false&#39; data-show-screen-name=&#39;false&#39; data-size=&#39;large&#39; href=&#39;https://twitter.com/handycola&#39;&gt;@handycolaさんをフォロー&lt;/a&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&amp;#39;http&amp;#39;:&amp;#39;https&amp;#39;;if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+&amp;#39;://platform.twitter.com/widgets.js&amp;#39;;fjs.parentNode.insertBefore(js,fjs);}}(document, &amp;#39;script&amp;#39;, &amp;#39;twitter-wjs&amp;#39;);&lt;/script&gt;&lt;/span&gt;&lt;span style=&#39;float:right;&#39;&gt;投稿日：2014年05月24日&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;ins class=&#39;adsbygoogle&#39; data-ad-client=&#39;ca-pub-7938855665302783&#39; data-ad-slot=&#39;6346277556&#39; style=&#39;display:inline-block;width:468px;height:60px&#39; /&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;
&lt;/div&gt;
&lt;h5 id=&quot;0&quot;&gt;0.環境&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;・親ノード端末
  [CentOS]   5.6 (32bit版カーネル)
  [ruby]     2.1.1p76
  [rvm]      1.25.25
  [java]     1.7.0_51
  
・子ノード端末
  [Windows]  Vista Home Premium (32bit)
  [java]     1.7.0_51
  [IE]       8&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;1&quot;&gt;1.準備&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;動機&lt;/p&gt;

&lt;p&gt;ブラウザテストの自動化に興味があり、面白そうな記事があったので自分でも試してみました。&lt;/p&gt;

&lt;p&gt;(Jenkinsとの連携は今回やっていません)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.takuros.net/entry/20130305/1362437720&quot;&gt;JenkinsとSelenium WebDriverでUI層のテストも自動化＆永続化する&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;親ノード&lt;/p&gt;

&lt;p&gt;親ノード端末の適当なディレクトリに Selenium Server をダウンロード後、起動します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# cd /usr/local/bin/
# wget http://selenium-release.storage.googleapis.com/2.41/selenium-server-standalone-2.41.0.jar
# java -jar selenium-server-standalone-2.41.0.jar -role hub&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;子ノード&lt;/p&gt;

&lt;p&gt;子ノード端末の適当なフォルダに Selenium Server とIEドライバーをダウンロード後、起動します。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://docs.seleniumhq.org/download/&quot;&gt;ダウンロードサイト&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;まず、”Selenium Server (formerly the Selenium RC Server)” をダウンロード。&lt;/p&gt;

&lt;p&gt;次に、”The Internet Explorer Driver Server” をダウンロード。&lt;/p&gt;

&lt;p&gt;(アーキテクチャによって32bitまたは64bitを選択)&lt;/p&gt;

&lt;p&gt;コマンドプロンプトを開いて、ダウンロードしたフォルダに移動し Selenium Server を起動。&lt;/p&gt;

&lt;p&gt;(192.168.130.130 は自分の環境の親ノードIPに読み替え)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; cd C:\apps\selenium
&amp;gt; java -jar selenium-server-standalone-2.41.0.jar -role webdriver -hub http://192.168.130.130:4444/grid/register -Dwebdriver.ie.driver=./IEDriverServer.exe&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;IEドライバーを起動するには、IEの[ツール]-[インターネットオプション]-[セキュリティ]で全ての&lt;/p&gt;

&lt;p&gt;ゾーンの「保護モード」を同じにしておく必要があります。&lt;a href=&quot;https://selenium.googlecode.com/issues/attachment?aid=17950019000&amp;name=1.png&amp;token=ABZ6GAdCiZEHCiZBk5mmjW1I9awHy0ZHtQ%3A1400944855099&amp;inline=1&quot;&gt;画面キャプチャ&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/Kackey/items/c5dded9a6762c1a8cccf&quot;&gt;参考記事&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;2&quot;&gt;2.起動&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;IE起動&lt;/p&gt;

&lt;p&gt;親ノード端末に置いたプログラムから、子ノード端末のIEを起動します。&lt;/p&gt;

&lt;p&gt;親ノード端末の適当なディレクトリに下記スクリプトを配置。&lt;/p&gt;

&lt;p&gt;(192.168.130.130 は自分の環境の親ノードIPに読み替え)&lt;/p&gt;
&lt;script src=&#39;https://gist.github.com/105475ff842cd9bf6ad6.js?file=seleniumtest.rb&#39;&gt; &lt;/script&gt;
&lt;p&gt;スクリプト内で selenium-webdriver を使っているので、予めインストールしておきます。&lt;/p&gt;

&lt;p&gt;(適当なディレクトリへ移動し、依存関係を気にしたくないのでbundleを使ってインストール)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# bundle init
# echo &amp;quot;gem &amp;#39;selenium-webdriver&amp;#39;&amp;quot; &amp;gt;&amp;gt; Gemfile
# bundle install&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;プログラムを実行し、子ノード端末でIEが起動すれば成功です。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# ruby /app/seleniumtest/seleniumtest.rb&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
                <link>http://sankame.github.io//Selenium/2014/05/24/selenium_webdriver</link>
                <guid>http://sankame.github.io//Selenium/2014/05/24/selenium_webdriver</guid>
                <pubDate>2014-05-24T09:00:00+09:00</pubDate>
        </item>

        <item>
                <title>Jekyllを1.0.2へバージョンアップ</title>
                <description>
&lt;p&gt;&lt;span&gt;&lt;a class=&#39;twitter-follow-button&#39; data-dnt=&#39;true&#39; data-lang=&#39;ja&#39; data-show-count=&#39;false&#39; data-show-screen-name=&#39;false&#39; data-size=&#39;large&#39; href=&#39;https://twitter.com/handycola&#39;&gt;@handycolaさんをフォロー&lt;/a&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&amp;#39;http&amp;#39;:&amp;#39;https&amp;#39;;if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+&amp;#39;://platform.twitter.com/widgets.js&amp;#39;;fjs.parentNode.insertBefore(js,fjs);}}(document, &amp;#39;script&amp;#39;, &amp;#39;twitter-wjs&amp;#39;);&lt;/script&gt;&lt;/span&gt;&lt;span style=&#39;float:right;&#39;&gt;投稿日：2014年05月18日&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;ins class=&#39;adsbygoogle&#39; data-ad-client=&#39;ca-pub-7938855665302783&#39; data-ad-slot=&#39;6346277556&#39; style=&#39;display:inline-block;width:468px;height:60px&#39; /&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;
&lt;/div&gt;
&lt;h5 id=&quot;0&quot;&gt;0.環境&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;[CentOS]     5.6 (32bit版カーネル)
[ruby]       2.1.1p76
[rvm]        1.25.25
[jekyll]     0.11.2 =&amp;gt; 1.0.2&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;1_&quot;&gt;1.インストール &lt;a href=&quot;http://melborne.github.io/2013/05/20/now-the-time-to-start-jekyll/&quot;&gt;参考ページ&lt;/a&gt;&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;インストール&lt;/p&gt;

&lt;p&gt;本ブログはjekyll 0.11.2で作成してきましたが、別件でrubyのバージョンを上げたことでjekyllが動か&lt;/p&gt;

&lt;p&gt;なくなってしまったため、思い切って1.0.2への移行を行いました。&lt;a href=&quot;http://sankame.github.io/Jekyll/2012/12/23/jekyll_and_github/&quot;&gt;初期インストールの内容&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;いくつかハマった点を共有します。&lt;/p&gt;

&lt;p&gt;まず、複数バージョンのrubyを使いたかったので下記ページに沿ってrvmをインストール。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://d.hatena.ne.jp/mrgoofy33/20110518/1305649544&quot;&gt;rvmインストール&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;rootで実行したためか /usr/local/rvm にインストールされたので、上記記事内のパスは読み替えました。&lt;/p&gt;

&lt;p&gt;ruby 2.1.1をインストール。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# rvm install 2.1.1
# rvm use  2.1.1&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;適当な場所にGemfileを作成し、jekyllを追記してインストール開始。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# bundle init
# echo &amp;quot;gem &amp;#39;jekyll&amp;#39;, &amp;#39;1.0.2&amp;#39;&amp;quot; &amp;gt;&amp;gt; Gemfile
# bundle install&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;インストールされたことを確認します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# gem list|grep jekyll
jekyll (1.0.2)
jekyll-coffeescript (1.0.0)
jekyll-sass-converter (1.0.0)&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;起動&lt;/p&gt;

&lt;p&gt;任意の場所へ移動し、bootstrapをダウンロードします。&lt;a href=&quot;http://jekyllbootstrap.com/usage/jekyll-quick-start.html&quot;&gt;bootstrapクイックスタート&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(前バージョンとは別の場所にしました)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# cd /var/www/html/jekyll2/
# git clone https://github.com/plusjade/jekyll-bootstrap.git
# cd jekyll-bootstrap
# jekyll serve --watch&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;2&quot;&gt;2.引越し&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ファイルコピー&lt;/p&gt;

&lt;p&gt;前バージョンの設定ファイルや記事を新バージョンへコピーします。&lt;/p&gt;

&lt;p&gt;(自分の環境に合わせて必要なものをコピーして下さい)&lt;/p&gt;

&lt;p&gt;(1) diffを確認しながら部分ごとコピー&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;index.md
_config.yml
categories.html
tags.html
pages.html
archive.html
404.html&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(2) ディレクトリ単位で上書きコピー&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;_includes/JB
_includes/themes/twitter
_layouts
_posts
assets&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;動かない①&lt;/p&gt;

&lt;p&gt;_posts 内でサンプルコードとして下記の記述があると、jekyllが停止してしまいました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;　&amp;lt;?php&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;原因が分からなかったので、gistにコード部分をアップしjekyllで読み込ませることにしました。&lt;/p&gt;

&lt;p&gt;gistは下記のように記述する必要があります。(【】 内は読み替え)&lt;/p&gt;

&lt;p&gt;{% gist 【gistのID】 【ファイル名】 %}&lt;/p&gt;

&lt;p&gt;ところが、gistのIDにアルファベットが含まれるのに、jekyll側は数字のみしか対応していなか&lt;/p&gt;

&lt;p&gt;ったためローカルjekyllの下記箇所を修正しました。(jekyll 1.x系の最新(1.4)では直ってました)&lt;/p&gt;

&lt;p&gt;・ソース&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/usr/local/rvm/gems/ruby-2.1.1/gems/jekyll-1.0.2/lib/jekyll/tags/gist.rb&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;・修正内容 (IDにアルファベットを許可)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# diff  gist.rb.org  gist.rb
10c10
&amp;lt; if tag_contents = @markup.strip.match(/\A(\d+) ?(\S*)\Z/)
　---
&amp;gt; if tag_contents = @markup.strip.match(/\A([0-9a-fA-F]+) ?(\S*)\Z/)&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;動かない②&lt;/p&gt;

&lt;p&gt;新旧の記事ページの比較をしていたところ、URLが違うことに気付きました。&lt;/p&gt;

&lt;p&gt;前バージョンだと _posts 内の記事のヘッダ部分で定義するカテゴリに大文字を使っている場合、&lt;/p&gt;

&lt;p&gt;_site に生成されるディレクトリもそのまま大文字になります。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;category : Jekyll&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ところが、新バージョンだと全部小文字に変換され、下記の差が出てしまいます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(前バージョン)
http://localhost:4000/Jekyll/2014/05/18/jekyll_version_up/

(新バージョン)
http://localhost:4000/jekyll/2014/05/18/jekyll_version_up/&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;一度インターネットに公開したURLが変わるのは困ります…&lt;/p&gt;

&lt;p&gt;仕方がないので、ローカルのjekyllソースを下記のように修正しました。&lt;/p&gt;

&lt;p&gt;・ソース&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/usr/local/rvm/gems/ruby-2.1.1/gems/jekyll-1.0.2/lib/jekyll/post.rb&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;・修正内容 (小文字変換を削除)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# diff post.rb.org post.rb
79c79
&amp;lt; self.categories = self.data.pluralized_array(&amp;#39;category&amp;#39;, &amp;#39;categories&amp;#39;).map {|c| c.to_s.downcase}
　---
&amp;gt; self.categories = self.data.pluralized_array(&amp;#39;category&amp;#39;, &amp;#39;categories&amp;#39;).map {|c| c.to_s}&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;参考ページ&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2013/05/20/now-the-time-to-start-jekyll/&quot;&gt;Jekyll Version 1.0&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2012/05/13/first-step-of-jekyll/&quot;&gt;Jekyllを理解する&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://krakenbeal.blogspot.jp/2012/05/ruby-jekyll-jekyll-bootstrap.html&quot;&gt;jekyllとjekyll-bootstrapで静的サイトを作る&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
                <link>http://sankame.github.io//Jekyll/2014/05/18/jekyll_version_up</link>
                <guid>http://sankame.github.io//Jekyll/2014/05/18/jekyll_version_up</guid>
                <pubDate>2014-05-18T09:00:00+09:00</pubDate>
        </item>

        <item>
                <title>Revive Ad Server インストール (旧OpenX)</title>
                <description>
&lt;p&gt;&lt;span&gt;&lt;a class=&#39;twitter-follow-button&#39; data-dnt=&#39;true&#39; data-lang=&#39;ja&#39; data-show-count=&#39;false&#39; data-show-screen-name=&#39;false&#39; data-size=&#39;large&#39; href=&#39;https://twitter.com/handycola&#39;&gt;@handycolaさんをフォロー&lt;/a&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&amp;#39;http&amp;#39;:&amp;#39;https&amp;#39;;if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+&amp;#39;://platform.twitter.com/widgets.js&amp;#39;;fjs.parentNode.insertBefore(js,fjs);}}(document, &amp;#39;script&amp;#39;, &amp;#39;twitter-wjs&amp;#39;);&lt;/script&gt;&lt;/span&gt;&lt;span style=&#39;float:right;&#39;&gt;投稿日：2014年05月04日&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;ins class=&#39;adsbygoogle&#39; data-ad-client=&#39;ca-pub-7938855665302783&#39; data-ad-slot=&#39;6346277556&#39; style=&#39;display:inline-block;width:468px;height:60px&#39; /&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;
&lt;/div&gt;
&lt;h5 id=&quot;0&quot;&gt;0.環境&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;[CentOS]           5.6 (32bit版カーネル)
[Apache]           2.2.3
[PHP]              5.4.17
[Revive AdServer]  3.0.4&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;1_&quot;&gt;1.インストール &lt;a href=&quot;http://tec-blog.menue.jp/?p=278&quot;&gt;参考ページ&lt;/a&gt;&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;1-0.ダウンロード&lt;/p&gt;

&lt;p&gt;適当なディレクトリにソースをダウンロードし、Apache公開ディレクトリへ移動。&lt;/p&gt;

&lt;p&gt;(公開ディレクトリは自分の環境に読み替えて下さい)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# wget http://download.revive-adserver.com/revive-adserver-3.0.4.tar.gz
# tar xzf revive-adserver-3.0.4.tar.gz
# mv revive-adserver-3.0.4 revive-adserver
# mv revive-adserver /app/.&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;1-1.インストール開始&lt;/p&gt;

&lt;p&gt;ブラウザから、上記インストール先URLへアクセス。&lt;/p&gt;

&lt;p&gt;(例) http://localhost/revive-adserver&lt;/p&gt;

&lt;p&gt;ウィザードに従ってインストールを進めます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#39;/assets/posts/img/revive_adserver_install/step1.png&#39; target=&#39;_blank&#39;&gt;&lt;img alt=&#39;step1&#39; height=&#39;50%&#39; src=&#39;/assets/posts/img/revive_adserver_install/step1.png&#39; title=&#39;step1&#39; width=&#39;50%&#39; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;“I Agree »“ボタンを押すと、”File Permissions - 7 errors” というエラーが表示されました。&lt;/p&gt;

&lt;p&gt;画面に表示されたコマンドをそのままコンソールで実行。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# chmod -R a+w /app/revive-adserver/var
# chmod -R a+w /app/revive-adserver/var/cache
# chmod -R a+w /app/revive-adserver/var/plugins
# chmod -R a+w /app/revive-adserver/var/templates_compiled
# chmod -R a+w /app/revive-adserver/plugins
# chmod -R a+w /app/revive-adserver/www/admin/plugins
# chmod -R a+w /app/revive-adserver/www/images&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;再びインストール画面へ戻って”Retry”を押すと、次のステップへ進めます。&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;1-2.DB設定&lt;/p&gt;

&lt;p&gt;DB情報の入力画面が表示されますが、その前に下記コマンド(※1)でMySQL上にDBを作成。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#39;/assets/posts/img/revive_adserver_install/step2.png&#39; target=&#39;_blank&#39;&gt;&lt;img alt=&#39;step2&#39; height=&#39;50%&#39; src=&#39;/assets/posts/img/revive_adserver_install/step2.png&#39; title=&#39;step2&#39; width=&#39;50%&#39; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(※1) コマンド (DB名、ユーザ名、パスワードは任意に設定して下さい)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# mysql -h 127.0.0.1 -u root -p
mysql&amp;gt; create database reviveadserver;
mysql&amp;gt; grant all privileges on reviveadserver.* to admin@localhost identified by &amp;#39;password&amp;#39;;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;再びインストール画面へ戻り、上記のDB情報を入力後、”Continue »” を押します。&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;1-3.管理ユーザ登録&lt;/p&gt;

&lt;p&gt;Revive AdServerの管理ユーザを登録します。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#39;/assets/posts/img/revive_adserver_install/step3.png&#39; target=&#39;_blank&#39;&gt;&lt;img alt=&#39;step3&#39; height=&#39;50%&#39; src=&#39;/assets/posts/img/revive_adserver_install/step3.png&#39; title=&#39;step3&#39; width=&#39;50%&#39; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;言語とタイムゾーンを変更。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Language:  Japanese
Timezone:  (GMT+0900) Asia/Tokyo&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;1-4.登録完了&lt;/p&gt;

&lt;p&gt;登録完了しました。&lt;/p&gt;

&lt;p&gt;「インストール中にエラーが発生しました」と表示されましたが、指定されたログを見てもエラーの記述はありませんでした。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#39;/assets/posts/img/revive_adserver_install/step4.png&#39; target=&#39;_blank&#39;&gt;&lt;img alt=&#39;step4&#39; height=&#39;50%&#39; src=&#39;/assets/posts/img/revive_adserver_install/step4.png&#39; title=&#39;step4&#39; width=&#39;50%&#39; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
                <link>http://sankame.github.io//ReviveAdServer/2014/05/04/revive_adserver_install</link>
                <guid>http://sankame.github.io//ReviveAdServer/2014/05/04/revive_adserver_install</guid>
                <pubDate>2014-05-04T09:00:00+09:00</pubDate>
        </item>

        <item>
                <title>PHPからfitbit API を使ってみる</title>
                <description>
&lt;p&gt;&lt;span&gt;&lt;a class=&#39;twitter-follow-button&#39; data-dnt=&#39;true&#39; data-lang=&#39;ja&#39; data-show-count=&#39;false&#39; data-show-screen-name=&#39;false&#39; data-size=&#39;large&#39; href=&#39;https://twitter.com/handycola&#39;&gt;@handycolaさんをフォロー&lt;/a&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&amp;#39;http&amp;#39;:&amp;#39;https&amp;#39;;if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+&amp;#39;://platform.twitter.com/widgets.js&amp;#39;;fjs.parentNode.insertBefore(js,fjs);}}(document, &amp;#39;script&amp;#39;, &amp;#39;twitter-wjs&amp;#39;);&lt;/script&gt;&lt;/span&gt;&lt;span style=&#39;float:right;&#39;&gt;投稿日：2014年02月04日&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;ins class=&#39;adsbygoogle&#39; data-ad-client=&#39;ca-pub-7938855665302783&#39; data-ad-slot=&#39;6346277556&#39; style=&#39;display:inline-block;width:468px;height:60px&#39; /&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;
&lt;/div&gt;
&lt;h5 id=&quot;0&quot;&gt;0.環境&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;[CentOS]   5.6 (32bit版カーネル)
[Apache]   2.2.3
[PHP]      5.4.1
[device]   Fitbit One&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;1oauth_extension__fitbit_api&quot;&gt;1.OAuth Extensionインストール → fitbit API実行&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;1-1.fitbit(活動量計)の&lt;a href=&quot;https://wiki.fitbit.com/display/API/API+PHP+Client&quot;&gt;API使用手順&lt;/a&gt;にそって作業を進めます。&lt;/p&gt;

&lt;p&gt;下記コマンドを実行。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# pecl install oauth-0.99.9&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;エラー発生。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;　：
（割愛）
　：
/var/tmp/oauth/oauth.c:2058: warning: assignment from incompatible pointer type
/var/tmp/oauth/oauth.c: In function &amp;#39;zm_shutdown_oauth&amp;#39;:
/var/tmp/oauth/oauth.c:2092: warning: implicit declaration of function &amp;#39;curl_global_cleanup&amp;#39;
make: *** [oauth.lo] エラー 1
ERROR: `make&amp;#39; failed&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;https://bugs.php.net/bug.php?id=59153&quot;&gt;こんな情報&lt;/a&gt;を見つけ、下記コマンドを実行。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# yum install curl-devel&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;エラーは変わらず、さらに&lt;a href=&quot;http://blog.gmane.org/gmane.comp.php.install/month=20101201&quot;&gt;こんな情報&lt;/a&gt;を見つけ、下記コマンドを実行。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# yum install pcre pcre-devel&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;またまたエラー発生。OAuthを使うための&lt;a href=&quot;http://www.php.net/manual/ja/oauth.requirements.php&quot;&gt;条件&lt;/a&gt;を発見。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.flatlabs.net/20100611_062745/&quot;&gt;良さそうなページ&lt;/a&gt;を見つけ、下記コマンドを実行。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# pecl install oauth-beta&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;お！成功した。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Build process completed successfully
Installing &amp;#39;/usr/lib/php/modules/oauth.so&amp;#39;
install ok: channel://pecl.php.net/oauth-1.2.3
configuration option &amp;quot;php_ini&amp;quot; is not set to php.ini location
You should add &amp;quot;extension=oauth.so&amp;quot; to php.ini&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;後は指示通りExtensionを追加。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# vi /etc/php.d/oauth.ini
extension=oauth.so&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;1-2.サンプルプログラム実行。&lt;/p&gt;

&lt;p&gt;準備ができたので、&lt;a href=&quot;http://dev.fitbit.com/&quot;&gt;開発者用ページ&lt;/a&gt;から&lt;a href=&quot;https://wiki.fitbit.com/download/attachments/884784/completeAuthorization.php?version=2&amp;modificationDate=1297797897000&amp;api=v2&quot;&gt;サンプルプログラム&lt;/a&gt;をダウンロード。&lt;/p&gt;

&lt;p&gt;サンプルプログラムを自分の設定に合わせて修正。(下記1-3参照)&lt;/p&gt;

&lt;p&gt;Apacheのドキュメントルートに配置して、ブラウザからアクセスするとエラーが発生。&lt;/p&gt;

&lt;p&gt;(localhostは自分の環境に読み替えて下さい)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;http://localhost/completeAuthorization.php&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;body_recv の値を見てみると、”fieldName”:”oauth_timestamp” があやしい。&lt;/p&gt;

&lt;p&gt;(自分のVM(CentOS)では、時刻同期していないため時間が狂っている)&lt;/p&gt;

&lt;p&gt;date コマンドで正しい時刻に合わせ、再度ブラウザからアクセスすると下記メッセージが画面に表示された。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;healthcheck（individual）がFitbit.com上のあなたのプロフィールおよびデータへのアクセスを要求しています：&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;「許可する」をクリックするとサンプルページが表示され、自分の健康データが表示されました。&lt;/p&gt;

&lt;p&gt;(予め fitbitの「&lt;a href=&quot;https://dev.fitbit.com/apps/new&quot;&gt;開発者ページ&lt;/a&gt;」で、callbackのページを上記URLにしておく)&lt;/p&gt;

&lt;p&gt;※OAuthは&lt;a href=&quot;http://yuroyoro.hatenablog.com/entry/20100506/1273137673&quot;&gt;こちらのページ&lt;/a&gt;で復習。&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;1-3.サンプルプログラム修正(【変更】の部分を自分の設定に書き換えます)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;script src=&#39;https://gist.github.com/Sankame/8787002.js&#39; /&gt;</description>
                <link>http://sankame.github.io//fitbit/2014/02/04/php_fitbit_api</link>
                <guid>http://sankame.github.io//fitbit/2014/02/04/php_fitbit_api</guid>
                <pubDate>2014-02-04T09:00:00+09:00</pubDate>
        </item>

        <item>
                <title>PHPメモ</title>
                <description>
&lt;p&gt;&lt;span&gt;&lt;a class=&#39;twitter-follow-button&#39; data-dnt=&#39;true&#39; data-lang=&#39;ja&#39; data-show-count=&#39;false&#39; data-show-screen-name=&#39;false&#39; data-size=&#39;large&#39; href=&#39;https://twitter.com/handycola&#39;&gt;@handycolaさんをフォロー&lt;/a&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&amp;#39;http&amp;#39;:&amp;#39;https&amp;#39;;if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+&amp;#39;://platform.twitter.com/widgets.js&amp;#39;;fjs.parentNode.insertBefore(js,fjs);}}(document, &amp;#39;script&amp;#39;, &amp;#39;twitter-wjs&amp;#39;);&lt;/script&gt;&lt;/span&gt;&lt;span style=&#39;float:right;&#39;&gt;投稿日：2014年02月02日&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;ins class=&#39;adsbygoogle&#39; data-ad-client=&#39;ca-pub-7938855665302783&#39; data-ad-slot=&#39;6346277556&#39; style=&#39;display:inline-block;width:468px;height:60px&#39; /&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;
&lt;/div&gt;
&lt;h4 id=&quot;php_&quot;&gt;PHPメモ (自分用)&lt;/h4&gt;

&lt;h5 id=&quot;1_extension&quot;&gt;(1) extensionが追加されたかコマンドラインで確認&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;下記は例。OAuthの部分は任意のextension名に置き換える。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# php -r &amp;quot;echo phpinfo();&amp;quot;|grep OAuth
OAuth
OAuth support =&amp;gt; enabled&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
                <link>http://sankame.github.io//PHP/2014/02/02/php_sample</link>
                <guid>http://sankame.github.io//PHP/2014/02/02/php_sample</guid>
                <pubDate>2014-02-02T09:00:00+09:00</pubDate>
        </item>

        <item>
                <title>スマホ(Android)とPCでMindMapを使う</title>
                <description>
&lt;p&gt;&lt;span&gt;&lt;a class=&#39;twitter-follow-button&#39; data-dnt=&#39;true&#39; data-lang=&#39;ja&#39; data-show-count=&#39;false&#39; data-show-screen-name=&#39;false&#39; data-size=&#39;large&#39; href=&#39;https://twitter.com/handycola&#39;&gt;@handycolaさんをフォロー&lt;/a&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&amp;#39;http&amp;#39;:&amp;#39;https&amp;#39;;if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+&amp;#39;://platform.twitter.com/widgets.js&amp;#39;;fjs.parentNode.insertBefore(js,fjs);}}(document, &amp;#39;script&amp;#39;, &amp;#39;twitter-wjs&amp;#39;);&lt;/script&gt;&lt;/span&gt;&lt;span style=&#39;float:right;&#39;&gt;投稿日：2013年10月04日&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;ins class=&#39;adsbygoogle&#39; data-ad-client=&#39;ca-pub-7938855665302783&#39; data-ad-slot=&#39;6346277556&#39; style=&#39;display:inline-block;width:468px;height:60px&#39; /&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;
&lt;/div&gt;
&lt;h5 id=&quot;0&quot;&gt;0.環境&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;[スマホ端末/OS] GALAXY S SC-02B / Android2.2
[PC端末/OS]    Gateway SX2800 / Windows Vista Home Premium&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;1&quot;&gt;1.スマホでマインドマップ作成&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;1-1.スマホにMindMapMemoをインストールする。&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;1-2.マインドマップのファイルを作成後、「オプション」-「メール送信(SD保存)」-「FreeMind(.mm)」を選択。&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;1-3.共有するためのアプリ一覧が表示されるので、PCへファイルを送信できるアプリを選択。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;2pcfreemind&quot;&gt;2.PCにFreeMindをインストール&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;2-1.下記リンク先のページで[0.8.1]をクリック。&lt;/p&gt;

&lt;p&gt;(0.9.0では上記スマホで作成したファイルをうまく開けませんでした)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://sourceforge.net/projects/freemind/files/freemind/&quot;&gt;FreeMindソース&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;2-2.[freemind-bin-0_8_1.zip]をクリック。&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;2-3.PCにダウンロード後、解凍してFreemind.exeをダブルクリック。&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;2-4.メニューの「ファイル」-「開く」で、スマホから送信した拡張子がmmのファイルを選択。&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;2-5.スマホではカラフルに作ったのにFreeMindで開くと白黒になっている。まあ内容が分かるからいいか…&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
                <link>http://sankame.github.io//MindMapMemo/2013/10/04/mind_map_tools</link>
                <guid>http://sankame.github.io//MindMapMemo/2013/10/04/mind_map_tools</guid>
                <pubDate>2013-10-04T09:00:00+09:00</pubDate>
        </item>

        <item>
                <title>PHP Debug Bar インストール</title>
                <description>
&lt;p&gt;&lt;span&gt;&lt;a class=&#39;twitter-follow-button&#39; data-dnt=&#39;true&#39; data-lang=&#39;ja&#39; data-show-count=&#39;false&#39; data-show-screen-name=&#39;false&#39; data-size=&#39;large&#39; href=&#39;https://twitter.com/handycola&#39;&gt;@handycolaさんをフォロー&lt;/a&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&amp;#39;http&amp;#39;:&amp;#39;https&amp;#39;;if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+&amp;#39;://platform.twitter.com/widgets.js&amp;#39;;fjs.parentNode.insertBefore(js,fjs);}}(document, &amp;#39;script&amp;#39;, &amp;#39;twitter-wjs&amp;#39;);&lt;/script&gt;&lt;/span&gt;&lt;span style=&#39;float:right;&#39;&gt;投稿日：2013年09月23日&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;ins class=&#39;adsbygoogle&#39; data-ad-client=&#39;ca-pub-7938855665302783&#39; data-ad-slot=&#39;6346277556&#39; style=&#39;display:inline-block;width:468px;height:60px&#39; /&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;
&lt;/div&gt;
&lt;h5 id=&quot;0&quot;&gt;0.環境&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;PHPフレームワークPhalconでPHP Debug Barを使うときの例です。

[CentOS]  5.6 (32bit版カーネル)
[Apache]  2.2.3
[PHP]     5.4.1
[phalcon] 1.2.1&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;1php_debug_bar&quot;&gt;1.PHP Debug Barをインストール&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;1-1.Webサーバのドキュメントルートにcomposer.jsonを配置し次の内容を記述。(下図1-3参照)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    &amp;quot;require&amp;quot;: {
        &amp;quot;maximebf/debugbar&amp;quot;: &amp;quot;&amp;gt;=1.0.0&amp;quot;
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;1-2.Webサーバのドキュメントルートで次のコマンドを実行。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# composer install&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;※composerが未インストールの場合、&lt;a href=&quot;http://9ensan.com/blog/programming/php/php-composer-dependency-management/&quot;&gt;こちら&lt;/a&gt;を参考にインストールして下さい。&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;1-3.ディレクトリ構成&lt;/p&gt;

&lt;p&gt;app_rootはWebサイトのルートディレクトリで、publicが公開ディレクトリです。&lt;/p&gt;

&lt;p&gt;薄オレンジはcomposerで設置されたもの。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/img/php_debug_bar_install/directory_image.jpg&quot; alt=&quot;ディレクトリ構成&quot; title=&quot;ディレクトリ構成&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;2_&quot;&gt;2.コードを記述 (ポイント以外は割愛)&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;2-0.index.php(フレームワークのエントリポイント)に次の内容を追記。&lt;/p&gt;
&lt;script src=&#39;https://gist.github.com/d953437cd1ac4a5df725.js?file=require_autoload.php&#39;&gt; &lt;/script&gt;
&lt;p&gt;&lt;code&gt;composer関係のファイルをバージョン管理(svn, git等)から除外した場合、この記述だけ残してリリースしないよう注意。&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;2-1.ControllerBase(全コントローラの親クラス)に次の内容を追記。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;use DebugBar\StandardDebugBar;

class ControllerBase extends Phalcon\Mvc\Controller
{
    protected $debugbar;

    // Actionメソッドの後処理
    public function afterExecuteRoute($dispatcher)
    {
    	$debugbarRenderer	= $this-&amp;gt;debugbar-&amp;gt;getJavascriptRenderer();

    	$this-&amp;gt;view-&amp;gt;setVar(&amp;#39;debugbarHeader&amp;#39;, $debugbarRenderer-&amp;gt;renderHead());
    	$this-&amp;gt;view-&amp;gt;setVar(&amp;#39;debugbarBody&amp;#39;, $debugbarRenderer-&amp;gt;render());

    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;2-2.ContactControllerに次の内容を追記。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// お問い合わせ画面
public function indexAction()
{
	$this-&amp;gt;debugbar[&amp;quot;messages&amp;quot;]-&amp;gt;addMessage(&amp;quot;DebugBarのテスト&amp;quot;);
}&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;2-3.index.volt(全viewが使う共通ファイル)に次の内容を追記。&lt;/p&gt;
&lt;script src=&#39;https://gist.github.com/eb6d098e2ef1f473ff7d.js?file=php_debugbar.volt&#39;&gt; &lt;/script&gt;&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;2-4.画面イメージ&lt;/p&gt;

&lt;p&gt;上記2-2で書いたメッセージが表示されています。&lt;/p&gt;

&lt;p&gt;実行時のその他の情報も表示されます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/img/php_debug_bar_install/screen_image.jpg&quot; alt=&quot;画面イメージ&quot; title=&quot;画面イメージ&quot; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;3&quot;&gt;3.参考ページ&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://www.moongift.jp/2013/08/20130829-3/&quot;&gt;紹介ページ&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://phpdebugbar.com/docs/&quot;&gt;PHP Debug Bar&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
                <link>http://sankame.github.io//PHPDebugBar/2013/09/23/php_debug_bar_install</link>
                <guid>http://sankame.github.io//PHPDebugBar/2013/09/23/php_debug_bar_install</guid>
                <pubDate>2013-09-23T09:00:00+09:00</pubDate>
        </item>

        <item>
                <title>Rubyを始める</title>
                <description>
&lt;p&gt;&lt;span&gt;&lt;a class=&#39;twitter-follow-button&#39; data-dnt=&#39;true&#39; data-lang=&#39;ja&#39; data-show-count=&#39;false&#39; data-show-screen-name=&#39;false&#39; data-size=&#39;large&#39; href=&#39;https://twitter.com/handycola&#39;&gt;@handycolaさんをフォロー&lt;/a&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&amp;#39;http&amp;#39;:&amp;#39;https&amp;#39;;if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+&amp;#39;://platform.twitter.com/widgets.js&amp;#39;;fjs.parentNode.insertBefore(js,fjs);}}(document, &amp;#39;script&amp;#39;, &amp;#39;twitter-wjs&amp;#39;);&lt;/script&gt;&lt;/span&gt;&lt;span style=&#39;float:right;&#39;&gt;投稿日：2013年09月16日&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;ins class=&#39;adsbygoogle&#39; data-ad-client=&#39;ca-pub-7938855665302783&#39; data-ad-slot=&#39;6346277556&#39; style=&#39;display:inline-block;width:468px;height:60px&#39; /&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;
&lt;/div&gt;
&lt;h3 id=&quot;ruby&quot;&gt;Rubyを始める&lt;/h3&gt;

&lt;h4 id=&quot;0&quot;&gt;0.環境&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;[CentOS] 5.6 (32bit版カーネル)&lt;/li&gt;

&lt;li&gt;[Apache] 2.2.3&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;1ruby&quot;&gt;1.Rubyインストール&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;1-1.Rubyがすでにインストールされているか調べる。&lt;/p&gt;

&lt;p&gt;(インストールされている場合は下記のように表示される)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# rpm -q ruby
ruby-1.8.6.111-1&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;1-2.インストールされていない場合、下記コマンドでインストール。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# yum install ruby ruby-devel rdoc irb&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;2apache&quot;&gt;2.Apache設定&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;2-1.mod_cgiがロードされていることを確認。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# cat /etc/httpd/conf/httpd.conf|grep mod_cgi
LoadModule cgi_module modules/mod_cgi.so&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;3htacess&quot;&gt;3.htacess設定&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;3-1.Apacheドキュメントルートの.htaccessに下記を追記。&lt;/p&gt;

&lt;p&gt;(ドキュメントルートのパスは読み替えて下さい)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# cat /var/www/html/.htaccess 
AddHandler cgi-script .cgi .rb
Options +ExecCGI&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;4&quot;&gt;4.動作確認&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;4-1.ファイル作成&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# touch /var/www/html/hello.rb&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;4-2.テストコード記述&lt;/p&gt;

&lt;p&gt;作成したファイルに下記コードを記述。&lt;/p&gt;

&lt;p&gt;(1行目のrubyのパスは、which ruby で調べて読み替えて下さい)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/usr/bin/ruby
print &amp;quot;Content-type:text/html\n\n&amp;quot;

print &amp;lt;&amp;lt;EOS
&amp;lt;HTML&amp;gt;
&amp;lt;HEAD&amp;gt;
&amp;lt;/HEAD&amp;gt;
&amp;lt;BODY&amp;gt;
Hello World!
&amp;lt;/BODY&amp;gt;
&amp;lt;/HTML&amp;gt;
EOS&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;5&quot;&gt;5.参考にしたページ&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.layer8.sh/ja/2011/12/21/yum%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6ruby%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B%E3%81%A8%E3%81%8D%E3%81%AE%E3%83%A1/&quot;&gt;インストール方法&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://w.livedoor.jp/notepad/d/Ruby%A4%F2apache%A4%C7%C6%B0%A4%AB%A4%B9&quot;&gt;Ruby動作確認&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
                <link>http://sankame.github.io//Ruby/2013/09/16/ruby_hello_world</link>
                <guid>http://sankame.github.io//Ruby/2013/09/16/ruby_hello_world</guid>
                <pubDate>2013-09-16T09:00:00+09:00</pubDate>
        </item>

        <item>
                <title>Gitコマンド メモ</title>
                <description>
&lt;p&gt;&lt;span&gt;&lt;a class=&#39;twitter-follow-button&#39; data-dnt=&#39;true&#39; data-lang=&#39;ja&#39; data-show-count=&#39;false&#39; data-show-screen-name=&#39;false&#39; data-size=&#39;large&#39; href=&#39;https://twitter.com/handycola&#39;&gt;@handycolaさんをフォロー&lt;/a&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&amp;#39;http&amp;#39;:&amp;#39;https&amp;#39;;if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+&amp;#39;://platform.twitter.com/widgets.js&amp;#39;;fjs.parentNode.insertBefore(js,fjs);}}(document, &amp;#39;script&amp;#39;, &amp;#39;twitter-wjs&amp;#39;);&lt;/script&gt;&lt;/span&gt;&lt;span style=&#39;float:right;&#39;&gt;投稿日：2013年09月09日&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;ins class=&#39;adsbygoogle&#39; data-ad-client=&#39;ca-pub-7938855665302783&#39; data-ad-slot=&#39;6346277556&#39; style=&#39;display:inline-block;width:468px;height:60px&#39; /&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;
&lt;/div&gt;
&lt;h4 id=&quot;git__&quot;&gt;Gitコマンド メモ (自分用)&lt;/h4&gt;

&lt;h5 id=&quot;1_gitignore_&quot;&gt;(1) .gitignoreファイル &lt;a href=&quot;http://www.omakase.org/misc/gitignore.html&quot;&gt;参考ページ&lt;/a&gt;&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# gitの管理外にしたいファイルを定義。下記のようにディレクトリ指定も可能。
# view .gitignore
app/logs/&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;2_git&quot;&gt;(2) インデックスから降ろす(git管理外にする)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# インデックスから降ろすだけ。
# git rm --cached -f hoge.txt

# インデックスから降ろして、ファイルを物理削除。
# git rm -f hoge.txt&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;3_20131007&quot;&gt;(3) ブランチ操作(2013/10/07)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# 今いるブランチは？
# git branch
* master

# ブランチtest1を作って、test1へ切り替える。
# git branch test1
# git checkout test1
Switched to branch &amp;#39;test1&amp;#39;

# masterブランチへ戻る。
# git checkout master
Switched to branch &amp;#39;master&amp;#39;

# 使わなくなったブランチtest1を削除。
# git branch -d test1
Deleted branch test1 (was 0854f22).
# git branch
* master&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;4_github20131007&quot;&gt;(4) GitHubからソースを取得(2013/10/07)&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;4-1.GitHubで対象のリポジトリに移動後、画面右下のボタン(下記)をクリックしてURLをクリップボードにコピー。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/img/git_command/github-clone.jpg&quot; alt=&quot;github-clone&quot; title=&quot;github-clone&quot; /&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;4-2.git clone の後に上記4-1でコピーしたURLを貼り付ける。&lt;/p&gt;

&lt;p&gt;予めGitHubに登録した公開鍵のパスフレーズを入力。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# git clone git@github.com:Sankame/test.git
Cloning into &amp;#39;test&amp;#39;...
Enter passphrase for key &amp;#39;/root/.ssh/id_rsa&amp;#39;: &lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;5_20140224&quot;&gt;(5) ローカル変更の取り消し(2014/02/24)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# ファイル指定でローカル変更を取り消し。
# git checkout filename
# 
# 全てのローカル変更を取り消し。
# git checkout .&lt;/code&gt;&lt;/pre&gt;
</description>
                <link>http://sankame.github.io//Git/2013/09/09/git_command</link>
                <guid>http://sankame.github.io//Git/2013/09/09/git_command</guid>
                <pubDate>2013-09-09T09:00:00+09:00</pubDate>
        </item>

        <item>
                <title>Nexus7のスクリーンをプロジェクタに映したい (Android Screen Cast)</title>
                <description>
&lt;p&gt;&lt;span&gt;&lt;a class=&#39;twitter-follow-button&#39; data-dnt=&#39;true&#39; data-lang=&#39;ja&#39; data-show-count=&#39;false&#39; data-show-screen-name=&#39;false&#39; data-size=&#39;large&#39; href=&#39;https://twitter.com/handycola&#39;&gt;@handycolaさんをフォロー&lt;/a&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&amp;#39;http&amp;#39;:&amp;#39;https&amp;#39;;if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+&amp;#39;://platform.twitter.com/widgets.js&amp;#39;;fjs.parentNode.insertBefore(js,fjs);}}(document, &amp;#39;script&amp;#39;, &amp;#39;twitter-wjs&amp;#39;);&lt;/script&gt;&lt;/span&gt;&lt;span style=&#39;float:right;&#39;&gt;投稿日：2013年09月01日&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;ins class=&#39;adsbygoogle&#39; data-ad-client=&#39;ca-pub-7938855665302783&#39; data-ad-slot=&#39;6346277556&#39; style=&#39;display:inline-block;width:468px;height:60px&#39; /&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;
&lt;/div&gt;
&lt;h5 id=&quot;0&quot;&gt;0.環境&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;[タブレット端末/OS]  Nexus7 / Android 4.2.2
[PC端末/OS]        Gateway SX2800 / Windows Vista Home Premium&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;0_2&quot;&gt;0.検討&lt;/h5&gt;

&lt;p&gt;プレゼン用途でNexus7のスクリーン映像をプロジェクタに映したいと考え、いくつか検討した結果、下記3で行うことにしました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://www.amazon.co.jp/dp/B005RUM754/ref=as_li_ss_til?tag=uni6605-22&amp;camp=1027&amp;creative=7407&amp;linkCode=as4&amp;creativeASIN=B005RUM754&amp;adid=004HQM7Z4FR3M83JKTW2&amp;&amp;ref-refURL=http%3A%2F%2Flove-guava.com%2Fit-is-difficult-in-it-being-unexpected-to-output-the-screen-of-nexus7-to-a-display%2F&quot;&gt;1.変換器を使う&lt;/a&gt; →Nexus7はMHL非対応…&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.awindinc.sphone2tv&quot;&gt;2.ソフトで解決&lt;/a&gt; →PCに映像を送信する方法。有料かつNexus7のRoot化が必要。&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://www.moongift.jp/2009/09/androidscreencast&quot;&gt;3.ソフトで解決&lt;/a&gt; →PCに映像を送信する方法。無料かつRoot化の必要もなし。Nexus7の映像がPCに届くまで数秒のタイムラグあり。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;1pcandroid_sdk&quot;&gt;1.PCにAndroid SDKをインストール&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;下記ページの[download here] - [Download the SDK]ボタンをクリック。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://code.google.com/p/androidscreencast/&quot;&gt;ダウンロード&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;規約に同意したら「I have read and agree…」にチェック。&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;32ビットか64ビットかは、下記の手順で調べる。&lt;/p&gt;

&lt;p&gt;[スタート]メニュー - [コンピュータ]右クリック - [プロパティ]&lt;/p&gt;

&lt;p&gt;[システムの種類]に記載。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;2usbnexus7pc&quot;&gt;2.USBケーブルでNexus7とPCを接続&lt;/h5&gt;

&lt;h5 id=&quot;3android_screen_cast&quot;&gt;3.Android Screen Cast&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;3-1.下記リンクからAndroid Screen CastをPCにダウンロードし、任意のフォルダに保存する。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://androidscreencast.googlecode.com/svn/trunk/AndroidScreencast/dist/androidscreencast.jnlp&quot;&gt;ダウンロード&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;3-2.コマンドプロンプトで上記3-1のフォルダに移動し、下記コマンドを実行。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; javaws androidscreencast.jnlp&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;3-3.JREをバージョンアップするよう警告が出たので、最新をインストールした結果、下記のバージョンになった。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; java -version
  java version &amp;quot;1.7.0_25&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;3-4.再び3-2のコマンドを実行すると下記エラーが発生。&lt;/p&gt;

&lt;p&gt;Timeout getting device list&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;3-5.adb usb 実行 &lt;a href=&quot;http://code.google.com/p/androidscreencast/issues/detail?id=49&quot;&gt;(参考ページ)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;PCでコマンドプロンプトを起動し、”platform-tools”フォルダに移動。(パスは読み替えて下さい)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; cd C:\soft\Android\adt-bundle-windows-x86-20130729\sdk\platform-tools
&amp;gt; adb usb
 error: device not found&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;4usb&quot;&gt;4.USBドライバ&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;4-1.USBドライバ&lt;/p&gt;

&lt;p&gt;上記3-5でエラーになったので、USBドライバをインストールする。&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;4-2.インストール&lt;/p&gt;

&lt;p&gt;PC側で、上記1でダウンロードした”SDK Manager.exe”をダブルクリックして起動する。&lt;/p&gt;

&lt;p&gt;“Google USB Driver”にチェックして、[Install 1 package…]をクリック。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/img/nexus7_projected_to_pc/10.jpg&quot; alt=&quot;画像10&quot; title=&quot;画像10&quot; /&gt;&lt;/p&gt;

&lt;p&gt;※もし”Failed to fetch URL”というエラーが出た場合は、代替策として下記5を参照。&lt;/p&gt;

&lt;p&gt;規約に同意したら[Install]をクリック。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/img/nexus7_projected_to_pc/11.jpg&quot; alt=&quot;画像11&quot; title=&quot;画像11&quot; /&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;4-3.USBドライバ更新&lt;/p&gt;

&lt;p&gt;さらにPC側で、下記ノードを右クリックしてプロパティから[ドライバの更新]をクリック。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[スタート]-[コントロール パネル]-[デバイスマネージャ]-[Android Phone]&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下記パスを選択してドライバを指定する。(パスは読み替えて下さい)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\soft\Android\adt-bundle-windows-x86-20130729\sdk\extras&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;インストールが完了したらPCを再起動。 →下記5を飛ばして6以降を参照。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;5pdanet&quot;&gt;5.PdaNet&lt;/h5&gt;

&lt;p&gt;&lt;a href=&quot;http://www.dominantwire.com/2012/11/how-to-solve-adb-device-not-found-error.html&quot;&gt;参考ページ&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pdanet.co/&quot;&gt;PdaNet&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;【注意】PdaNetがインストールするUSBドライバを利用します。&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;PdaNetはモバイル端末経由でPCをネット接続するソフトなので、モバイル端末のネット接続が従量課金の場合は、注意して下さい。&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;5-1.上記3-6でダウンロードしたインストーラ(PdaNetA4126.exe)を起動。&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;5-2.インストール途中で下記メッセージが出た。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/img/nexus7_projected_to_pc/1.jpg&quot; alt=&quot;画像1&quot; title=&quot;画像1&quot; /&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;5-3.Nexus7 開発者メニュー&lt;/p&gt;

&lt;p&gt;Nexus7で[設定]-[タブレット情報]-[ビルド番号]を7回タップし、[設定]-[開発者向けオプション]を表示する。&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;5-4.Nexus7 USBデバッグ&lt;/p&gt;

&lt;p&gt;Nexus7で[開発者向けオプション]-[USBデバッグ] をONにする。&lt;/p&gt;

&lt;p&gt;直後に、PC側でインストーラが再開した。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/img/nexus7_projected_to_pc/2.jpg&quot; alt=&quot;画像2&quot; title=&quot;画像2&quot; /&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;5-5.Nexus7で下記メッセージが出たので、”許可する”を選択する。&lt;/p&gt;

&lt;p&gt;“このパソコンのRSAキーのフィンガープリント…”&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;5-6.PC側で下記メッセージが出たので、”インストール”をクリック。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/img/nexus7_projected_to_pc/3.jpg&quot; alt=&quot;画像3&quot; title=&quot;画像3&quot; /&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;5-6.Nexus7で下記メッセージが出たので、そのままOKを選択。&lt;/p&gt;

&lt;p&gt;“Googleが定期的にインストールされたアプリをチェックする”&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;5-7.インストール完了&lt;/p&gt;

&lt;p&gt;下記画面が表示されればインストールは完了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/img/nexus7_projected_to_pc/4.jpg&quot; alt=&quot;画像4&quot; title=&quot;画像4&quot; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;6android_screen_cast&quot;&gt;6.Android Screen Cast起動&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;6-1.Android Phoneの認識&lt;/p&gt;

&lt;p&gt;PC側のデバイスにAndroid Phoneが追加されていればOK。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[スタート]-[コントロール パネル]-[デバイスマネージャ]-[Android Phone]&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;6-2.上記3-5のコマンドを再実行すると下記が表示される。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;* daemon not running. starting it now on port 5037 *
* daemon started successfully *
restarting in USB mode&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;6-3. 上記3-2の操作を再実行し、Nexus7の画面がPC側に表示されれば成功。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
                <link>http://sankame.github.io//Nexus7/2013/09/01/nexus7_projected_to_pc</link>
                <guid>http://sankame.github.io//Nexus7/2013/09/01/nexus7_projected_to_pc</guid>
                <pubDate>2013-09-01T09:00:00+09:00</pubDate>
        </item>

        <item>
                <title>MySQLコマンド メモ</title>
                <description>
&lt;p&gt;&lt;span&gt;&lt;a class=&#39;twitter-follow-button&#39; data-dnt=&#39;true&#39; data-lang=&#39;ja&#39; data-show-count=&#39;false&#39; data-show-screen-name=&#39;false&#39; data-size=&#39;large&#39; href=&#39;https://twitter.com/handycola&#39;&gt;@handycolaさんをフォロー&lt;/a&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&amp;#39;http&amp;#39;:&amp;#39;https&amp;#39;;if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+&amp;#39;://platform.twitter.com/widgets.js&amp;#39;;fjs.parentNode.insertBefore(js,fjs);}}(document, &amp;#39;script&amp;#39;, &amp;#39;twitter-wjs&amp;#39;);&lt;/script&gt;&lt;/span&gt;&lt;span style=&#39;float:right;&#39;&gt;投稿日：2013年08月26日&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;ins class=&#39;adsbygoogle&#39; data-ad-client=&#39;ca-pub-7938855665302783&#39; data-ad-slot=&#39;6346277556&#39; style=&#39;display:inline-block;width:468px;height:60px&#39; /&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;
&lt;/div&gt;
&lt;h4 id=&quot;mysql_&quot;&gt;MySQLコマンド メモ&lt;/h4&gt;

&lt;h5 id=&quot;webdb1&quot;&gt;WebサーバとDBサーバが1台のマシンにある場合によく行う操作。&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# そのマシンのMySQLサーバにrootで接続
# (パスワードを聞かれるので入力してEnter)
# mysql -h 127.0.0.1 -u root -p

mysql&amp;gt; -- UTF8でDBを作成し、接続ユーザを作成 (先頭がtestの文字は読み替えて下さい)
mysql&amp;gt; create database testdb default character set utf8;
mysql&amp;gt; grant all on testdb.* to &amp;#39;testuser&amp;#39;@&amp;#39;localhost&amp;#39; identified by &amp;#39;testpassword&amp;#39;;
mysql&amp;gt; flush privileges;

mysql&amp;gt; -- 別マシンからDBへ接続する必要がある場合は、以下のように別ユーザを作成
mysql&amp;gt; -- (192.168.0.1の部分を別マシンのIPに読み替える)
mysql&amp;gt; grant all on testdb.* to testuser@192.168.0.1 identified by &amp;#39;testpassword&amp;#39;;

mysql&amp;gt; -- 作成したDBに切り替え、テーブルを作成
mysql&amp;gt; use testdb;

mysql&amp;gt; DROP TABLE IF EXISTS `users`;

mysql&amp;gt; CREATE TABLE `users` (
mysql&amp;gt;   `id`         bigint unsigned NOT NULL AUTO_INCREMENT PRIMARY KEY,
mysql&amp;gt;   `username`   varchar(32) NOT NULL
mysql&amp;gt; ) ENGINE=InnoDB;&lt;/code&gt;&lt;/pre&gt;
</description>
                <link>http://sankame.github.io//MySQL/2013/08/26/mysql_command</link>
                <guid>http://sankame.github.io//MySQL/2013/08/26/mysql_command</guid>
                <pubDate>2013-08-26T09:00:00+09:00</pubDate>
        </item>

        <item>
                <title>Nexus7とGitHubでプログラミング環境を作る</title>
                <description>
&lt;p&gt;&lt;span&gt;&lt;a class=&#39;twitter-follow-button&#39; data-dnt=&#39;true&#39; data-lang=&#39;ja&#39; data-show-count=&#39;false&#39; data-show-screen-name=&#39;false&#39; data-size=&#39;large&#39; href=&#39;https://twitter.com/handycola&#39;&gt;@handycolaさんをフォロー&lt;/a&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&amp;#39;http&amp;#39;:&amp;#39;https&amp;#39;;if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+&amp;#39;://platform.twitter.com/widgets.js&amp;#39;;fjs.parentNode.insertBefore(js,fjs);}}(document, &amp;#39;script&amp;#39;, &amp;#39;twitter-wjs&amp;#39;);&lt;/script&gt;&lt;/span&gt;&lt;span style=&#39;float:right;&#39;&gt;投稿日：2013年08月11日&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;ins class=&#39;adsbygoogle&#39; data-ad-client=&#39;ca-pub-7938855665302783&#39; data-ad-slot=&#39;6346277556&#39; style=&#39;display:inline-block;width:468px;height:60px&#39; /&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;
&lt;/div&gt;
&lt;h5 id=&quot;0&quot;&gt;0.環境&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;[端末] Nexus7
[OS]   Android 4.2.2
[BlueToothキーボード] ELECOM TK-FBP013&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;1nexus7bit_web_server_&quot;&gt;1.Nexus7にBit Web Serverをインストール &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.andi.serverweb&quot;&gt;(ダウンロード)&lt;/a&gt;&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;Android上でPHPとMySQLを動かせるアプリ。(有料 約230円)
root化しないで使用可能。&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;2nexus7terminal_ide_&quot;&gt;2.Nexus7にTerminal IDEをインストール &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.spartacusrex.spartacuside&quot;&gt;(ダウンロード)&lt;/a&gt;&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;Android用の開発環境。java、c、c++等のコンパイラを含む。
root化しないで使用可能。&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;3hello_world&quot;&gt;3.Hello World&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;Nexus7にBlueToothキーボードを接続。

Nexus7でTerminal IDEを起動。

いくつかのボタンが表示されるので、[Install System]をクリック。

Overwrite ALLにチェックを入れ、[Install System]をクリックし、システムアップデート。

[Terminal IDE]をクリック。

コンソールが起動するので、ファイルを作成し、以下の内容を書き込む。

$ cd $HOME/sdcard/wwww
$
$ vim hello.php&lt;/code&gt;&lt;/pre&gt;
&lt;script src=&#39;https://gist.github.com/29b89884b38df722f9c6.js?file=test_hello.php&#39;&gt; &lt;/script&gt;
&lt;pre&gt;&lt;code&gt;Nexus7でBit Web Serverを起動。

[Localhost]をクリック。

ブラウザが起動し、表示されたファイル一覧から上記で作成したhello.phpをクリック。

ブラウザにhelloと表示されれば成功。&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;4github&quot;&gt;4.GitHubにファイルをアップ(準備)&lt;/h5&gt;

&lt;p&gt;せっかくなのでNexus7からGitHubにファイルをアップしてみる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ 公開鍵と秘密鍵を作成。
$ Nexus7で以下のコマンドを打つ。
$ dropbearkey -t rsa -f $HOME/.ssh/id_rsa
$
$ 作成した鍵を表示。
$ dropbearkey -y -f ~/.ssh/id_rsa
$ 
$ ssh-rsaの1行(公開鍵)をコピーする。

GitHubダッシュボード画面の右上「Account Settings」をクリック。
(GitHubアカウントは作成済みとします)
左メニューの「SSH Keys」クリック。
「Add SSH key」をクリックし、Titleに任意の値、Keyに上記でコピーした内容(公開鍵)を入力する。

GitHubダッシュボード画面の「Repositories」-「New」をクリックし、新規リポジトリを作成する。

$ Nexus7に戻り、以下のファイルを作成し、追記内容を書き込む。
$ vim /data/data/com.spartacusrex.spartacuside/files/bin/ssh-with-default-key

--------------(追記内容)-----------
#!/data/data/com.spartacusrex.spartacuside/files/system/bin/bash
exec ssh -i ~/.ssh/id_rsa &amp;quot;$@&amp;quot;
--------------(追記内容)-----------

$ chmod 755 /data/data/com.spartacusrex.spartacuside/files/bin/ssh-with-default-key

$ さらに以下のファイルに追記内容を書き込む。
$ vim $HOME/.bashrc

--------------(追記内容)-----------
export GIT_SSH=$HOME/bin/ssh-with-default-key
--------------(追記内容)-----------&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;5github&quot;&gt;5.GitHubにファイルをアップ&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;$ Nexus7に戻って以下のコマンドを打つ。
$ cd $HOME/sdcard/wwww
$ git init
$ touch new.txt
$ git add .
$ git commit -m &amp;#39;add new.txt&amp;#39;
$ 【】内は自分の設定に読み替える。
$ git remote add origin git@github.com:【アカウント名】/【リポジトリ名】.git
$ git push origin master
$
$ これでGitHubにnew.txtがアップロードできたはず。&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;&quot;&gt;参考ページ&lt;/h5&gt;

&lt;p&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.andi.serverweb&quot;&gt;Terminal IDEの設定&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.katsuma.tv/2009/02/first_github.html&quot;&gt;Githubへのpush&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://jp.linux.com/linux-community/blog/236-mirainoitsuka/403358&quot;&gt;Githubへのpush2&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://sankame.github.io//Nexus7/2013/08/11/nexus7_github_devenv</link>
                <guid>http://sankame.github.io//Nexus7/2013/08/11/nexus7_github_devenv</guid>
                <pubDate>2013-08-11T09:00:00+09:00</pubDate>
        </item>

        <item>
                <title>Redisインストール</title>
                <description>
&lt;p&gt;&lt;span&gt;&lt;a class=&#39;twitter-follow-button&#39; data-dnt=&#39;true&#39; data-lang=&#39;ja&#39; data-show-count=&#39;false&#39; data-show-screen-name=&#39;false&#39; data-size=&#39;large&#39; href=&#39;https://twitter.com/handycola&#39;&gt;@handycolaさんをフォロー&lt;/a&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&amp;#39;http&amp;#39;:&amp;#39;https&amp;#39;;if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+&amp;#39;://platform.twitter.com/widgets.js&amp;#39;;fjs.parentNode.insertBefore(js,fjs);}}(document, &amp;#39;script&amp;#39;, &amp;#39;twitter-wjs&amp;#39;);&lt;/script&gt;&lt;/span&gt;&lt;span style=&#39;float:right;&#39;&gt;投稿日：2013年07月10日&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;ins class=&#39;adsbygoogle&#39; data-ad-client=&#39;ca-pub-7938855665302783&#39; data-ad-slot=&#39;6346277556&#39; style=&#39;display:inline-block;width:468px;height:60px&#39; /&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;
&lt;/div&gt;
&lt;h5 id=&quot;&quot;&gt;環境&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;[CentOS] 5.6 (32bit版カーネル)&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;_2&quot;&gt;インストール&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# ソース取得。
# wget http://redis.googlecode.com/files/redis-2.6.7.tar.gz
#
# tar xzf redis-2.6.7.tar.gz
#
# cd redis-2.6.7
#
# 続いてmakeを実行すると下記エラーが発生。
# make

cd src &amp;amp;&amp;amp; make all
make[1]: ディレクトリ `/root/redis-2.6.7/src&amp;#39; に入ります
LINK redis-server
zmalloc.o: In function `zmalloc_used_memory&amp;#39;:
/root/redis-2.6.7/src/zmalloc.c:223: undefined reference to `__sync_add_and_fetch_4&amp;#39;
collect2: ld はステータス 1 で終了しました
make[1]: *** [redis-server] エラー 1
make[1]: ディレクトリ `/root/redis-2.6.7/src&amp;#39; から出ます
make: *** [all] エラー 2

# アーキテクチャを調べて、コンパイルオプションを指定。
# uname -m

i686

# 
# export CFLAGS=-march=i686
#
# make distclean
# make
# 下記メッセージが出てmakeは通ったらしい。

Hint: To run &amp;#39;make test&amp;#39; is a good idea ;)

# 続いてmake testを実行すると下記エラーが発生。
# make test

ERROR:
*** [err]: SLOWLOG - RESET subcommand works in tests/unit/slowlog.tcl
Expected &amp;#39;0&amp;#39; to equal or match &amp;#39;1&amp;#39;
*** [err]: SLOWLOG - logged entry sanity check in tests/unit/slowlog.tcl
Expected &amp;#39;105&amp;#39; to be equal to &amp;#39;106&amp;#39;
Cleanup: may take some time... OK
make[1]: *** [test] エラー 1
make[1]: ディレクトリ `/root/redis-2.6.7/src&amp;#39; から出ます
make: *** [test] エラー 2

# 構わずインストール。
# make install
# 
# 起動。
# redis-server
#
# 動作確認。
# redis-cli PING

PONG

# redisサーバは起動しているようだ…&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;http://www.eschrade.com/page/undefined-reference-to-__sync_add_and_fetch_4/&quot;&gt;エラー時に参照したページ&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://sankame.github.io//DELL/2013/07/10/redis_install</link>
                <guid>http://sankame.github.io//DELL/2013/07/10/redis_install</guid>
                <pubDate>2013-07-10T09:00:00+09:00</pubDate>
        </item>

        <item>
                <title>DELL E5520 のタッチパッドをOFFにする</title>
                <description>
&lt;p&gt;&lt;span&gt;&lt;a class=&#39;twitter-follow-button&#39; data-dnt=&#39;true&#39; data-lang=&#39;ja&#39; data-show-count=&#39;false&#39; data-show-screen-name=&#39;false&#39; data-size=&#39;large&#39; href=&#39;https://twitter.com/handycola&#39;&gt;@handycolaさんをフォロー&lt;/a&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&amp;#39;http&amp;#39;:&amp;#39;https&amp;#39;;if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+&amp;#39;://platform.twitter.com/widgets.js&amp;#39;;fjs.parentNode.insertBefore(js,fjs);}}(document, &amp;#39;script&amp;#39;, &amp;#39;twitter-wjs&amp;#39;);&lt;/script&gt;&lt;/span&gt;&lt;span style=&#39;float:right;&#39;&gt;投稿日：2013年07月05日&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;ins class=&#39;adsbygoogle&#39; data-ad-client=&#39;ca-pub-7938855665302783&#39; data-ad-slot=&#39;6346277556&#39; style=&#39;display:inline-block;width:468px;height:60px&#39; /&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;
&lt;/div&gt;
&lt;h5 id=&quot;&quot;&gt;環境&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;[PC] DELL E5520
[OS] Windows 7 Professional (SP1)&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;1_&quot;&gt;1. ドライバダウンロード&lt;/h5&gt;

&lt;p&gt;&lt;a href=&quot;http://www.dell.com/support/drivers/jp/ja/jpdhs1/Product/latitude-e5520&quot;&gt;ダウンロードページ&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;上記ダウンロードページを開く。
&amp;quot;マウス、キーボード、入力デバイス&amp;quot; を開く。
&amp;quot;Dell Multi-Touch Touchpad Driver&amp;quot; の右横にある「ファイルのダウンロード」をクリック。&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;2_&quot;&gt;2. ドライバファイルの選択&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;Hard-Drive-ALPS_MULTI-TOUCH-TOUCHPAD_A06_GGY5W_SETUP_ZPE.exe
を選択して「続行」をクリック。&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;3_&quot;&gt;3. ダウンロードセレクタ&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;単一ファイルのダウンロード&amp;quot;
を選択して「続行」をクリック。&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;4_&quot;&gt;4. インストール&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;ダウンロード後、EXEファイルを実行。
インストールしたら再起動。&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;5_&quot;&gt;5. アプリ起動&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;Windows[スタートメニュー] - [コントロールパネル]を開く。
Dell Touchpad が増えているのでダブルクリック。&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;6_off&quot;&gt;6. タッチパッドOff&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;DELLポインティングデバイス　というダイアログが起動。
左メニューで任意のものを選択して、タッチパッドのOn/Offで O をクリックして、保存ボタンクリック。
こうするとタッチパッドがOffになる。

※見つからない場合は右上の「表示方法」を「小さいアイコン」または「大きいアイコン」に変更する。&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q13104530838&quot;&gt;参考ページ&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://sankame.github.io//DELL/2013/07/05/dell_e5520_touchpad</link>
                <guid>http://sankame.github.io//DELL/2013/07/05/dell_e5520_touchpad</guid>
                <pubDate>2013-07-05T09:00:00+09:00</pubDate>
        </item>

        <item>
                <title>Smartyで3点リーダー(省略)表現</title>
                <description>
&lt;p&gt;&lt;span&gt;&lt;a class=&#39;twitter-follow-button&#39; data-dnt=&#39;true&#39; data-lang=&#39;ja&#39; data-show-count=&#39;false&#39; data-show-screen-name=&#39;false&#39; data-size=&#39;large&#39; href=&#39;https://twitter.com/handycola&#39;&gt;@handycolaさんをフォロー&lt;/a&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&amp;#39;http&amp;#39;:&amp;#39;https&amp;#39;;if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+&amp;#39;://platform.twitter.com/widgets.js&amp;#39;;fjs.parentNode.insertBefore(js,fjs);}}(document, &amp;#39;script&amp;#39;, &amp;#39;twitter-wjs&amp;#39;);&lt;/script&gt;&lt;/span&gt;&lt;span style=&#39;float:right;&#39;&gt;投稿日：2013年05月12日&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;ins class=&#39;adsbygoogle&#39; data-ad-client=&#39;ca-pub-7938855665302783&#39; data-ad-slot=&#39;6346277556&#39; style=&#39;display:inline-block;width:468px;height:60px&#39; /&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;
&lt;/div&gt;
&lt;h5 id=&quot;109&quot;&gt;10文字以上の場合、9文字目を…にして残りを切り捨てる。&lt;/h5&gt;

&lt;h5 id=&quot;1&quot;&gt;(半角、全角ともに1文字として扱う)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;{if mb_strlen($keyword) &amp;gt; 9}
	{assign var=cutKeyword value=$keyword|mb_substr:0:8|cat:&amp;#39;…&amp;#39;}
{else}
	{assign var=cutKeyword value=$keyword}
{/if}
&amp;lt;a class=&amp;quot;keyword-link&amp;quot; href=&amp;quot;#&amp;quot; title=&amp;quot;{$keyword}&amp;quot;&amp;gt;{$cutKeyword}&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;&quot;&gt;上記コードで各文字列を変換した場合。&lt;/h5&gt;

&lt;h5 id=&quot;_&quot;&gt;(“→” は変換前後を表す)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;１２３４５６７８　　　→　１２３４５６７８
１２３４５６７８９　　→　１２３４５６７８９
１２３４５６７８９Ａ　→　１２３４５６７８…
123456789          →　123456789
123456789A         →　12345678…&lt;/code&gt;&lt;/pre&gt;
</description>
                <link>http://sankame.github.io//Smarty/2013/05/12/smarty_ellipses</link>
                <guid>http://sankame.github.io//Smarty/2013/05/12/smarty_ellipses</guid>
                <pubDate>2013-05-12T09:00:00+09:00</pubDate>
        </item>

        <item>
                <title>PHPでMeCabを利用</title>
                <description>
&lt;p&gt;&lt;span&gt;&lt;a class=&#39;twitter-follow-button&#39; data-dnt=&#39;true&#39; data-lang=&#39;ja&#39; data-show-count=&#39;false&#39; data-show-screen-name=&#39;false&#39; data-size=&#39;large&#39; href=&#39;https://twitter.com/handycola&#39;&gt;@handycolaさんをフォロー&lt;/a&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&amp;#39;http&amp;#39;:&amp;#39;https&amp;#39;;if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+&amp;#39;://platform.twitter.com/widgets.js&amp;#39;;fjs.parentNode.insertBefore(js,fjs);}}(document, &amp;#39;script&amp;#39;, &amp;#39;twitter-wjs&amp;#39;);&lt;/script&gt;&lt;/span&gt;&lt;span style=&#39;float:right;&#39;&gt;投稿日：2013年04月29日&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;ins class=&#39;adsbygoogle&#39; data-ad-client=&#39;ca-pub-7938855665302783&#39; data-ad-slot=&#39;6346277556&#39; style=&#39;display:inline-block;width:468px;height:60px&#39; /&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;
&lt;/div&gt;
&lt;h4 id=&quot;phpmecab&quot;&gt;PHPからMeCabを使ってみる。&lt;/h4&gt;

&lt;h5 id=&quot;&quot;&gt;環境&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;[CentOS] 5.6 (32bit版カーネル)
[PHP]    5.3.3&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;0mecab&quot;&gt;0.MeCabインストール&lt;/h5&gt;

&lt;p&gt;&lt;a href=&quot;/MeCab/2013/01/28/mecab_install/&quot;&gt;MeCabインストール方法&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# まずは上記の手順でMeCabをインストール。&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;1php_mecab&quot;&gt;1.php_mecabインストール&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# wget -O php_mecab-0.5.zip https://nodeload.github.com/rsky/php-mecab/zip/master --no-check-certificate
# 
# unzip php_mecab-0.5.zip
# 
# mv -f php-mecab-master php_mecab-0.5
# 
# cd php_mecab-0.5/mecab
# 
# phpize
# 
# ./configure
# 
# make
# 
# make test
# 
# make install&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;2&quot;&gt;2.テスト&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# インストールが成功したら、phpからテスト
# (Apache経由で動かす場合はhttpdを再起動して下さい)
# 
# echo &amp;quot;extension=mecab.so&amp;quot; &amp;gt; /etc/php.d/mecab.ini
# vim mecabtest.php

&amp;lt;script src=&amp;quot;https://gist.github.com/d0ff28564c451c4372cf.js?file=test_php_mecab.php&amp;quot;&amp;gt; &amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&quot;3php&quot;&gt;3.作成したphpファイルを実行&lt;/h6&gt;

&lt;pre&gt;&lt;code&gt;# php mecabtest.php 

--------------(実行結果)--------------
すもも  名詞,一般,*,*,*,*,すもも,スモモ,スモモ
も      助詞,係助詞,*,*,*,*,も,モ,モ
もも    名詞,一般,*,*,*,*,もも,モモ,モモ
も      助詞,係助詞,*,*,*,*,も,モ,モ
もも    名詞,一般,*,*,*,*,もも,モモ,モモ
の      助詞,連体化,*,*,*,*,の,ノ,ノ
うち    名詞,非自立,副詞可能,*,*,*,うち,ウチ,ウチ
EOS
--------------(実行結果)--------------&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;http://kohkimakimoto.hatenablog.com/entry/2012/05/02/112020&quot;&gt;参照したページ1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://kouhei.hatenablog.com/entry/2012/12/13/022040&quot;&gt;参照したページ2&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://sankame.github.io//MeCab/2013/04/29/php_mecab</link>
                <guid>http://sankame.github.io//MeCab/2013/04/29/php_mecab</guid>
                <pubDate>2013-04-29T09:00:00+09:00</pubDate>
        </item>

        <item>
                <title>MeCabインストール</title>
                <description>
&lt;p&gt;&lt;span&gt;&lt;a class=&#39;twitter-follow-button&#39; data-dnt=&#39;true&#39; data-lang=&#39;ja&#39; data-show-count=&#39;false&#39; data-show-screen-name=&#39;false&#39; data-size=&#39;large&#39; href=&#39;https://twitter.com/handycola&#39;&gt;@handycolaさんをフォロー&lt;/a&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&amp;#39;http&amp;#39;:&amp;#39;https&amp;#39;;if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+&amp;#39;://platform.twitter.com/widgets.js&amp;#39;;fjs.parentNode.insertBefore(js,fjs);}}(document, &amp;#39;script&amp;#39;, &amp;#39;twitter-wjs&amp;#39;);&lt;/script&gt;&lt;/span&gt;&lt;span style=&#39;float:right;&#39;&gt;投稿日：2013年01月28日&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;ins class=&#39;adsbygoogle&#39; data-ad-client=&#39;ca-pub-7938855665302783&#39; data-ad-slot=&#39;6346277556&#39; style=&#39;display:inline-block;width:468px;height:60px&#39; /&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;
&lt;/div&gt;
&lt;h4 id=&quot;mecab&quot;&gt;形態素解析エンジンMeCabをインストールしてみる。&lt;/h4&gt;

&lt;h5 id=&quot;&quot;&gt;環境&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;[CentOS] 5.6 (32bit版カーネル)&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;1&quot;&gt;1.インストール&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# mecabのソースを取得
# wget http://mecab.googlecode.com/files/mecab-0.98.tar.gz
# tar xzf mecab-0.98.tar.gz 
# cd mecab-0.98
# cd src

# mecab.hを開いて点線で囲んだ部分を修正する。数字に付けられている()を削除する。
# vim mecab.h &lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;pre&gt;&lt;code&gt;	#define MECAB_NOR_NODE  0
	#define MECAB_UNK_NODE  1
	#define MECAB_BOS_NODE  2
	#define MECAB_EOS_NODE  3
	#define MECAB_EON_NODE  4

	#define MECAB_USR_DIC   1
	#define MECAB_SYS_DIC   0
	#define MECAB_UNK_DIC   2&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;pre&gt;&lt;code&gt;# cd ..

# ./configure --with-charset=utf-8
# make
# make install

# cd ..

# 辞書のソースを取得
# wget http://downloads.sourceforge.net/project/mecab/mecab-ipadic/2.7.0-20070801/mecab-ipadic-2.7.0-20070801.tar.gz
# tar zxvf mecab-ipadic-2.7.0-20070801.tar.gz
# cd mecab-ipadic-2.7.0-20070801

# char.def を開いて点線で囲んだ部分を修正する。オリジナルの部分をコメントアウトし、7行追加。
# vim char.def &lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;pre&gt;&lt;code&gt;	# ASCII
	 #0x0021..0x002F SYMBOL
	 #0x0030..0x0039 NUMERIC
	 #0x003A..0x0040 SYMBOL
	 #0x0041..0x005A ALPHA
	 #0x005B..0x0060 SYMBOL
	 #0x0061..0x007A ALPHA
	 #0x007B..0x007E SYMBOL
	 0x0021..0x002F ALPHA
	 0x0030..0x0039 ALPHA
	 0x003A..0x0040 ALPHA
	 0x0041..0x005A ALPHA
	 0x005B..0x0060 ALPHA
	 0x0061..0x007A ALPHA
	 0x007B..0x007E ALPHA&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;pre&gt;&lt;code&gt;./configure --with-charset=utf-8
make
make install&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;2&quot;&gt;2.テスト&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# 以下のようにmecabと打ってEnterキーを押すと待機状態になるので、次に解析したい文字列を入力する。
# mecab
# すもももももももものうち

すもももももももものうち
すもも  名詞,一般,*,*,*,*,すもも,スモモ,スモモ
も      助詞,係助詞,*,*,*,*,も,モ,モ
もも    名詞,一般,*,*,*,*,もも,モモ,モモ
も      助詞,係助詞,*,*,*,*,も,モ,モ
もも    名詞,一般,*,*,*,*,もも,モモ,モモ
の      助詞,連体化,*,*,*,*,の,ノ,ノ
うち    名詞,非自立,副詞可能,*,*,*,うち,ウチ,ウチ
EOS&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;/MeCab/2013/04/29/php_mecab/&quot;&gt;PHPから利用する方法はこちら&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://brandofme.vi-king.net/?p=197&quot;&gt;参照したページ&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://sankame.github.io//MeCab/2013/01/28/mecab_install</link>
                <guid>http://sankame.github.io//MeCab/2013/01/28/mecab_install</guid>
                <pubDate>2013-01-28T09:00:00+09:00</pubDate>
        </item>

        <item>
                <title>OpenX仕組み1 配信処理</title>
                <description>
&lt;p&gt;&lt;span&gt;&lt;a class=&#39;twitter-follow-button&#39; data-dnt=&#39;true&#39; data-lang=&#39;ja&#39; data-show-count=&#39;false&#39; data-show-screen-name=&#39;false&#39; data-size=&#39;large&#39; href=&#39;https://twitter.com/handycola&#39;&gt;@handycolaさんをフォロー&lt;/a&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&amp;#39;http&amp;#39;:&amp;#39;https&amp;#39;;if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+&amp;#39;://platform.twitter.com/widgets.js&amp;#39;;fjs.parentNode.insertBefore(js,fjs);}}(document, &amp;#39;script&amp;#39;, &amp;#39;twitter-wjs&amp;#39;);&lt;/script&gt;&lt;/span&gt;&lt;span style=&#39;float:right;&#39;&gt;投稿日：2013年01月20日&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;ins class=&#39;adsbygoogle&#39; data-ad-client=&#39;ca-pub-7938855665302783&#39; data-ad-slot=&#39;6346277556&#39; style=&#39;display:inline-block;width:468px;height:60px&#39; /&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;
&lt;/div&gt;
&lt;h4 id=&quot;openx&quot;&gt;OpenX仕組みに関する自分用メモ　配信処理&lt;/h4&gt;

&lt;h4 id=&quot;1&quot;&gt;1.テーブル定義&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;http://www.zulutime.org/openxschema/index.html&quot;&gt;テーブル定義？&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;2&quot;&gt;2.インプレッションカウント&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;PHP : plugins/deliveryLog/oxLogImpression/logImpression.delivery.php
		→lib/OA/Dal/Delivery/mysql.php:function OX_bucket_updateTable
DB	: ox_data_bkt_m
処理: INSERT(1レコード)
概要: &lt;/code&gt;&lt;/pre&gt;
</description>
                <link>http://sankame.github.io//OpenX/2013/01/20/openx_structure1</link>
                <guid>http://sankame.github.io//OpenX/2013/01/20/openx_structure1</guid>
                <pubDate>2013-01-20T09:00:00+09:00</pubDate>
        </item>

        <item>
                <title>かんたんSubversionリポジトリ作成</title>
                <description>
&lt;p&gt;&lt;span&gt;&lt;a class=&#39;twitter-follow-button&#39; data-dnt=&#39;true&#39; data-lang=&#39;ja&#39; data-show-count=&#39;false&#39; data-show-screen-name=&#39;false&#39; data-size=&#39;large&#39; href=&#39;https://twitter.com/handycola&#39;&gt;@handycolaさんをフォロー&lt;/a&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&amp;#39;http&amp;#39;:&amp;#39;https&amp;#39;;if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+&amp;#39;://platform.twitter.com/widgets.js&amp;#39;;fjs.parentNode.insertBefore(js,fjs);}}(document, &amp;#39;script&amp;#39;, &amp;#39;twitter-wjs&amp;#39;);&lt;/script&gt;&lt;/span&gt;&lt;span style=&#39;float:right;&#39;&gt;投稿日：2013年01月19日&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;ins class=&#39;adsbygoogle&#39; data-ad-client=&#39;ca-pub-7938855665302783&#39; data-ad-slot=&#39;6346277556&#39; style=&#39;display:inline-block;width:468px;height:60px&#39; /&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;
&lt;/div&gt;
&lt;h4 id=&quot;svnsubversion&quot;&gt;SVN(Subversion)でリポジトリ作成する際の最低限の手順をまとめました。&lt;/h4&gt;

&lt;h4 id=&quot;svn&quot;&gt;※SVNはインストール済みとします。&lt;/h4&gt;

&lt;h5 id=&quot;0&quot;&gt;0.環境&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;[CentOS]     5.6 (32bit版カーネル)
[Apache]     2.2.3
[Subversion] 1.6.11&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;1&quot;&gt;1.作成手順&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;1-1.リポジトリ作成&lt;/p&gt;

&lt;p&gt;※最初だけ下記モジュールをインストール。&lt;/p&gt;

&lt;p&gt;ブラウザ経由でリポジトリを見るため、予めmod_dav_svnをインストール。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# yum install mod_dav_svn&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;データが壊れにくいfsfsを指定し、リポジトリ作成。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# svnadmin create /var/svn/repos/test --fs-type fsfs&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;SVNの作法通り、下記3つを用意。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;svn mkdir file:///var/svn/repos/test/trunk -m &amp;quot;create&amp;quot;
svn mkdir file:///var/svn/repos/test/tags -m &amp;quot;create&amp;quot;
svn mkdir file:///var/svn/repos/test/branches -m &amp;quot;create&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;1-2.既存リポジトリのソースを引き継ぐ場合&lt;/p&gt;

&lt;p&gt;(例)test_orgリポジトリを出力。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# svn export file:///var/svn/repos/test_org/ /tmp/test_org&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上記で出力したソースを取り込む。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# svn import /tmp/test_org/trunk file:///var/svn/repos/test/trunk -m &amp;quot;first import&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;1-3.アクセス設定&lt;/p&gt;

&lt;p&gt;ブラウザからアクセスするため、設定ファイルを変更。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# vim /etc/httpd/conf.d/subversion.conf&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下記を追記。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;Location /svn/test&amp;gt;
    DAV svn
    SVNPath /var/svn/repos/test
&amp;lt;/Location&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;apache再起動&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# /etc/init.d/httpd restart&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下記URLでブラウザからリポジトリにアクセス。(localhostは環境に応じて読み替え)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# http://localhost/svn/test/&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;コミットしたらエラーが出たので、作成したリポジトリのパーミッションをゆるめに変更。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# cd /var/svn/repos
# chmod -R 777 test&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
                <link>http://sankame.github.io//Subversion/2013/01/19/svn_create_repos</link>
                <guid>http://sankame.github.io//Subversion/2013/01/19/svn_create_repos</guid>
                <pubDate>2013-01-19T09:00:00+09:00</pubDate>
        </item>

        <item>
                <title>OpenX配信テスト</title>
                <description>
&lt;p&gt;&lt;span&gt;&lt;a class=&#39;twitter-follow-button&#39; data-dnt=&#39;true&#39; data-lang=&#39;ja&#39; data-show-count=&#39;false&#39; data-show-screen-name=&#39;false&#39; data-size=&#39;large&#39; href=&#39;https://twitter.com/handycola&#39;&gt;@handycolaさんをフォロー&lt;/a&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&amp;#39;http&amp;#39;:&amp;#39;https&amp;#39;;if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+&amp;#39;://platform.twitter.com/widgets.js&amp;#39;;fjs.parentNode.insertBefore(js,fjs);}}(document, &amp;#39;script&amp;#39;, &amp;#39;twitter-wjs&amp;#39;);&lt;/script&gt;&lt;/span&gt;&lt;span style=&#39;float:right;&#39;&gt;投稿日：2013年01月15日&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;ins class=&#39;adsbygoogle&#39; data-ad-client=&#39;ca-pub-7938855665302783&#39; data-ad-slot=&#39;6346277556&#39; style=&#39;display:inline-block;width:468px;height:60px&#39; /&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;
&lt;/div&gt;
&lt;h4 id=&quot;openxver2810&quot;&gt;OpenX(ver2.8.10)で広告配信テストをしてみる。&lt;/h4&gt;

&lt;h4 id=&quot;1&quot;&gt;1.管理画面ログイン&lt;/h4&gt;

&lt;p&gt;管理画面にログイン後、画面右上でログインユーザが「Working as Default manager」であることを確認。&lt;/p&gt;

&lt;p&gt;「インベントリ」タブをクリックし、左メニューの上から順に登録していく。&lt;/p&gt;

&lt;h4 id=&quot;2&quot;&gt;2.広告主&lt;/h4&gt;

&lt;p&gt;「インベントリ」-「広告主」-「広告主の追加」とリンクを辿り、下記項目に入力して「変更の保存」クリック。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;名称、担当者名、メールアドレス&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上記で登録した広告主をクリックすると広告主の詳細画面が表示されるので、&lt;/p&gt;

&lt;p&gt;「ユーザアクセス」タブ -「アクション▼」-「ユーザを追加する」からユーザを追加。&lt;/p&gt;

&lt;p&gt;※ログアウト後、入力した「ユーザー名」と「パスワード」で広告主ユーザーとしてログインできる。&lt;/p&gt;

&lt;h4 id=&quot;3&quot;&gt;3.キャンペーン&lt;/h4&gt;

&lt;p&gt;「インベントリ」-「広告主」で登録済みの広告主の「キャンペーンの追加」をクリック。&lt;/p&gt;

&lt;p&gt;キャンペーン追加画面で下記項目を入力して「変更の保存」をクリック。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;名称            :  (任意)
キャンペーン名 ： 担当者名  (※各選択肢の意味は未確認)
「日付」以下の項目はとりあえずデフォルトのまま。

(2013/01/20,追記) 「他のキャンペーンに対する優先度」が未設定だとアラートメッセージが出るので下記のように設定。
優先度レベル=10、Limit=インプレッション、終了=15000/日&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;4&quot;&gt;4.バナー&lt;/h4&gt;

&lt;p&gt;「インベントリ」-「キャンペーン」で登録済みキャンペーンの「バナーの追加」をクリック。&lt;/p&gt;

&lt;p&gt;バナーの追加画面で下記項目を入力して「Save changes」をクリック。(今回はGoogle AdSenseを配信してみる)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;バナーの種別 : html OpenX Generic HTML Banner
名称 : (任意)
HTMLバナー - banner code : (ここにGoogle AdSenseの広告ユニットコードを張り付ける)
Alter HTML to enable click tracking for: Rich Media - Google AdSense
Banner display : (Google AdSenseの広告ユニットコードと同じサイズを指定)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;「インベントリ」-「バナー」で、登録済みバナーをクリックし、バナー詳細画面を表示。&lt;/p&gt;

&lt;p&gt;「配信オプション」で下記のような値を設定しておくと、広告が毎回表示されるのでテストの際は便利。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;バナービュー上限数 : 20000 総配信数
バナービュー上限数 : 20000／セッション
カウンタリセット条件 : 15 分間&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;http://www.openx.com/docs/tutorials/using-google-adsense-with-openx&quot;&gt;マニュアル&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;5_web&quot;&gt;5. Webサイト&lt;/h4&gt;

&lt;p&gt;「インベントリ」-「Webサイト」-「Webサイトの追加」から、広告を配信したいWebサイトを登録する。&lt;/p&gt;

&lt;h4 id=&quot;6_&quot;&gt;6. ゾーン&lt;/h4&gt;

&lt;p&gt;「インベントリ」-「Webサイト」で登録済みのWebサイトの「ゾーンの追加」をクリック。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;名称：(任意)
ゾーンタイプ：バナー・ボタン・レクタングル広告
サイズ：(バナーのBanner displayで指定した値と合わせる)&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;7_&quot;&gt;7. リンク済バナー&lt;/h4&gt;

&lt;p&gt;「インベントリ」-「ゾーン」で、登録済みゾーンの「リンク済みバナー」をクリック。&lt;/p&gt;

&lt;p&gt;プルダウンで、広告主→キャンペーン　の順に選択。(※日本語は文字化けする…)&lt;/p&gt;

&lt;p&gt;○で囲まれた小さな右矢印ボタンをクリックすると、選択したキャンペーンが表示される。&lt;/p&gt;

&lt;p&gt;「バナーの表示」をクリックするとプレビューが表示される。&lt;/p&gt;

&lt;h4 id=&quot;8_&quot;&gt;8. 広告コード&lt;/h4&gt;

&lt;p&gt;「インベントリ」-「ゾーン」で登録済みゾーンの「広告表示コードの生成」をクリック。&lt;/p&gt;

&lt;p&gt;表示されたコードをコピーして、表示させたいWebサイトに貼り付ける。&lt;/p&gt;

&lt;h4 id=&quot;9_&quot;&gt;9. 疑問&lt;/h4&gt;

&lt;p&gt;上記8の広告コードは、上記5のWebサイト以外のドメインでも表示することができる。&lt;/p&gt;

&lt;p&gt;Webサイトとバナーを紐付けたのはなぜ？レポートのため？&lt;/p&gt;

&lt;h4 id=&quot;10_&quot;&gt;10. 参考ページ&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;http://ohwhsmm7.blog28.fc2.com/blog-entry-206.html&quot;&gt;参考ページ&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://sankame.github.io//OpenX/2013/01/15/openx_delivery_test</link>
                <guid>http://sankame.github.io//OpenX/2013/01/15/openx_delivery_test</guid>
                <pubDate>2013-01-15T09:00:00+09:00</pubDate>
        </item>

        <item>
                <title>CentOSコマンド メモ</title>
                <description>
&lt;p&gt;&lt;span&gt;&lt;a class=&#39;twitter-follow-button&#39; data-dnt=&#39;true&#39; data-lang=&#39;ja&#39; data-show-count=&#39;false&#39; data-show-screen-name=&#39;false&#39; data-size=&#39;large&#39; href=&#39;https://twitter.com/handycola&#39;&gt;@handycolaさんをフォロー&lt;/a&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&amp;#39;http&amp;#39;:&amp;#39;https&amp;#39;;if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+&amp;#39;://platform.twitter.com/widgets.js&amp;#39;;fjs.parentNode.insertBefore(js,fjs);}}(document, &amp;#39;script&amp;#39;, &amp;#39;twitter-wjs&amp;#39;);&lt;/script&gt;&lt;/span&gt;&lt;span style=&#39;float:right;&#39;&gt;投稿日：2012年12月31日&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;ins class=&#39;adsbygoogle&#39; data-ad-client=&#39;ca-pub-7938855665302783&#39; data-ad-slot=&#39;6346277556&#39; style=&#39;display:inline-block;width:468px;height:60px&#39; /&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;
&lt;/div&gt;
&lt;h4 id=&quot;centos_&quot;&gt;CentOSコマンド メモ&lt;/h4&gt;

&lt;h5 id=&quot;&quot;&gt;・ファイル検索&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt; find / -name filename&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;locate_20130101&quot;&gt;・locateインストール (更新日：2013/01/01)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# which locate
/usr/bin/which: no locate in ・・・以下省略

# パッケージ名がlocateではないので注意。
# yum install mlocate

# which locate
/usr/bin/locate

# 下記コマンドでDBを更新するとlocateが使えるようになる。
# updatedb&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;date_20130127&quot;&gt;・dateで日時設定 (更新日：2013/01/27)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# 引数を次の順番に設定。→ date [月][日][時間][分][年]

# date 012723232013
2013年  1月 27日 日曜日 23:23:00 JST&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;centos_20130707&quot;&gt;・CentOSバージョン (更新日：2013/07/07)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# cat /etc/redhat-release&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;cpu_20130707&quot;&gt;・CPUアーキテクチャ確認 (更新日：2013/07/07)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# grep flags /proc/cpuinfo | grep lm | wc -l
# 上記が0ならCPU 32bit、1ならCPU 64bit
# lm(long mode)フラグがあれば64bit&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;_20130707&quot;&gt;・カーネルバージョン確認 (更新日：2013/07/07)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# uname -a|grep x86_64|wc -l
# 上記が0なら32bitカーネル、1ならCPU 64bitカーネル
# (x86_64 の場合、64bit)
# (i386/i486/i586/i686 の場合、32bit)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cyberciti.biz/faq/linux-how-to-find-if-processor-is-64-bit-or-not/&quot;&gt;参考ページ&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&quot;php_20130707&quot;&gt;・PHPバージョン (更新日：2013/07/07)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# php -v&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;apache_20130916&quot;&gt;・Apacheバージョン (更新日：2013/09/16)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# httpd -v&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;svn_20130926&quot;&gt;・SVNバージョン (更新日：2013/09/26)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# svn --version --quiet&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;history_20130924&quot;&gt;・historyコマンドに日時(タイムスタンプ)追加 (更新日：2013/09/24)&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;1.bashプロファイルを編集。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim ~/.bash_profile&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;2.以下を記述。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;HISTTIMEFORMAT=&amp;#39;%Y-%m-%d %T &amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;3.すぐに反映させたい場合は以下のコマンドを実行。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ source ~/.bash_profile&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;port_20140507&quot;&gt;・port使用状況チェック (更新日：2014/05/07)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;$ netstat -anp
$ netstat -anp | grep 【ポート番号】

-a：接続待ち状態にあるソケットも、接続待ち状態にないソケットも表示する。
-n：ホスト・ポート・ユーザーなどの名前を解決せずに、数字のアドレスで表示する。
-p：各ソケットが属しているプログラムの PID と名前が表示される。&lt;/code&gt;&lt;/pre&gt;
</description>
                <link>http://sankame.github.io//CentOS/2012/12/31/centos_command</link>
                <guid>http://sankame.github.io//CentOS/2012/12/31/centos_command</guid>
                <pubDate>2012-12-31T09:00:00+09:00</pubDate>
        </item>

        <item>
                <title>PHPサンプル isset関数化</title>
                <description>
&lt;p&gt;&lt;span&gt;&lt;a class=&#39;twitter-follow-button&#39; data-dnt=&#39;true&#39; data-lang=&#39;ja&#39; data-show-count=&#39;false&#39; data-show-screen-name=&#39;false&#39; data-size=&#39;large&#39; href=&#39;https://twitter.com/handycola&#39;&gt;@handycolaさんをフォロー&lt;/a&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&amp;#39;http&amp;#39;:&amp;#39;https&amp;#39;;if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+&amp;#39;://platform.twitter.com/widgets.js&amp;#39;;fjs.parentNode.insertBefore(js,fjs);}}(document, &amp;#39;script&amp;#39;, &amp;#39;twitter-wjs&amp;#39;);&lt;/script&gt;&lt;/span&gt;&lt;span style=&#39;float:right;&#39;&gt;投稿日：2012年12月28日&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;ins class=&#39;adsbygoogle&#39; data-ad-client=&#39;ca-pub-7938855665302783&#39; data-ad-slot=&#39;6346277556&#39; style=&#39;display:inline-block;width:468px;height:60px&#39; /&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;
&lt;/div&gt;
&lt;h4 id=&quot;undefined_index_noticeisset&quot;&gt;“Undefined index” Noticeを防ぐためのissetが冗長なので関数化。&lt;/h4&gt;
&lt;script src=&#39;https://gist.github.com/4389910.js&#39; /&gt;</description>
                <link>http://sankame.github.io//PHP/2012/12/28/php_sample_viaisset</link>
                <guid>http://sankame.github.io//PHP/2012/12/28/php_sample_viaisset</guid>
                <pubDate>2012-12-28T09:00:00+09:00</pubDate>
        </item>

        <item>
                <title>GitHubPagesが動かない</title>
                <description>
&lt;p&gt;&lt;span&gt;&lt;a class=&#39;twitter-follow-button&#39; data-dnt=&#39;true&#39; data-lang=&#39;ja&#39; data-show-count=&#39;false&#39; data-show-screen-name=&#39;false&#39; data-size=&#39;large&#39; href=&#39;https://twitter.com/handycola&#39;&gt;@handycolaさんをフォロー&lt;/a&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&amp;#39;http&amp;#39;:&amp;#39;https&amp;#39;;if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+&amp;#39;://platform.twitter.com/widgets.js&amp;#39;;fjs.parentNode.insertBefore(js,fjs);}}(document, &amp;#39;script&amp;#39;, &amp;#39;twitter-wjs&amp;#39;);&lt;/script&gt;&lt;/span&gt;&lt;span style=&#39;float:right;&#39;&gt;投稿日：2012年12月27日&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;ins class=&#39;adsbygoogle&#39; data-ad-client=&#39;ca-pub-7938855665302783&#39; data-ad-slot=&#39;6346277556&#39; style=&#39;display:inline-block;width:468px;height:60px&#39; /&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;
&lt;/div&gt;
&lt;h4 id=&quot;githubpagesindexhtml&quot;&gt;GitHubPagesでブログを公開しようと、下記ページに従って作業したがindex.htmlすら表示されない…&lt;/h4&gt;

&lt;h4 id=&quot;&quot;&gt;&lt;a href=&quot;http://tokkono.cute.coocan.jp/blog/slow/index.php/programming/github-pages-almost-perfect-guide/&quot;&gt;参考ページ&lt;/a&gt;&lt;/h4&gt;

&lt;h4 id=&quot;1github&quot;&gt;1.GitHubに登録したメールアドレスの受信箱をチェック&lt;/h4&gt;

&lt;p&gt;“Page build failure”というサブジェクトでGitHubからメールが届いていた。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;The page build failed with the following error:

You need a verified email address in your GitHub account to publish Pages.
You can verify your email addresses from your Settings panel:

https://github.com/settings/emails&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;設定パネルであなたのメアドが正しいことを確認してください、と書いてある。&lt;/p&gt;

&lt;p&gt;上記メール内のリンクを押してページ遷移した後、メールアドレスの確認ボタンをクリック。&lt;/p&gt;

&lt;p&gt;その後、github pagesのページ作成ボタンを押すと下記URLにアクセスできた。 (usernameは読み替え)&lt;/p&gt;

&lt;p&gt;http://username.github.com/&lt;/p&gt;
</description>
                <link>http://sankame.github.io//GitHub/2012/12/27/github_pages_doesnt_work</link>
                <guid>http://sankame.github.io//GitHub/2012/12/27/github_pages_doesnt_work</guid>
                <pubDate>2012-12-27T09:00:00+09:00</pubDate>
        </item>

        <item>
                <title>OpenXインストール</title>
                <description>
&lt;p&gt;&lt;span&gt;&lt;a class=&#39;twitter-follow-button&#39; data-dnt=&#39;true&#39; data-lang=&#39;ja&#39; data-show-count=&#39;false&#39; data-show-screen-name=&#39;false&#39; data-size=&#39;large&#39; href=&#39;https://twitter.com/handycola&#39;&gt;@handycolaさんをフォロー&lt;/a&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&amp;#39;http&amp;#39;:&amp;#39;https&amp;#39;;if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+&amp;#39;://platform.twitter.com/widgets.js&amp;#39;;fjs.parentNode.insertBefore(js,fjs);}}(document, &amp;#39;script&amp;#39;, &amp;#39;twitter-wjs&amp;#39;);&lt;/script&gt;&lt;/span&gt;&lt;span style=&#39;float:right;&#39;&gt;投稿日：2012年12月24日&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;ins class=&#39;adsbygoogle&#39; data-ad-client=&#39;ca-pub-7938855665302783&#39; data-ad-slot=&#39;6346277556&#39; style=&#39;display:inline-block;width:468px;height:60px&#39; /&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;
&lt;/div&gt;
&lt;h4 id=&quot;pcvmwareplayeropenx&quot;&gt;ローカルPCのVmwarePlayerにOpenXをインストール。&lt;/h4&gt;

&lt;h4 id=&quot;&quot;&gt;&lt;a href=&quot;http://www.openx.com/docs/qsg-install&quot;&gt;マニュアル&lt;/a&gt;に従ってインストールした。&lt;/h4&gt;

&lt;h4 id=&quot;1&quot;&gt;1.ソース取得&lt;/h4&gt;

&lt;p&gt;マニュアルの下記リンクからソースをダウンロード。(アンケートあるためwgetでは落とせない)&lt;/p&gt;

&lt;p&gt;Download the latest installation archive from: &lt;a href=&quot;http://www.openx.com/publisher/open-source-ad-server&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ソースをWebサーバへアップし、解凍して公開ディレクトリへ配置する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# mv openx-2.8.10 openx
# mv openx /var/www/html/&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;/var/www/html/openx/varと/var/www/html/openx/www/images　に777を与える。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# cd /var/www/html/openx/
# chmod -R 777 var
# chmod -R 777 ./www/images/&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ブラウザでhttp://localhost/openx/ へアクセスし、Webのインストーラを起動する。&lt;/p&gt;

&lt;p&gt;下記のディレクトリにも書き込み権限が必要というエラーが出た。&lt;/p&gt;

&lt;p&gt;/var/www/html/openx/plugins&lt;/p&gt;

&lt;p&gt;/var/www/html/openx/www/admin/plugins&lt;/p&gt;

&lt;p&gt;画面にコマンドが書いてあったのでそのまま実行。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# chmod -R a+w /var/www/html/openx/plugins
# chmod -R a+w /var/www/html/openx/www/admin/plugins&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;2registration&quot;&gt;2.Registration&lt;/h4&gt;

&lt;p&gt;Webインストーラを続行、下記項目に入力。&lt;/p&gt;

&lt;p&gt;name, password, e-mail&lt;/p&gt;

&lt;h4 id=&quot;3database&quot;&gt;3.Database&lt;/h4&gt;

&lt;p&gt;DBがなかったら作成されると画面に書いてあったが、エラーになったので&lt;/p&gt;

&lt;p&gt;下記コマンドであらかじめDBとユーザを作成。(testxxxxの部分は適当に変更)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# create database testdb;
# grant all on testdb.* to &amp;#39;testuser&amp;#39;@&amp;#39;localhost&amp;#39; identified by &amp;#39;testpassword&amp;#39;;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;4_configuration&quot;&gt;4. Configuration&lt;/h4&gt;

&lt;p&gt;Webインストーラを続行、下記項目に入力。&lt;/p&gt;

&lt;p&gt;Admin User, Admin User Password&lt;/p&gt;

&lt;h4 id=&quot;5_finish&quot;&gt;5. Finish&lt;/h4&gt;

&lt;p&gt;エラーが出たからログを見てね、と書いてあったが無視してそのままcontinue&lt;/p&gt;

&lt;p&gt;※その後、ログを見たがエラーは出力されていなかった。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# view /var/www/html/openx/var/install.log&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;6_&quot;&gt;6. その他&lt;/h4&gt;

&lt;p&gt;そのまま広告設定の管理画面ぽいところへ遷移。&lt;/p&gt;

&lt;p&gt;ページ上部に下記のエラーメッセージが…&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Warning: date_default_timezone_get(): It is not safe to rely
 on the system&amp;#39;s timezone settings.
 You are *required* to use the date.timezone setting or the
 date_default_timezone_set() function.
 In case you used any of those methods and you are still getting
 this warning, you most likely misspelled the timezone identifier.
 We selected &amp;#39;Asia/Tokyo&amp;#39; for &amp;#39;JST/9.0/no DST&amp;#39; instead in
 /var/www/html/openx/variables.php on line 82 &lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下記ソースに追記する。&lt;/p&gt;

&lt;p&gt;■ソース&lt;/p&gt;

&lt;p&gt;/var/www/html/openx/variables.php&lt;/p&gt;

&lt;p&gt;■追記&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;//追記ここから
if( ! ini_get(&amp;#39;date.timezone&amp;#39;) ){
	date_default_timezone_set(&amp;#39;Asia/Tokyo&amp;#39;);
}
//追記ここまで
	$GLOBALS[&amp;#39;serverTimezone&amp;#39;] = date_default_timezone_get();&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;http://www.jamescrowley.co.uk/2010/09/12/running-openx-under-iis-with-php-5-3-date-default-timezone-get-errors/&quot;&gt;参考ページ&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://sankame.github.io//OpenX/2012/12/24/openx_install</link>
                <guid>http://sankame.github.io//OpenX/2012/12/24/openx_install</guid>
                <pubDate>2012-12-24T09:00:00+09:00</pubDate>
        </item>

        <item>
                <title>Jekyllとgithubでブログ作成</title>
                <description>
&lt;p&gt;&lt;span&gt;&lt;a class=&#39;twitter-follow-button&#39; data-dnt=&#39;true&#39; data-lang=&#39;ja&#39; data-show-count=&#39;false&#39; data-show-screen-name=&#39;false&#39; data-size=&#39;large&#39; href=&#39;https://twitter.com/handycola&#39;&gt;@handycolaさんをフォロー&lt;/a&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&amp;#39;http&amp;#39;:&amp;#39;https&amp;#39;;if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+&amp;#39;://platform.twitter.com/widgets.js&amp;#39;;fjs.parentNode.insertBefore(js,fjs);}}(document, &amp;#39;script&amp;#39;, &amp;#39;twitter-wjs&amp;#39;);&lt;/script&gt;&lt;/span&gt;&lt;span style=&#39;float:right;&#39;&gt;投稿日：2012年12月23日&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;ins class=&#39;adsbygoogle&#39; data-ad-client=&#39;ca-pub-7938855665302783&#39; data-ad-slot=&#39;6346277556&#39; style=&#39;display:inline-block;width:468px;height:60px&#39; /&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;
&lt;/div&gt;
&lt;h4 id=&quot;pcvmwareplayerruby_rubygems_jekyll&quot;&gt;ローカルPCのVmwarePlayerにRuby, RubyGems, Jekyllをインストール。&lt;/h4&gt;

&lt;h4 id=&quot;jekyllgithub&quot;&gt;Jekyllで作ったブログをGitHubに設置する。&lt;/h4&gt;

&lt;h4 id=&quot;1ruby&quot;&gt;1.Rubyインストール&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;# インストール済みか？
# rpm -q ruby
# インストールされていない場合、インストールを行う。
# yum install ruby ruby-devel rdoc irb&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;2rubygems&quot;&gt;2.RubyGemsインストール&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;# wget http://rubyforge.org/frs/download.php/60718/rubygems-1.3.5.tgz
# tar xzf rubygems-1.3.5.tgz
# cd rubygems-1.3.5
# ruby setup.rb
# インストールされたgemsのバージョン確認。
# gem -v&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;3jekyll&quot;&gt;3.Jekyllインストール&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;# gem install jekyll&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下記メッセージ(抜粋)でインストール失敗…&lt;/p&gt;

&lt;p&gt;buffer overflow detected&lt;/p&gt;

&lt;h5 id=&quot;31_vmware_player192mb__256mb_&quot;&gt;3-1. vmware playerの割り当てメモリ変更。192MB -&amp;gt; 256MB (問題の解決とは無関係と思われる)&lt;/h5&gt;

&lt;h5 id=&quot;32_ruby&quot;&gt;3-2. Ruby再インストール&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# cd /etc/yum.repos.d/
# wget http://rubyworks.rubyforge.org/RubyWorks.repo
# yum install ruby

# ruby -v
ruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;33_jekyll&quot;&gt;3-3. Jekyll再インストール&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# gem install jekyll
ERROR: Error installing jekyll:
liquid requires RubyGems version &amp;gt;= 1.3.7
# またもやエラー。&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;34_rubygems&quot;&gt;3-4. RubyGems再インストール&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# 上記3-3でRubyGemsのバージョンが違うというエラーが出たのでRuby Forgeで当該バージョンのURLをコピー。
# http://rubyforge.org/frs/?group_id=126

# wget http://rubyforge.org/frs/download.php/60718/rubygems-1.3.7.tgz
# cd rubygems-1.3.7
# ruby setup.rb&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;35_jekyll&quot;&gt;3-5. Jekyll再インストール&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# gem install jekyll
# 今回はインストール成功。
# jekyll -v
Jekyll 0.11.2&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;36_&quot;&gt;3-6. &lt;a href=&quot;http://help.papertrailapp.com/discussions/questions/114-buffer-overflow-detected&quot;&gt;参考ページ&lt;/a&gt;&lt;/h5&gt;

&lt;h4 id=&quot;4jekyll_bootstrap&quot;&gt;4.Jekyll Bootstrap取得&lt;/h4&gt;

&lt;h5 id=&quot;1&quot;&gt;1から作ると大変なのでテンプレートを利用。&lt;/h5&gt;

&lt;h5 id=&quot;varwwwhtmlapache&quot;&gt;※/var/www/html/はapacheのドキュメントルート&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# cd /var/www/html/jekyll
# git clone http://github.com/plusjade/jekyll-bootstrap.git JEKYLL_HOME&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;5jekyll&quot;&gt;5.Jekyll起動&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;# jekyll --server --auto

WARNING: Could not read configuration. Using defaults (and options).
No such file or directory - /root/_config.yml
Auto-regenerating enabled: /root -&amp;gt; /root/_site

# 起動失敗…
# エラーメッセージを見ると、_config.ymlが見つからないと言っている。

# Jekyll Bootstrapを配置したディレクトリへ移動して起動すると成功。
# cd /var/www/html/jekyll/JEKYLL_HOME
# jekyll --server --auto
Configuration from /var/www/html/jekyll/JEKYLL_HOME/_config.yml
Auto-regenerating enabled: /var/www/html/jekyll/JEKYLL_HOME -&amp;gt; /var/www/html/jekyll/JEKYLL_HOME/_site

# ブラウザで下記URLへアクセスすると初期画面が表示される。(localhostの部分は環境によって読み替える)
# http://localhost:4000/

# 後は下記ディレクトリに記事ファイルを追加していく。
# /var/www/html/jekyll/JEKYLL_HOME/_posts/YYYY-MM-DD-*.md&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;6github&quot;&gt;6.GitHubへアップ&lt;/h4&gt;

&lt;h5 id=&quot;githtmlgithubpush&quot;&gt;任意のディレクトリをGitの作業ツリーにして、そこからHTMLをGitHubへPushする。&lt;/h5&gt;

&lt;h5 id=&quot;&quot;&gt;&lt;code&gt;【注意】/var/www/html/jekyll/JEKYLL_HOME/_site/ を作業ツリーにするとJekyllを起動する度に.gitが削除されるので適さない。&lt;/code&gt;&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# Jekyllが生成したHTMLをGit作業ツリー(任意のディレクトリ)へコピーする。
# cp -pr /var/www/html/jekyll/JEKYLL_HOME/_site/* /var/www/html/sankame.github.com/
# cd /var/www/html/sankame.github.com
# git init
# git add .
# git commit -m &amp;quot;initial commit.&amp;quot;
# git remote add origin git@github.com:Sankame/sankame.github.com.git
# git fetch
# git merge -s ours origin/master
# git push&lt;/code&gt;&lt;/pre&gt;
</description>
                <link>http://sankame.github.io//Jekyll/2012/12/23/jekyll_and_github</link>
                <guid>http://sankame.github.io//Jekyll/2012/12/23/jekyll_and_github</guid>
                <pubDate>2012-12-23T09:00:00+09:00</pubDate>
        </item>

        <item>
                <title>Jekyll Tips1</title>
                <description>
&lt;p&gt;&lt;span&gt;&lt;a class=&#39;twitter-follow-button&#39; data-dnt=&#39;true&#39; data-lang=&#39;ja&#39; data-show-count=&#39;false&#39; data-show-screen-name=&#39;false&#39; data-size=&#39;large&#39; href=&#39;https://twitter.com/handycola&#39;&gt;@handycolaさんをフォロー&lt;/a&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&amp;#39;http&amp;#39;:&amp;#39;https&amp;#39;;if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+&amp;#39;://platform.twitter.com/widgets.js&amp;#39;;fjs.parentNode.insertBefore(js,fjs);}}(document, &amp;#39;script&amp;#39;, &amp;#39;twitter-wjs&amp;#39;);&lt;/script&gt;&lt;/span&gt;&lt;span style=&#39;float:right;&#39;&gt;投稿日：2012年12月17日&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;ins class=&#39;adsbygoogle&#39; data-ad-client=&#39;ca-pub-7938855665302783&#39; data-ad-slot=&#39;6346277556&#39; style=&#39;display:inline-block;width:468px;height:60px&#39; /&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;
&lt;/div&gt;
&lt;h4 id=&quot;jekyll&quot;&gt;Jekyllの設定に関するメモ。&lt;/h4&gt;

&lt;h4 id=&quot;jekyllbootstrap&quot;&gt;JekyllBootstrapの配置先は下記ディレクトリ。(&lt;a href=&quot;/Jekyll/2012/12/23/jekyll_and_github/&quot;&gt;関連記事&lt;/a&gt;)&lt;/h4&gt;

&lt;h5 id=&quot;varwwwhtmljekylljekyll_home&quot;&gt;/var/www/html/jekyll/JEKYLL_HOME/&lt;/h5&gt;

&lt;h6 id=&quot;&quot;&gt;・画面ヘッダ部分のナビゲーションを変更したい。&lt;/h6&gt;

&lt;pre&gt;&lt;code&gt;(例)
画面ヘッダ部分にArchiveを表示したくない場合
下記ファイルのヘッダ部分の&amp;quot;group: navigation&amp;quot;を#でコメントアウトする。
/var/www/html/jekyll/JEKYLL_HOME/archive.html&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&quot;_2&quot;&gt;・記事タイトルに日本語を使いたい。&lt;/h6&gt;

&lt;pre&gt;&lt;code&gt;記事のファイル名に日本語は使えないので、YAMLのFront Matterでtitleを指定する。
(例)&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;pre&gt;&lt;code&gt;layout: page
category: Jekyll
tags: [Ruby, RubyGems, Jekyll, GitHub]
date: 2012-12-23 00:00:00
title: Jekyllとgithubでブログ作成&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;h6 id=&quot;_3&quot;&gt;・ループ回数を制限したい。&lt;/h6&gt;

&lt;pre&gt;&lt;code&gt;limitを使う。

(例)最近の5件だけ記事を表示。

&amp;lt;ul class=&amp;quot;posts&amp;quot;&amp;gt;
  {% for post in site.posts limit:5 %}
    &amp;lt;li&amp;gt;&amp;lt;span&amp;gt;{{ post.date | date_to_string }}&amp;lt;/span&amp;gt; &amp;amp;raquo; &amp;lt;a href=&amp;quot;{{ BASE_PATH }}{{ post.url }}&amp;quot;&amp;gt;{{ post.title }}&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
  {% endfor %}
&amp;lt;/ul&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&quot;liquid&quot;&gt;・liquidの文法をエスケープしたい。&lt;a href=&quot;http://stackoverflow.com/questions/3426182/how-to-escape-liquid-template-tags&quot;&gt;参考ページ&lt;/a&gt;&lt;/h6&gt;

&lt;pre&gt;&lt;code&gt;Markdownの中でif文やliquidの文法をそのまま出力したい場合、下記のタグを使用する。

{% raw %}
エスケープしたい表現
{% endraw %}&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&quot;_4&quot;&gt;・日付のフォーマット(書式)を変更したい。&lt;a href=&quot;http://stackoverflow.com/questions/7395520/jekyll-date-format&quot;&gt;参考ページ&lt;/a&gt;&lt;/h6&gt;

&lt;pre&gt;&lt;code&gt;日本語を使う場合、ファイルをUTF8で保存する。

(例)

{ post.date | date: &amp;quot;%Y年%m月%d日&amp;quot; }&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&quot;_5&quot;&gt;・文法に関する参考ページ&lt;/h6&gt;

&lt;p&gt;・&lt;a href=&quot;https://github.com/mojombo/jekyll/wiki/template-data&quot;&gt;Jekyll変数&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;・&lt;a href=&quot;https://github.com/shopify/liquid/wiki/liquid-for-designers&quot;&gt;liquid文法&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;・&lt;a href=&quot;http://technetium.matrix.jp/markdown.html&quot;&gt;Markdown記法1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;・&lt;a href=&quot;http://www.zone0.ne.jp/2011/markdown-cheatsheet.html&quot;&gt;Markdown記法2&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://sankame.github.io//Jekyll/2012/12/17/jekyll_tips1</link>
                <guid>http://sankame.github.io//Jekyll/2012/12/17/jekyll_tips1</guid>
                <pubDate>2012-12-17T09:00:00+09:00</pubDate>
        </item>


</channel>
</rss>
