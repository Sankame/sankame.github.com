<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Android on プログラマー備忘録</title>
    <link>https://sankame.github.io/tags/android/index.xml</link>
    <description>Recent content in Android on プログラマー備忘録</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>Powered by [Hugo](//gohugo.io). Theme by [hugo-theme-wave](https://github.com/syui/hugo-theme-wave).</copyright>
    <atom:link href="https://sankame.github.io/tags/android/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Android APIレベル31対応</title>
      <link>https://sankame.github.io/blog/2022-10-09-android_api_level_31/</link>
      <pubDate>Sun, 09 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2022-10-09-android_api_level_31/</guid>
      <description>

&lt;h1 id=&#34;0-環境&#34;&gt;0. 環境&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;[Host OS] Windows 11 Home&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&#34;1-手順&#34;&gt;1. 手順&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Playストアの規約変更があったので、AndroidアプリのSDKバージョンを31に上げました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;(アプリルート)/mobile/build.gradle&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;抜粋 (diff)
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;android {
-    compileSdkVersion 30
+    compileSdkVersion 31

    defaultConfig {
-       targetSdkVersion 30
+       targetSdkVersion 31
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;２-ビルドエラー&#34;&gt;２. ビルドエラー&lt;/h1&gt;

&lt;h3 id=&#34;2-1-ビルドと実機へのインストールでエラーが発生&#34;&gt;(2-1) ビルドと実機へのインストールでエラーが発生&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;エラー内容&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;Installation did not succeed.
The application could not be installed: INSTALL_PARSE_FAILED_MANIFEST_MALFORMED
Installation failed due to: &#39;null&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;2-2-マニフェスト修正&#34;&gt;(2-2) マニフェスト修正&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;&amp;lt;intent-filter&amp;gt;&lt;/code&gt;を使っているActivityなどに「android:exported=&amp;ldquo;true&amp;rdquo;」が必要になったようです。
(デフォルト値が変わったため、今までと同じにするには、この指定が必要)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;(アプリルート)/mobile/src/main/AndroidManifest.xml&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;修正例 (diff)&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;&amp;lt;activity
    android:name=&amp;quot;.ClipboardActivity&amp;quot;
+   android:exported=&amp;quot;true&amp;quot;
    android:label=&amp;quot;@string/title_activity_clipboard&amp;quot;&amp;gt;
    &amp;lt;intent-filter&amp;gt;
        &amp;lt;action android:name=&amp;quot;android.intent.action.SEND&amp;quot; /&amp;gt;
        &amp;lt;category android:name=&amp;quot;android.intent.category.DEFAULT&amp;quot; /&amp;gt;
        &amp;lt;data android:mimeType=&amp;quot;text/*&amp;quot; /&amp;gt;
    &amp;lt;/intent-filter&amp;gt;
&amp;lt;/activity&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;3-アプリクラッシュ&#34;&gt;3. アプリクラッシュ&lt;/h1&gt;

&lt;h3 id=&#34;3-1-ビルドは成功したが-下記アプリクラッシュが発生&#34;&gt;3-1. ビルドは成功したが、下記アプリクラッシュが発生&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;エラー内容&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;java.lang.IllegalArgumentException: com.example.app: Targeting S+ (version 31 and above) requires that one of FLAG_IMMUTABLE or FLAG_MUTABLE be specified when creating a PendingIntent.
Strongly consider using FLAG_IMMUTABLE, only use FLAG_MUTABLE if some functionality depends on the PendingIntent being mutable, e.g. if it needs to be used with inline replies or bubbles.
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;3-2-pendingintentを修正&#34;&gt;3-2. PendingIntentを修正&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;PendingIntentを使っている箇所を洗い出し、上記で指摘されたフラグを第4引数に足します。(僕のアプリでは下記が該当)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;PendingIntent.getActivity()
PendingIntent.getService()
PendingIntent.getBroadcast()
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;修正例(diff)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;- sender = PendingIntent.getBroadcast(context, 0, intent, 0);
+
+ int pendingIntentFlag = 0;
+ if (Build.VERSION.SDK_INT &amp;gt;= Build.VERSION_CODES.S) {
+     pendingIntentFlag = pendingIntentFlag | PendingIntent.FLAG_IMMUTABLE;
+ }
+ sender = PendingIntent.getBroadcast(context, 0, intent, pendingIntentFlag);
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;3-3-設定追加&#34;&gt;3-3. 設定追加&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;さらに下記の記述も必要でした。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;(アプリルート)/mobile/build.gradle&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;抜粋(diff)&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;    dependencies {
+    implementation &#39;androidx.work:work-runtime-ktx:2.7.0&#39;
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Android App Bundleに対応</title>
      <link>https://sankame.github.io/blog/2021-08-10-android_app_bundle/</link>
      <pubDate>Tue, 10 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2021-08-10-android_app_bundle/</guid>
      <description>

&lt;h1 id=&#34;0-環境&#34;&gt;0. 環境&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;[OS] Windows 11 Home&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[Android Studio] 3.6.3&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&#34;1-ビルド&#34;&gt;1. ビルド&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;期日が迫ってたので、App Bundle対応を行いました。いくつか「あれ？」と思ったので記載しておきます。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;いつものように、Android Studioでメニューから[Build]-[Generate Signed Bundle / APK&amp;hellip;]を選択。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ビルド用のダイアログで「Android App Bundle」を選択し、[Next]ボタンをクリックすると下記が開きます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://sankame.github.io/assets/posts/img/android_app_bundle/a4.png&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;80%&#34; height=&#34;80%&#34; title=&#34;秘密鍵保存&#34; alt=&#34;秘密鍵保存&#34; src=&#34;https://sankame.github.io/assets/posts/img/android_app_bundle/a4.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;[Export encryped&amp;hellip;]にチェックを入れ、直下に表示された秘密鍵の保存場所を覚えておきます。(*a)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[Next]ボタンを押して先に進むと、aabという拡張子のファイルが生成されます。(*b)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;2-アプリ公開&#34;&gt;2. アプリ公開&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;いつものようにブラウザでPlay Consoleを開いて、対象のアプリを選択。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;左メニュー[製品版]-[新しいリリースを作成]をクリックし、[App Bundle]を選択すると下記画面に来ます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://sankame.github.io/assets/posts/img/android_app_bundle/a1.png&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;100%&#34; height=&#34;100%&#34; title=&#34;AppBundle&#34; alt=&#34;AppBundle&#34; src=&#34;https://sankame.github.io/assets/posts/img/android_app_bundle/a1.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;前述(*a)の登録がまだなので、[オプトイン]リンクをクリック。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://sankame.github.io/assets/posts/img/android_app_bundle/a2.png&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;100%&#34; height=&#34;100%&#34; title=&#34;鍵のアップロード&#34; alt=&#34;鍵のアップロード&#34; src=&#34;https://sankame.github.io/assets/posts/img/android_app_bundle/a2.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ここで前述の(*a)をアップロード。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://sankame.github.io/assets/posts/img/android_app_bundle/a3.png&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;100%&#34; height=&#34;100%&#34; title=&#34;アプリ公開&#34; alt=&#34;アプリ公開&#34; src=&#34;https://sankame.github.io/assets/posts/img/android_app_bundle/a3.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;そのままこの画面に戻ってきて上記(*b)をアップロードするとエラーが出ました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;app bundle
予期しないエラーが発生しました。もう一度お試しください（40B24C00）。
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;エラーコードをググっても出てこなかったので、作成中のリリースを一度破棄し、ブラウザを再起動してやり直したらうまくいきました。
(秘密鍵のアップロードはやり直さなくてOKでした)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;あとはいつものように必要項目を入力し、フッター部分のボタンを押していくと公開設定が完了します。しばらく「審査中」の後、無事公開されました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[保存]　→　[リリースのレビュー] → [製品版としての公開を開始] → 確認ダイアログで[公開]クリック
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Androidビルド時のクラス重複エラー</title>
      <link>https://sankame.github.io/blog/2020-06-13-android_class_duplicated/</link>
      <pubDate>Sat, 13 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2020-06-13-android_class_duplicated/</guid>
      <description>

&lt;h1 id=&#34;0-環境&#34;&gt;0. 環境&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;[Gradle] 5.6.4&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&#34;1-問題&#34;&gt;1. 問題&lt;/h1&gt;

&lt;p&gt;こちらの情報を元にFabricからFirebaseへの移行を行いました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://firebase.google.com/docs/android/setup?hl=ja&#34; target=&#34;_blank&#34;&gt;Android プロジェクトに Firebase を追加する&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://firebase.google.com/docs/crashlytics/upgrade-sdk?authuser=0&amp;platform=android&#34; target=&#34;_blank&#34;&gt;Upgrade to the Firebase Crashlytics SDK&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;コード修正後、エラーが発生してビルドできず・・・&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;Duplicate class com.google.android.gms.measurement.AppMeasurement found in modules jetified-firebase-analytics-impl-12.0.1-runtime.jar (com.google.firebase:firebase-analytics-impl:12.0.1) and jetified-play-services-measurement-impl-17.4.3-runtime.jar (com.google.android.gms:play-services-measurement-impl:17.4.3)
Duplicate class com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty found in modules jetified-firebase-analytics-impl-12.0.1-runtime.jar (com.google.firebase:firebase-analytics-impl:12.0.1) and jetified-play-services-measurement-impl-17.4.3-runtime.jar (com.google.android.gms:play-services-measurement-impl:17.4.3)
Duplicate class com.google.android.gms.measurement.AppMeasurement$Event found in modules jetified-firebase-analytics-impl-12.0.1-runtime.jar (com.google.firebase:firebase-analytics-impl:12.0.1) and jetified-play-services-measurement-impl-17.4.3-runtime.jar (com.google.android.gms:play-services-measurement-impl:17.4.3)
Duplicate class com.google.android.gms.measurement.AppMeasurement$EventInterceptor found in modules jetified-firebase-analytics-impl-12.0.1-runtime.jar (com.google.firebase:firebase-analytics-impl:12.0.1) and jetified-play-services-measurement-impl-17.4.3-runtime.jar (com.google.android.gms:play-services-measurement-impl:17.4.3)
Duplicate class com.google.android.gms.measurement.AppMeasurement$OnEventListener found in modules jetified-firebase-analytics-impl-12.0.1-runtime.jar (com.google.firebase:firebase-analytics-impl:12.0.1) and jetified-play-services-measurement-impl-17.4.3-runtime.jar (com.google.android.gms:play-services-measurement-impl:17.4.3)
Duplicate class com.google.android.gms.measurement.AppMeasurement$Param found in modules jetified-firebase-analytics-impl-12.0.1-runtime.jar (com.google.firebase:firebase-analytics-impl:12.0.1) and jetified-play-services-measurement-impl-17.4.3-runtime.jar (com.google.android.gms:play-services-measurement-impl:17.4.3)
Duplicate class com.google.android.gms.measurement.AppMeasurement$UserProperty found in modules jetified-firebase-analytics-impl-12.0.1-runtime.jar (com.google.firebase:firebase-analytics-impl:12.0.1) and jetified-play-services-measurement-impl-17.4.3-runtime.jar (com.google.android.gms:play-services-measurement-impl:17.4.3)
Duplicate class com.google.firebase.analytics.FirebaseAnalytics found in modules jetified-firebase-analytics-impl-12.0.1-runtime.jar (com.google.firebase:firebase-analytics-impl:12.0.1) and jetified-play-services-measurement-api-17.4.3-runtime.jar (com.google.android.gms:play-services-measurement-api:17.4.3)
Duplicate class com.google.firebase.analytics.FirebaseAnalytics$Event found in modules jetified-firebase-analytics-impl-12.0.1-runtime.jar (com.google.firebase:firebase-analytics-impl:12.0.1) and jetified-play-services-measurement-api-17.4.3-runtime.jar (com.google.android.gms:play-services-measurement-api:17.4.3)
Duplicate class com.google.firebase.analytics.FirebaseAnalytics$Param found in modules jetified-firebase-analytics-impl-12.0.1-runtime.jar (com.google.firebase:firebase-analytics-impl:12.0.1) and jetified-play-services-measurement-api-17.4.3-runtime.jar (com.google.android.gms:play-services-measurement-api:17.4.3)
Duplicate class com.google.firebase.analytics.FirebaseAnalytics$UserProperty found in modules jetified-firebase-analytics-impl-12.0.1-runtime.jar (com.google.firebase:firebase-analytics-impl:12.0.1) and jetified-play-services-measurement-api-17.4.3-runtime.jar (com.google.android.gms:play-services-measurement-api:17.4.3)

Go to the documentation to learn how to Fix dependency resolution errors.
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;2-解決&#34;&gt;2. 解決&lt;/h1&gt;

&lt;p&gt;エラーは「&lt;code&gt;com.google.firebase:firebase-analytics&lt;/code&gt;と&lt;code&gt;com.google.android.gms:play-services&lt;/code&gt;に含まれているjarがかぶってるよ」という内容に見えます。&lt;/p&gt;

&lt;p&gt;Firebase移行で足した下記(a)を削除したらビルドが通るようになりました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;[アプリルート]/mobile/build.gradle&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dependencies {
    ...
        
    //(a)
    //implementation &#39;com.google.firebase:firebase-analytics:17.4.3&#39;

    //(b)
    implementation &#39;com.google.android.gms:play-services:12.0.1&#39;

    ...
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;こちらの&lt;a href=&#34;https://mvnrepository.com/artifact/com.google.android.gms/play-services/12.0.1&#34; target=&#34;_blank&#34;&gt;リンク&lt;/a&gt;を見ると(b)のパッケージには&lt;code&gt;firebase-analytics&lt;/code&gt;が含まれているため、(a)と衝突してしまったと思われます。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【Androidアプリ開発】CursorWindowAllocationException エラー</title>
      <link>https://sankame.github.io/blog/2018-08-05-android_cursor_error/</link>
      <pubDate>Sun, 05 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2018-08-05-android_cursor_error/</guid>
      <description>

&lt;p&gt;CursorWindowAllocationException が発生した時の対処方法です。&lt;/p&gt;

&lt;h1 id=&#34;0-環境&#34;&gt;0. 環境&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;[Windows] 7&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[Java] 1.8&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[Android] 5.1.1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[Android API] 26&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&#34;1-問題&#34;&gt;1. 問題&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;開発中のAndroidアプリでSQLiteを使ってます。&lt;/p&gt;

&lt;p&gt;サブクエリを使って、今までより抽出データが多くなるSQLを書いたところ、画面遷移中に頻繁にクラッシュするようになりました。&lt;/p&gt;

&lt;p&gt;しかも、特定のテスト機(Galaxy S4(Android5.0.1))のみです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;(A)エラー内容&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Fatal Exception: android.database.CursorWindowAllocationException
Cursor window allocation of 2048 kb failed. # Open Cursors=700 (# cursors opened by this proc=700)
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;(B)エラー箇所&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;前述のサブクエリを適用した箇所とは全く別の箇所が毎回落ちるポイントでした。(下記2行目)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;Cursor cursorCountUsers = db.rawQuery(&amp;quot;SELECT COUNT(user_id) FROM users&amp;quot;, null);
cursorCountUsers.moveToFirst();
int countUserId = cursorCountUsers.getInt(0);
return countUserId;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;2-対策&#34;&gt;2. 対策&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/21219039/android-database-cursorwindowallocationexception-when-moving-a-cursor&#34; target=&#34;_blank&#34;&gt;Slackoverflow&lt;/a&gt;で同じ問題を見つけました。&lt;/p&gt;

&lt;p&gt;まず、毎回同じ箇所で落ちるので、上記(B)に&lt;code&gt;cursorCountUsers.close();&lt;/code&gt;を入れたけど直りませんでした。&lt;/p&gt;

&lt;p&gt;次に、ソースコード全体を&amp;rdquo;Cursor&amp;rdquo;で検索をかけ、closeしてない箇所が20くらいあったので全てに追記したところ問題は解消されました。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Javaはgcがあると思ってcloseを甘く見てましたね・・・気を付けないと。&lt;/p&gt;

&lt;p&gt;RAMの空きが30数%あるのに落ちるということは、Slackoverflowの回答者が言う通り、cursorのために用意されたメモリ容量に上限があって、今までよりメモリを使うSQLを書いたせいで、そこが圧迫されたということかもしれません。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>【Androidアプリ開発】FileUriExposedException エラー</title>
      <link>https://sankame.github.io/blog/2018-07-23-android_use_fileprovider/</link>
      <pubDate>Mon, 23 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2018-07-23-android_use_fileprovider/</guid>
      <description>

&lt;p&gt;Android7 で android.os.FileUriExposedException が発生した時の対処方法です。&lt;/p&gt;

&lt;p&gt;(文中の【】は読み替えて下さい)&lt;/p&gt;

&lt;h1 id=&#34;0-環境&#34;&gt;0. 環境&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;[Windows] 7&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[Java] 1.8&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[Android] 5.1.1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[Android API] 26&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&#34;1-問題&#34;&gt;1. 問題&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Androidアプリから一時ファイルを作成して、そのURIを外部のアプリに渡すという処理を実装してました。&lt;/p&gt;

&lt;p&gt;(ファイルを作成して、Gmailに添付するなど)&lt;/p&gt;

&lt;p&gt;Android7からfile://による指定ができなくなったため、下記のエラーが発生します。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;android.os.FileUriExposedException: file:///storage/emulated/0/Android/data/【アプリのパッケージ名】/temporary/【一時ファイル名】 exposed beyond app through ClipData.Item.getUri()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;URIはFileProviderで作らないといけないそうです。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;2-対策&#34;&gt;2. 対策&lt;/h1&gt;

&lt;h2 id=&#34;2-1-androidmanifest-xml&#34;&gt;2-1. AndroidManifest.xml&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;まず、AndroidManifest.xmlにFileProviderの定義を追加します。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;android:resource&lt;/code&gt;には、2-2で作成するファイル名を指定。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;script src=&#34;https://gist.github.com/Sankame/9a8e44313453ca63dcdc18870bfd1179.js&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;2-2-res-xml-provider-paths-xml&#34;&gt;2-2. res/xml/provider_paths.xml&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;次に、res/xml/provider_paths.xml を作成します。&lt;/p&gt;

&lt;p&gt;後述の2-3でfileの保存先を &lt;code&gt;Environment.getExternalStorageDirectory()&lt;/code&gt; の直下にしたので、それを表す&lt;code&gt;external-path&lt;/code&gt;を指定します。&lt;/p&gt;

&lt;p&gt;また、直下なので&lt;code&gt;path&lt;/code&gt;はカレントディレクトリになります。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;script src=&#34;https://gist.github.com/Sankame/6cee8d95f46725bf967ef207e13d2ba8.js&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;2-3-該当処理を行っているactivity&#34;&gt;2-3. 該当処理を行っているActivity&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;最後に、URIの生成を下記(1)から(2)に変更しました。&lt;/li&gt;
&lt;/ul&gt;

&lt;script src=&#34;https://gist.github.com/Sankame/67c40ef8056fba82c23937e2ab54b161.js&#34;&gt;&lt;/script&gt;

&lt;h1 id=&#34;3-参考&#34;&gt;3. 参考&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.android.com/reference/android/support/v4/content/FileProvider&#34; target=&#34;_blank&#34;&gt;FileProviderリファレンス&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>【Androidアプリ開発】 &#34;Socket is closed&#34; エラー</title>
      <link>https://sankame.github.io/blog/2018-05-07-android_socket_is_closed/</link>
      <pubDate>Mon, 07 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2018-05-07-android_socket_is_closed/</guid>
      <description>

&lt;h1 id=&#34;0-環境&#34;&gt;0. 環境&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;[Windows] 7
[Java] 1.8
[Android] 5.1.1
[Android API] 26
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;1-問題&#34;&gt;1. 問題&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Androidアプリの開発で、自前のAPIからデータを取得する処理を組んでいたところ、下記エラーが発生するようになりました。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;java.net.SocketException: Socket is closed
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;コードはこちら。&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/Sankame/848d54b5e12f210811db5b80f8512553.js&#34;&gt;&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;2-対策&#34;&gt;2. 対策&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;まずAPI側でApacheのログを確認したところ、ステータスコード200で問題なしでした。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-apache&#34;&gt;127.0.0.1 - - [05/May/2018:22:55:02 +0900] &amp;quot;POST /api/test HTTP/1.0&amp;quot; 200 11130
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;正常終了するケースとの違いは、レスポンスのデータ量が多くなってることかな。(上記ログ右端)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;次にAndroidアプリ側の処理があやしいと考えて、いろいろ試した結果、HttpsURLConnectionのクローズのタイミングが問題だと分かりました。&lt;/p&gt;

&lt;p&gt;同オブジェクトを参照しているオブジェクトを全て使い終わってから、クローズする必要がありそうです。(上記(1)→(2)に移す)&lt;/p&gt;

&lt;p&gt;また、クローズ処理を消すだけでも冒頭のエラーは出なくなりましたが、なるべくオブジェクトは明示的に閉じた方が良いと思います。&lt;/p&gt;

&lt;p&gt;なので、最終的にオブジェクトの作成順とは逆にクローズしていく処理を入れました。(下記(3)(4))&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/Sankame/561d4244e309efd1b9f8f4c2aa72e714.js&#34;&gt;&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>【Androidアプリ開発】onPrepareActionModeが呼ばれない</title>
      <link>https://sankame.github.io/blog/2017-10-17-android_onprepareactionmode_not_called/</link>
      <pubDate>Tue, 17 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2017-10-17-android_onprepareactionmode_not_called/</guid>
      <description>

&lt;h2 id=&#34;0-環境&#34;&gt;0. 環境&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;[Windows] 7
[Java] 1.8
[Android] 5.1.1
[Android API] 26
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;1-問題&#34;&gt;1. 問題&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;build.gradleで下記の値を上げたところ、onPrepareActionModeが実行されなくなってました。&lt;/p&gt;

&lt;p&gt;onPrepareActionModeは、ListViewのロングタップ時にアクションモードへ切り替えた後、アクションバー内のあるアイコンを隠す処理で使っていたので、困りました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;compileSdkVersion : 21 → 26&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;buildToolsVersion : 21.1.2 → 26.0.2&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;2-対策&#34;&gt;2. 対策&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;試しに下記 (A) にあった処理を (B) へ移してみたところ、思った通りの動きをしてくれました。&lt;/p&gt;

&lt;p&gt;うーん、前はダメだったからonPrepareActionModeを使ったんだけどなあ。。&lt;/p&gt;

&lt;p&gt;他にネットで情報を見つけられなかったので、一旦これにしておくか。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;list1 = findViewById(R.id.listView1);

list1.setMultiChoiceModeListener(new AbsListView.MultiChoiceModeListener() {

    @Override
    public boolean onPrepareActionMode(ActionMode mode, Menu menu) {
        //(A)
        //MenuItem menuItem1 = menu.findItem(R.id.menu_item1);
        //menuItem1.setVisible(false);
        return false;
    }

    @Override
    public boolean onCreateActionMode(ActionMode mode, Menu menu) {
        MenuInflater inflater = getMenuInflater();
        inflater.inflate(R.menu.menu_action_mode, menu);

        //(B)
        MenuItem menuItem1 = menu.findItem(R.id.menu_item1);
        menuItem1.setVisible(false);

        return true;
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>【Androidアプリ開発】ライブラリ追加時にビルドエラー</title>
      <link>https://sankame.github.io/blog/2017-10-13-android_duplicate_files_error/</link>
      <pubDate>Fri, 13 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2017-10-13-android_duplicate_files_error/</guid>
      <description>

&lt;h2 id=&#34;0-環境&#34;&gt;0. 環境&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;[Windows] 7
[Java] 1.8
[Android] 5.1.1
[Android API] 21
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;1-エラー内容&#34;&gt;1. エラー内容&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;commons-langを使いたくなったので下記のように追記してビルドしたら、エラーが発生しました。 (文中の【】は読み替えて下さい)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;(アプリルート)/mobile/build.gradle&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;dependencies {
    compile &#39;【他のライブラリ】&#39;
    compile &#39;【他のライブラリ】&#39;
    compile &#39;【他のライブラリ】&#39;
    compile &#39;org.apache.commons:commons-lang3:3.4&#39;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;エラー&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;Error:duplicate files during packaging of APK C:\【パス】\mobile-debug-unaligned.apk
Path in archive: META-INF/LICENSE.txt
Origin 1: C:\【パス】\commons-cli-1.2.jar
Origin 2: C:\【パス】\commons-lang3-3.4.jar
You can ignore those files in your build.gradle:
android {
packagingOptions {
    exclude &#39;META-INF/LICENSE.txt&#39;
}
}
Error:Execution failed for task &#39;:mobile:packageDebug&#39;.
&amp;gt; Duplicate files copied in APK META-INF/LICENSE.txt
File 1: C:\【パス】\commons-cli-1.2.jar
File 2: C:\【パス】\commons-lang3-3.4.jar
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;2-解決方法&#34;&gt;2. 解決方法&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;apkを作る際、複数のjarから、META-INFフォルダに同名のファイルを書き込もうとしてエラーになっているようです。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;エラーメッセージの通り、build.gradle内でLICENSE.txtの除外を指定したら解消しました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;(アプリルート)/mobile/build.gradle&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;apply plugin: &#39;com.android.application&#39;

android {
    compileSdkVersion 【バージョン】
    buildToolsVersion 【バージョン】
    //エラーが起きたファイルをここに追記。
    packagingOptions {
        exclude &#39;META-INF/LICENSE.txt&#39;
        exclude &#39;META-INF/NOTICE.txt&#39;
    }
    defaultConfig {
        //省略
    }
    buildTypes {
        release {
            //省略
        }
    }
}

//以下省略
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ちなみにapk内のMETA-INFOフォルダを確認するには、拡張子apkをzipに変えた後、解凍ソフトでapkを展開して下さい。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>【Androidアプリ開発】「次回から表示しない」ボタン</title>
      <link>https://sankame.github.io/blog/2017-10-03-android_handling_dialog_using_preference/</link>
      <pubDate>Tue, 03 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2017-10-03-android_handling_dialog_using_preference/</guid>
      <description>

&lt;h2 id=&#34;0-環境&#34;&gt;0. 環境&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;[Android] 5.1.1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[Android API] 21&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;1-preferenceで実装&#34;&gt;1. Preferenceで実装&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Preferenceを使ってダイアログに「次回から表示しない」ボタンをつける方法をメモ。&lt;/p&gt;

&lt;p&gt;ユーザーに1回だけ何かを伝えたい場合を想定しています。&lt;/p&gt;

&lt;p&gt;(MainActivity.thisなど、適宜読み替えて下さい)&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/Sankame/9ec48534fad7d8663305f6d9681128b0.js&#34;&gt;&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;2-stethoでpreferenceを編集&#34;&gt;2. stethoでPreferenceを編集&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;開発中にPreferenceの値を変えたり、消したりしたくなると思いますが、そんな時はstethoが便利です。&lt;/p&gt;

&lt;p&gt;stethoを起動し、[Local Storage]で該当のActivityを選択すると右側にPreferenceの値(上記コード17行目)が出ます。&lt;/p&gt;

&lt;p&gt;右クリックで編集や削除が可能です。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://sankame.github.io/assets/posts/img/android_handling_dialog_using_preference/stetho.jpg&#34; target=&#34;_blank&#34;&gt;
&lt;img width=&#34;80%&#34; height=&#34;80%&#34; title=&#34;stethoで編集&#34; alt=&#34;stethoで編集&#34; src=&#34;https://sankame.github.io/assets/posts/img/android_handling_dialog_using_preference/stetho.jpg&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;stethoの設定方法は下記記事の「4. stetho 利用」を参照して下さい。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;関連記事&#34;&gt;関連記事&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://sankame.github.io/blog/2017-05-14-view_sqlite_on_android/&#34; target=&#34;_blank&#34;&gt;AndroidのSQLite DBを参照&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>【Androidアプリ開発】SQLiteのDB定義を変更する際の注意点</title>
      <link>https://sankame.github.io/blog/2017-09-05-android_sqlite_db_upgrade/</link>
      <pubDate>Tue, 05 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2017-09-05-android_sqlite_db_upgrade/</guid>
      <description>

&lt;h2 id=&#34;0-環境&#34;&gt;0.環境&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;[Android] 5.1.1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[Android API] 21&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;1-準備&#34;&gt;1.準備&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Androidアプリ開発で、SQLiteのライブラリを使う際にハマった点をメモ。&lt;/p&gt;

&lt;p&gt;まずコンストラクターでDBを使う準備をします。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;

class DatabaseHelper extends SQLiteOpenHelper {

    public DatabaseHelper(Context context) {
        super(context, &amp;quot;test.db&amp;quot;, null, 1);

        //(A)既存のDBを消すには下記コードを使用。
        //context.deleteDatabase(&amp;quot;DB name is here.&amp;quot;);
    }
    //以下省略
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;第2引数でDB名を指定するとDBファイルがAndroid端末に作成されます。&lt;/p&gt;

&lt;p&gt;第4引数ではDBバージョンを指定し、DB定義を変える際はこれを1つ上げるようにします。&lt;/p&gt;

&lt;p&gt;(バージョンを下げるとクラッシュするので注意)&lt;/p&gt;

&lt;p&gt;また、開発中にDBを作り直したい場合は、上記(A)で削除しましょう。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;2-ハマりポイント-ddl記載箇所&#34;&gt;2.ハマりポイント - DDL記載箇所&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;このライブラリは主に使うメソッドが2つあり、DBのバージョンによって下記の通り実行タイミングが異なります。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;DBファイルが未作成の場合&lt;/code&gt; : &lt;code&gt;onCreate&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;DBファイルが既にある場合(DBバージョン1以上)&lt;/code&gt; : &lt;code&gt;onUpgrade&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;ミスりやすいのが、DBバージョン2以降は、onCreateとonUpgradeの両方にDDLを書く必要があるという点です。&lt;/p&gt;

&lt;p&gt;下記のようにusersテーブルがDBバージョン2で追加されたとして、もし、onUpgradeだけに書いてしまうと、DBバージョン1のユーザーにとっては問題ないですが、初期インストールの場合はonCreateしか実行されないため、usersテーブルが作られないことになります。&lt;/p&gt;

&lt;p&gt;なので、DBバージョン2以降に追加するDDLはprivateメソッドに書いて、上記の両メソッドから呼ぶようにしたらいいと思います。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;@Override
public void onCreate(SQLiteDatabase db) {
    db.beginTransaction();
    try {
        //DBバージョン1でcitiesテーブル作成。
        String ddlCities = &amp;quot;CREATE TABLE IF NOT EXISTS cities (&amp;quot;
                        + &amp;quot;city_id INTEGER PRIMARY KEY AUTOINCREMENT&amp;quot;
                        + &amp;quot;, city_name TEXT&amp;quot;
                        + &amp;quot;);&amp;quot;;
        db.execSQL(ddlCities);

        //DBバージョン2でusersテーブル作成。
        createUsersTable(db);

        db.setTransactionSuccessful();
    } finally {
        db.endTransaction();
    }
}

@Override
public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
    db.beginTransaction();
    try {
        //DBバージョン2でusersテーブル作成。
        createUsersTable(db);

        db.setTransactionSuccessful();
    } finally {
        db.endTransaction();
    }
}

private void createUsersTable(SQLiteDatabase db){
    String ddlUsers = &amp;quot;CREATE TABLE IF NOT EXISTS users (&amp;quot;
            + &amp;quot;user_id INTEGER PRIMARY KEY AUTOINCREMENT&amp;quot;
            + &amp;quot;, user_name TEXT NOT NULL&amp;quot;
            + &amp;quot;);&amp;quot;;
    db.execSQL(ddlUsers);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;3-ハマりポイント-特定のdbバージョンのみで実行するddl&#34;&gt;3.ハマりポイント - 特定のDBバージョンのみで実行するDDL&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ネットで調べたところ、onUpgrade内ではバージョンによって実行するDDLを管理することになっています。&lt;/p&gt;

&lt;p&gt;イコールを使っている例をいくつか見かけましたが、実運用に入ると都合が悪いケースがあります。&lt;/p&gt;

&lt;p&gt;例えば、アップデートをしばらく保留にしていたユーザーが、DBバージョンを3から5へ一気に上げた場合、&lt;code&gt;newVersion == 4&lt;/code&gt;と指定していると、そのDDLが実行されないことになります。&lt;/p&gt;

&lt;p&gt;次のようにDBバージョンを範囲で指定しておけば、上記のケースでも、addColumnAgeは実行されるので問題なしです。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;@Override
public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
    db.beginTransaction();
    try {
        //イコールだと問題あり。
        //if(oldVersion == 3 &amp;amp;&amp;amp; newVersion == 4){
        //    addColumnAge(db);
        //}

        //DBバージョン4でAgeカラム追加。
        if(oldVersion &amp;lt;= 3 &amp;amp;&amp;amp; newVersion &amp;gt;= 4){
            addColumnAge(db);
        }

        db.setTransactionSuccessful();
    } finally {
        db.endTransaction();
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;また、上記「2.ハマりポイント」とも関係しますが、&lt;code&gt;addColumnAge(db);&lt;/code&gt;はonCreate内にも追記します。&lt;/p&gt;

&lt;p&gt;onCreateは &lt;code&gt;DBファイルが未作成の場合&lt;/code&gt; 向けなので、oldVersionなどの条件指定は不要です。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;関連記事&#34;&gt;関連記事&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;SQLiteを使った開発を楽にするには&lt;a href=&#34;https://sankame.github.io/blog/2017-05-14-view_sqlite_on_android/&#34; target=&#34;_blank&#34;&gt;こちら&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>【Androidアプリ開発】起動アイコンのタイトルにアプリ名を表示</title>
      <link>https://sankame.github.io/blog/2017-08-21-android_app_set_activity_title/</link>
      <pubDate>Mon, 21 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2017-08-21-android_app_set_activity_title/</guid>
      <description>

&lt;h2 id=&#34;0-環境&#34;&gt;0.環境&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;[Android] 5.1.1&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;文中、【】内は読み替えて下さい。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;1-問題&#34;&gt;1.問題&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Androidホーム画面の起動アイコンのタイトルをアプリ名にしたくて、下記(3)を追記したのですが変わりません・・・&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;AndroidManifest.xml&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;
&amp;lt;manifest xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;
    package=&amp;quot;【パッケージ名】&amp;quot; &amp;gt;

    &amp;lt;application
        android:allowBackup=&amp;quot;true&amp;quot;
        android:icon=&amp;quot;@mipmap/ic_launcher&amp;quot;
        android:label=&amp;quot;(1) App Name&amp;quot;
        android:theme=&amp;quot;@style/AppTheme&amp;quot; &amp;gt;
        &amp;lt;activity
            android:name=&amp;quot;.MyActivity&amp;quot;
            android:label=&amp;quot;(2) My Activity&#39;s Title&amp;quot; &amp;gt;
            &amp;lt;intent-filter android:label=&amp;quot;(3) App Name&amp;quot;&amp;gt;
                &amp;lt;action android:name=&amp;quot;android.intent.action.MAIN&amp;quot; /&amp;gt;

                &amp;lt;category android:name=&amp;quot;android.intent.category.LAUNCHER&amp;quot; /&amp;gt;
            &amp;lt;/intent-filter&amp;gt;
        &amp;lt;/activity&amp;gt;
    &amp;lt;/application&amp;gt;

&amp;lt;/manifest&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ネットで調べたところ、Android 5.1.1 だと(3)が無視され、下図のように起動アイコンにも(2)が表示されてしまうようです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://sankame.github.io/assets/posts/img/android_app_set_activity_title/before1.png&#34; target=&#34;_blank&#34;&gt;
&lt;img width=&#34;20%&#34; height=&#34;20%&#34; title=&#34;変更前・起動アイコン&#34; alt=&#34;変更前・起動アイコン&#34; src=&#34;https://sankame.github.io/assets/posts/img/android_app_set_activity_title/before1.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://sankame.github.io/assets/posts/img/android_app_set_activity_title/before2.png&#34; target=&#34;_blank&#34;&gt;
&lt;img width=&#34;50%&#34; height=&#34;50%&#34; title=&#34;変更前・Activity&#34; alt=&#34;変更前・Activity&#34; src=&#34;https://sankame.github.io/assets/posts/img/android_app_set_activity_title/before2.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;2-対策&#34;&gt;2. 対策&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;まず&amp;rdquo;AndroidManifest.xml&amp;rdquo;では、Activityのlabelを下記(3)に変更することで、起動アイコンはアプリ名になります。(intent-filterのlabel指定はやめる)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;そのままだと、Activityのタイトルもアプリ名になってしまうため、起動時にタイトルを書き換えることにしました。(下記 &amp;ldquo;MyActivity.java&amp;rdquo; 参照)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;AndroidManifest.xml&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;
&amp;lt;manifest xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;
    package=&amp;quot;【パッケージ名】&amp;quot; &amp;gt;

    &amp;lt;application
        android:allowBackup=&amp;quot;true&amp;quot;
        android:icon=&amp;quot;@mipmap/ic_launcher&amp;quot;
        android:label=&amp;quot;(1) App Name&amp;quot;
        android:theme=&amp;quot;@style/AppTheme&amp;quot; &amp;gt;
        &amp;lt;activity
            android:name=&amp;quot;.MyActivity&amp;quot;
            android:label=&amp;quot;(3) App Name&amp;quot; &amp;gt;
            &amp;lt;intent-filter&amp;gt;
                &amp;lt;action android:name=&amp;quot;android.intent.action.MAIN&amp;quot; /&amp;gt;

                &amp;lt;category android:name=&amp;quot;android.intent.category.LAUNCHER&amp;quot; /&amp;gt;
            &amp;lt;/intent-filter&amp;gt;
        &amp;lt;/activity&amp;gt;
    &amp;lt;/application&amp;gt;
&amp;lt;/manifest&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;MyActivity.java&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class MyActivity extends ActionBarActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_my);

        // この1行を追記。
        setTitle(&amp;quot;(2) My Activity&#39;s Title&amp;quot;);
    }

    // 以下省略
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;こうすることで、起動アイコンにはアプリ名、Activityには専用のタイトルを表示できました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://sankame.github.io/assets/posts/img/android_app_set_activity_title/after1.png&#34; target=&#34;_blank&#34;&gt;
&lt;img width=&#34;20%&#34; height=&#34;20%&#34; title=&#34;変更後・起動アイコン&#34; alt=&#34;変更後・起動アイコン&#34; src=&#34;https://sankame.github.io/assets/posts/img/android_app_set_activity_title/after1.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://sankame.github.io/assets/posts/img/android_app_set_activity_title/after2.png&#34; target=&#34;_blank&#34;&gt;
&lt;img width=&#34;50%&#34; height=&#34;50%&#34; title=&#34;変更後・Activity&#34; alt=&#34;変更後・Activity&#34; src=&#34;https://sankame.github.io/assets/posts/img/android_app_set_activity_title/after2.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;定数は大体strings.xmlなどのリソースファイルで管理していると思うので、その場合は下記のように記載。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;setTitle(getString(R.string.title_activity_main));
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>AndroidのSQLite DBを参照</title>
      <link>https://sankame.github.io/blog/2017-05-14-view_sqlite_on_android/</link>
      <pubDate>Sun, 14 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2017-05-14-view_sqlite_on_android/</guid>
      <description>

&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&#34;color:#d14; float:right;&#34;&gt;更新日：2022年01月01日&lt;/span&gt;&lt;/p&gt;

&lt;h1 id=&#34;0-環境&#34;&gt;0.環境&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;PC側&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[OS]             Windows7 (32bit 版)
[Android Studio] 1.5.1
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;スマホ側&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[OS]             Android 5.1.1
[SQLite]         3.8.6.1
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;1-前提&#34;&gt;1. 前提&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;まずSQLiteのデータをファイル形式で保存するよう設定します。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;例として、SQLiteを操作するライブラリにSQLiteOpenHelperを使用した場合について記載します。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;コンストラクタの第二引数でDBファイル名を指定します。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;(未指定の場合、データはメモリにのみ保持されます)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;class DatabaseHelper extends SQLiteOpenHelper {

    public DatabaseHelper(Context context) {
        //DBファイル名を指定。
        super(context, &amp;quot;example.db&amp;quot;, null, 1);
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;PCからAndroid端末にあるSQLiteのDBファイルを見る方法を調べました。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;試行錯誤した内容を書いているため、結論だけ知りたい場合は、4まで読み飛ばして下さい。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;2-adb-androidデバッグ用インターフェース-利用&#34;&gt;2. ADB(Androidデバッグ用インターフェース) 利用&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ネットを検索して結構あったのが、ADBを使ってSQLiteのDBファイルをAndroid端末からPCへコピーし、その後DBビューワーで参照するというものです。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;PCでコマンドプロンプトから下記コマンドを実行すると、カレントディレクトリにtarget.db(任意)というファイルができます。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;C:\Users\【ユーザー名】&amp;gt;adb -d shell &amp;quot;run-as 【アプリケーションID】 cat databases/【DBファイル名】&amp;quot;&amp;gt;target.db
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;【】内は読み替えて下さい。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;【アプリケーションID】: Android Studioの[File]-[Project Structure]-[Flavors]-[Application Id]&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;【DBファイル名】: 上記1で指定したファイル名。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Database BrowserやPupSQLiteというビューワーでtarget.dbを開いても、下記エラーが出てレコードが表示されません。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;database disk image is malformed&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://qiita.com/tsunet111/items/2c21706fd67f5ecb047d&#34; target=&#34;_blank&#34;&gt;この修復方法&lt;/a&gt;を試しましたが次のエラーが出て、上記ビューワーで見てもレコードが0件でした。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;Error: near line 6: NOT NULL constraint failed: 【テーブル名】.【カラム名】
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Android(Linux系)とWindowsだからリダイレクションでデータの受け渡しがうまくいってないのかな？と推測し、Linuxコマンドも使えるPower Shellを使ってみたところ、最初の結果と異なり、target.dbのファイルサイズは倍になりました。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;再度、上記のビューワーで開こうとしたところ、復号化パスワードを求められ開けませんでした…&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;3-android-device-monitor-利用&#34;&gt;3. Android Device Monitor 利用&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;方針を変え、Android Studioの付属ツールを使ってDBファイルをPCへコピーする方法を試しました。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;Android Studioのメニューで[Tools]-[Android]-[Android Device Monitor]-[File Explorer]タブ
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&amp;ldquo;data&amp;rdquo;ディレクトリはあるのですが、その下のディレクトリが表示されず、DBファイルまでたどり着けなかったため諦めました。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;4-stetho-利用&#34;&gt;4. stetho 利用&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;facebookが提供している&lt;a href=&#34;https://github.com/facebook/stetho&#34; target=&#34;_blank&#34;&gt;stetho&lt;/a&gt;というデバッグツールを使いました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;(4-1) 準備&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://facebook.github.io/stetho/#download&#34; target=&#34;_blank&#34;&gt;このページ&lt;/a&gt;からjarをダウンロードし、下記ディレクトリへコピーします。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[アプリのルート]-[mobile]-[libs]&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;僕のbuild.gradleは、もともとlibsの全jarを読み込み対象にしていたのでひとまずそのままにしました。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;(build.gradle抜粋)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;    dependencies {
        compile fileTree(dir: &#39;libs&#39;, include: [&#39;*.jar&#39;])
        wearApp project(&#39;:wear&#39;)
        compile &#39;com.android.support:appcompat-v7:21.0.3&#39;
        compile &#39;com.google.android.gms:play-services:6.5.87&#39;
        compile &amp;quot;com.android.support:support-v4:20.0.+&amp;quot;
        compile files(&#39;libs/gson-2.5.jar&#39;)
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;さらに、ソースコードへ下記①、②を追記します。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;//①
import com.facebook.stetho.Stetho;

public class MainActivity extends ActionBarActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {

        super.onCreate(savedInstanceState);
        //②
        Stetho.initializeWithDefaults(this);

        // 以下省略
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;(4-2) エラー対応&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ビルドしたところ、下記エラーが発生しました。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ライブラリを重複して読み込もうとする際に出るエラーのようです。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;:mobile:dexDebug
AGPBI: {&amp;quot;kind&amp;quot;:&amp;quot;simple&amp;quot;,&amp;quot;text&amp;quot;:&amp;quot;UNEXPECTED TOP-LEVEL EXCEPTION:&amp;quot;,&amp;quot;sources&amp;quot;:[{}]}
AGPBI: {&amp;quot;kind&amp;quot;:&amp;quot;simple&amp;quot;,&amp;quot;text&amp;quot;:&amp;quot;com.android.dex.DexException: Multiple dex files define Landroid/support/v7/appcompat/R$anim;&amp;quot;,&amp;quot;sources&amp;quot;:[{}]}
AGPBI: {&amp;quot;kind&amp;quot;:&amp;quot;simple&amp;quot;,&amp;quot;text&amp;quot;:&amp;quot;\tat com.android.dx.merge.DexMerger.readSortableTypes(DexMerger.java:596)&amp;quot;,&amp;quot;sources&amp;quot;:[{}]}
AGPBI: {&amp;quot;kind&amp;quot;:&amp;quot;simple&amp;quot;,&amp;quot;text&amp;quot;:&amp;quot;\tat com.android.dx.merge.DexMerger.getSortedTypes(DexMerger.java:554)&amp;quot;,&amp;quot;sources&amp;quot;:[{}]}
AGPBI: {&amp;quot;kind&amp;quot;:&amp;quot;simple&amp;quot;,&amp;quot;text&amp;quot;:&amp;quot;\tat com.android.dx.merge.DexMerger.mergeClassDefs(DexMerger.java:535)&amp;quot;,&amp;quot;sources&amp;quot;:[{}]}
AGPBI: {&amp;quot;kind&amp;quot;:&amp;quot;simple&amp;quot;,&amp;quot;text&amp;quot;:&amp;quot;\tat com.android.dx.merge.DexMerger.mergeDexes(DexMerger.java:171)&amp;quot;,&amp;quot;sources&amp;quot;:[{}]}
AGPBI: {&amp;quot;kind&amp;quot;:&amp;quot;simple&amp;quot;,&amp;quot;text&amp;quot;:&amp;quot;\tat com.android.dx.merge.DexMerger.merge(DexMerger.java:189)&amp;quot;,&amp;quot;sources&amp;quot;:[{}]}
AGPBI: {&amp;quot;kind&amp;quot;:&amp;quot;simple&amp;quot;,&amp;quot;text&amp;quot;:&amp;quot;\tat com.android.dx.command.dexer.Main.mergeLibraryDexBuffers(Main.java:454)&amp;quot;,&amp;quot;sources&amp;quot;:[{}]}
AGPBI: {&amp;quot;kind&amp;quot;:&amp;quot;simple&amp;quot;,&amp;quot;text&amp;quot;:&amp;quot;\tat com.android.dx.command.dexer.Main.runMonoDex(Main.java:303)&amp;quot;,&amp;quot;sources&amp;quot;:[{}]}
AGPBI: {&amp;quot;kind&amp;quot;:&amp;quot;simple&amp;quot;,&amp;quot;text&amp;quot;:&amp;quot;\tat com.android.dx.command.dexer.Main.run(Main.java:246)&amp;quot;,&amp;quot;sources&amp;quot;:[{}]}
AGPBI: {&amp;quot;kind&amp;quot;:&amp;quot;simple&amp;quot;,&amp;quot;text&amp;quot;:&amp;quot;\tat com.android.dx.command.dexer.Main.main(Main.java:215)&amp;quot;,&amp;quot;sources&amp;quot;:[{}]}
AGPBI: {&amp;quot;kind&amp;quot;:&amp;quot;simple&amp;quot;,&amp;quot;text&amp;quot;:&amp;quot;\tat com.android.dx.command.Main.main(Main.java:106)&amp;quot;,&amp;quot;sources&amp;quot;:[{}]}

FAILED

FAILURE: Build failed with an exception.
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;下記のようにbuild.gradleを変更し、stethoを個別に定義するようにしました。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;s&gt;さらに上記エラーメッセージの3行目から推測して、除外設定も追加しています。(&lt;a href=&#34;http://stackoverflow.com/questions/27719436/how-to-remove-duplicate-libraries-added-via-gradle/27773664&#34; target=&#34;_blank&#34;&gt;参考ページ&lt;/a&gt;)&lt;/s&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;font color=&#34;red&#34;&gt;(2017/05/16,追記)除外設定はなくてもOKでした。まだ追いきれてませんが、fileTreeによる指定がまずかったようです。&lt;/font&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;(build.gradle抜粋)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;dependencies {
    //この指定はやめる。
    //compile fileTree(dir: &#39;libs&#39;, include: [&#39;*.jar&#39;])
    wearApp project(&#39;:wear&#39;)
    compile &#39;com.android.support:appcompat-v7:21.0.3&#39;
    compile &#39;com.google.android.gms:play-services:6.5.87&#39;
    compile &amp;quot;com.android.support:support-v4:20.0.+&amp;quot;
    compile files(&#39;libs/gson-2.5.jar&#39;)
                
    //これを含めるのはデバッグ時のみにし、重複エラーが出たので除外設定を追加。
    //debugCompile (&#39;com.facebook.stetho:stetho:1.5.0&#39;) {
    //  exclude group: &#39;android.support&#39;, module: &#39;library&#39;
    //}
                
    //(2017/05/16,追記) この指定で十分でした。
    debugCompile (&#39;com.facebook.stetho:stetho:1.5.0&#39;)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;(4-3) 使い方&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;アプリをビルドして、&lt;span style=&#34;color:#d14;&#34;&gt;&lt;s&gt;Chrome&lt;/s&gt; Brave&lt;/span&gt;のアドレスバーに下記URLを入力します。
&lt;span style=&#34;color:#d14;&#34;&gt;Chromeでは画面が崩れるようになったため、代わりに
&lt;a href=&#34;https://brave.com/ja/&#34; target=&#34;_blank&#34;&gt;Brave&lt;/a&gt;というブラウザを使用。
&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;s&gt;&lt;code&gt;chrome://inspect&lt;/code&gt;&lt;/s&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;brave://inspect/#devices&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Android端末名の下にアプリ名が表示されるので、&amp;rdquo;inspect&amp;rdquo;をクリック。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://sankame.github.io/assets/posts/img/view_sqlite_on_android/chrome.jpg&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;80%&#34; height=&#34;80%&#34; title=&#34;chrome&#34; alt=&#34;chrome&#34; src=&#34;https://sankame.github.io/assets/posts/img/view_sqlite_on_android/chrome.jpg&#34;&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;s&gt;新しいウィンドウが開き、[Web SQL]-【アプリケーションID】-【テーブル名】を開くとSQLiteのデータが参照できました。&lt;/s&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;span style=&#34;color:#d14;&#34;&gt;新しいウィンドウが開き、[Application]-[Storage]-[Web SQL]-【DB名】-【テーブル名】を
開くとSQLiteのデータが参照できました。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;s&gt;さらに、【アプリケーションID】をクリックすると右ペインにプロンプト(&amp;gt;)が表示され、そこでSQL文も実行できるのでかなり使えそうです。&lt;/s&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;span style=&#34;color:#d14;&#34;&gt;さらに、上記の【DB名】をクリックすると右ペインにプロンプト(&amp;gt;)が表示され、
そこでSQL文も実行できるのでかなり使えそうです。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://sankame.github.io/assets/posts/img/view_sqlite_on_android/view_sqlite_db.jpg&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;80%&#34; height=&#34;80%&#34; title=&#34;chrome&#34; alt=&#34;chrome&#34; src=&#34;https://sankame.github.io/assets/posts/img/view_sqlite_on_android/view_sqlite_db.jpg&#34;&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>setVibrateメソッドの使い方</title>
      <link>https://sankame.github.io/blog/2016-02-08-notification_compat_builder_setvibrate/</link>
      <pubDate>Mon, 08 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2016-02-08-notification_compat_builder_setvibrate/</guid>
      <description>

&lt;h3 id=&#34;環境&#34;&gt;環境&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;[Android SDK]  API 21: Android 5.0(Lollipop)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;実装&#34;&gt;実装&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;スマートウォッチ(Android Wear)に通知を送るため、NotificationCompat.Builder の&lt;/p&gt;

&lt;p&gt;setVibrateメソッドを使った際の自分用メモ。&lt;/p&gt;

&lt;p&gt;バイブレーション・パターンの設定は下記仕様ですが、&lt;/p&gt;

&lt;p&gt;long型配列の&lt;font color=&#34;green&#34;&gt;&lt;b&gt;1つ目の要素を除いて、偶数は振動、奇数は休止&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;と覚えておけば良さそうです。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;NotificationCompat.Builder builder = new NotificationCompat.Builder( getApplicationContext() );

// 単位はミリ秒
// 
// 要素1 : 振動開始までの時間
// 要素2 : 振動
// 要素3 : 休止
// 要素4 : (これ以降は要素2-3の繰り返し)
builder.setVibrate(new long[]{0, 500, 250, 500, 250, 1000});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下記の例だと、ツー・ツ・ツ　みたいな感じになります。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;// 1秒振動、0.1秒休止、0.1秒振動、0.05秒休止、0.1秒振動
builder.setVibrate(new long[]{0, 1000, 100, 100, 50, 100});
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;関連リンク&#34;&gt;関連リンク&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html&#34; target=&#34;_blank&#34;&gt;API : NotificationCompat.Builder&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Androidアプリのバージョンアップができない</title>
      <link>https://sankame.github.io/blog/2015-10-07-android_app_version/</link>
      <pubDate>Wed, 07 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2015-10-07-android_app_version/</guid>
      <description>

&lt;h3 id=&#34;0-環境&#34;&gt;0.環境&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;[OS]             Windows7 (32bit 版)
[AndroidStudio]  1.1.0
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1-問題&#34;&gt;1.問題&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Androidアプリをバージョンアップするため、Google Play Developer Console
でapkファイルをアップしても下記のエラーが出ました。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;アップロードできませんでした&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;マニフェストファイルに下記のように追記してもダメ。&lt;/p&gt;

&lt;p&gt;(app\【アプリ名】\mobile\src\main\AndroidManifest.xml)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;
    &amp;lt;manifest xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;
        package=&amp;quot;【パッケージ名】&amp;quot; android:versionCode=&amp;quot;2&amp;quot; android:versionName=&amp;quot;2.0.1&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;2-対策&#34;&gt;2.対策&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;しばらくして、AndroidManifest.xml にエラーメッセージが出てるのに気付きました。&lt;/p&gt;

&lt;p&gt;build.gradle を修正しなきゃいけない・・・&lt;/p&gt;

&lt;p&gt;(app\【アプリ名】\mobile\build.gradle)&lt;/p&gt;

&lt;p&gt;下記のようにバージョンを上げて再コンパイルしたらアップロードできました。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;android {
        :
    (省略)
        :
        defaultConfig {
            applicationId &amp;quot;【省略】&amp;quot;
            minSdkVersion 16
            targetSdkVersion 21
            versionCode 2
            versionName &amp;quot;2.0.1&amp;quot;
        }
    :
    (省略)
    :
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>【AndroidStudio】&#34;Failed to complete Gradle execution&#34;エラー</title>
      <link>https://sankame.github.io/blog/2015-05-11-android_studio_heap_size_error/</link>
      <pubDate>Mon, 11 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2015-05-11-android_studio_heap_size_error/</guid>
      <description>

&lt;h2 id=&#34;0-環境&#34;&gt;0.環境&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;[OS]             Windows7 (32bit 版)
[AndroidStudio]  1.1.0
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;1-エラー内容&#34;&gt;1.エラー内容&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;「Run &amp;lsquo;app&amp;rsquo;」ボタンをクリックし、ビルド＆実行しようとすると下記エラーダイアログが表示される。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;Failed to complete Gradle execution
Cause:
A fatal exception has occurred. Program will exit
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;2-回避方法&#34;&gt;2.回避方法&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;メニューから [File] -&amp;gt; [Settings] -&amp;gt; [Gradle] とたどって、[Gradle VM options] に &amp;ldquo;-XX:MaxHeapSize=256m -Xmx256m&amp;rdquo; を入力。(下記画像のオレンジ枠線)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://sankame.github.io/assets/posts/img/android_studio_heap_size_error/vm_options.png&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;70%&#34; height=&#34;70%&#34; title=&#34;VMオプション設定&#34; alt=&#34;VMオプション設定&#34; src=&#34;https://sankame.github.io/assets/posts/img/android_studio_heap_size_error/vm_options.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考にしたページ&#34;&gt;参考にしたページ&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://code.google.com/p/android/issues/detail?id=67946&#34; target=&#34;_blank&#34;&gt;Failed to complete Gradle Execution&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>