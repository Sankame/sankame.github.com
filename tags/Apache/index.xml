<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Apache on プログラマー備忘録</title>
    <link>https://sankame.github.io/tags/apache/index.xml</link>
    <description>Recent content in Apache on プログラマー備忘録</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>Powered by [Hugo](//gohugo.io). Theme by [hugo-theme-wave](https://github.com/syui/hugo-theme-wave).</copyright>
    <atom:link href="https://sankame.github.io/tags/apache/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>ApacheのProxyPassでhtmlタグがそのまま表示される</title>
      <link>https://sankame.github.io/blog/2016-12-25-mod_proxy_text_plain/</link>
      <pubDate>Sun, 25 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2016-12-25-mod_proxy_text_plain/</guid>
      <description>

&lt;h3 id=&#34;0-環境&#34;&gt;0. 環境&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;[CentOS] 6.8 (64bit版カーネル)
[Apache] 2.2.15
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1-問題&#34;&gt;1. 問題&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ApacheのProxyPassディレクティブ(mod_proxy)を指定して、バックエンドから受け取ったコンテンツを表示しようとするとhtmlタグがそのまま表示されてしまいます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Apache設定ファイルの抜粋&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-apache&#34;&gt;NameVirtualHost *:80
        
# 省略
        
&amp;lt;VirtualHost *:80&amp;gt;
    ServerAdmin test@local
    ServerName test.local

    ProxyPreserveHost On
    ProxyPass / http://127.0.0.1:8080/
    ProxyPassReverse / http://127.0.0.1:8080/

    ErrorLog logs/test.local-error_log
    CustomLog logs/test.local-access_log combined
&amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;2-対策&#34;&gt;2. 対策&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ChromeのDeveloper Toolsなどで見ると、下記のようにHTTPレスポンスヘッダーで平文が指定されています。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Content-Type text/plain; charset=UTF-8&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;デフォルトのMIMEタイプ指定を無効にすることで解消しました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Apache設定ファイルの抜粋&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-apache&#34;&gt;NameVirtualHost *:80
        
# 省略
        
&amp;lt;VirtualHost *:80&amp;gt;
    ServerAdmin test@local
    ServerName test.local

    # ----- この行を追加 ----- 
    DefaultType None
    # ----- この行を追加 ----- 

    ProxyPreserveHost On
    ProxyPass / http://127.0.0.1:8080/
    ProxyPassReverse / http://127.0.0.1:8080/

    ErrorLog logs/test.local-error_log
    CustomLog logs/test.local-access_log combined
&amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;3-参考ページ&#34;&gt;3. 参考ページ&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/5034131/mod-proxy-ajp-error-renders-html-as-text-plain-prompts-user-to-save-as&#34; target=&#34;_blank&#34;&gt;mod_proxy_ajp error: renders html as text/plain, prompts user to “save as…”&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>ベーシック認証設定 (VirtualHostの場合)</title>
      <link>https://sankame.github.io/blog/2014-08-20-http_basic_authentication/</link>
      <pubDate>Wed, 20 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2014-08-20-http_basic_authentication/</guid>
      <description>

&lt;h1 id=&#34;0-環境&#34;&gt;0.環境&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;[CentOS]   5.6 (32bit版カーネル)
[Apache]   2.2.3
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;1-パスワードファイル作成&#34;&gt;1.パスワードファイル作成&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;適当な場所にパスワードファイルを作成。(&amp;ldquo;user1&amp;rdquo;は作成したいユーザー名で読み替えて下さい)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# htpasswd -c /etc/httpd/conf/.htpasswd user1
    
New password: 
    
Re-type new password: 
    
Adding password for user user1
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;2-パスワードファイル設定&#34;&gt;2.パスワードファイル設定&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;VirtualHostを設定している場合、Directoryディレクティブ内に下記を追加。&lt;/p&gt;

&lt;p&gt;AuthUserFileには上記1で作ったパスワードファイルを指定。&lt;/p&gt;

&lt;p&gt;AuthNameはブラウザの認証ダイアログに表示されるメッセージとなります。&lt;/p&gt;

&lt;p&gt;(マルチバイト文字は化ける可能性あり)&lt;/p&gt;

&lt;p&gt;&lt;code&gt;下記はApache設定ファイル(/etc/httpd/conf/httpd.conf) の抜粋&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-apache&#34;&gt;NameVirtualHost *:80

&amp;lt;Directory /web/test&amp;gt;
    Options FollowSymLinks
    AllowOverride FileInfo Options=All,MultiViews
        
    # --- ベーシック認証追加 ---
    AuthType Basic
    AuthUserFile &amp;quot;/etc/httpd/conf/.htpasswd&amp;quot;
    AuthName &amp;quot;Here is a message.&amp;quot;
    Require valid-user
    # --- ベーシック認証追加 ---
        
&amp;lt;/Directory&amp;gt;

&amp;lt;VirtualHost *:80&amp;gt;
    ServerAdmin test@sample.co.jp
    DocumentRoot &amp;quot;/web/test&amp;quot;
    ServerName test.net
    ErrorLog logs/test.net-error_log
    CustomLog logs/test.net-access_log common
&amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;3-再起動&#34;&gt;3.再起動&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;最後にApacheを再起動します。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# service httpd restart
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>ポイントだけ ApacheBench</title>
      <link>https://sankame.github.io/blog/2014-06-07-apache_bench/</link>
      <pubDate>Sat, 07 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2014-06-07-apache_bench/</guid>
      <description>

&lt;h1 id=&#34;0-環境&#34;&gt;0.環境&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;  [CentOS]      5.6 (32bit版カーネル)
  [Apache]      2.2.3
  [ApacheBench] 2.0.40-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;1-基本&#34;&gt;1.基本&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;(1-1) 実行方法&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Apacheをインストールすると ab というコマンドで負荷テストができます。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;主に使うのは2つのオプションで、下記のように実行します。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;後述の &amp;ldquo;Requests per second&amp;rdquo; が十分な値になるよう、n と c の値を増やして負荷をかけます。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;(n : リクエスト数　c : 同時接続数)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;ab -n 10000 -c 100 &amp;quot;http://test.vm/test.php&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;abでテストできるのはサーバ側の処理だけなので、HTMLレンダリングやJavascript実行等、トータルの計測を行いたい場合は、下記のようなツールを検討して下さい。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://gtmetrix.com/&#34; target=&#34;_blank&#34;&gt;GTmetrix&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://knowledge.sakura.ad.jp/tech/1599/&#34; target=&#34;_blank&#34;&gt;PageSpeed&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;(1-2) 結果の確認&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;実行すると下記サンプルのような結果が表示されるので、主に2つの項目を確認します。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;① Failed requests (失敗したリクエスト数)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;この項目が0であることを確認します。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;但し、表示毎にHTMLのバイト数が異なるページの場合、この項目と内訳を表す &amp;ldquo;Length:&amp;rdquo; がともにカウントされます。(1つ前の結果とHTMLのバイト数を比較し、異なる場合は Length がカウントされる仕様)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;このようなページの場合、&amp;rdquo;Failed requests&amp;rdquo; に数字があっても、全て Length が原因ならば無視してかまいませんが、念のため、Apacheのアクセスログを確認し、HTTP Response Code が全て200になっていることを確認しましょう。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;② Requests per second (秒間に処理したリクエスト数)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;対象サイトのページビュー数(PV)などから基準値を算出し、それをクリアしているかチェックします。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;(例) 月間 1億 PVのサイトの場合、アクセスが均等という前提で、秒間 38.5 リクエストは達成する必要がありそうです。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;100,000,000 / 30 / 24 / 60 / 60 ≒ 38.5&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;font color=&#34;red&#34;&gt;(注意) 下記の結果は文字を表示するだけのページなので &amp;ldquo;Requests per second&amp;rdquo; はかなり高い数字が出ています。&lt;/font&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;ab 実行結果サンプル&lt;/b&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# ab -n 10000 -c 100 &amp;quot;http://test.vm/test.php&amp;quot;
        
This is ApacheBench, Version 2.0.40-dev &amp;lt;$Revision: 1.146 $&amp;gt; apache-2.0
Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/
Copyright 2006 The Apache Software Foundation, http://www.apache.org/
        
Benchmarking test.vm (be patient)
Completed 1000 requests
Completed 2000 requests
Completed 3000 requests
Completed 4000 requests
Completed 5000 requests
Completed 6000 requests
Completed 7000 requests
Completed 8000 requests
Completed 9000 requests
Finished 10000 requests
        
Server Software:        Apache/2.2.3
Server Hostname:        test.vm
Server Port:            80
        
Document Path:          /test.php
Document Length:        80 bytes
        
Concurrency Level:      100
Time taken for tests:   5.772060 seconds
Complete requests:      10000
Failed requests:        9899
   (Connect: 0, Length: 9899, Exceptions: 0)
Write errors:           0
Total transferred:      2418216 bytes
HTML transferred:       499081 bytes
Requests per second:    1732.48 [#/sec] (mean)
Time per request:       57.721 [ms] (mean)
Time per request:       0.577 [ms] (mean, across all concurrent requests)
Transfer rate:          409.04 [Kbytes/sec] received
        
Connection Times (ms)
              min  mean[+/-sd] median   max
Connect:        0    0   0.3      0       6
Processing:     5   56 112.2     55    5769
Waiting:        5   54  77.3     55    4398
Total:          5   57 112.2     55    5769
        
Percentage of the requests served within a certain time (ms)
  50%     55
  66%     56
  75%     58
  80%     59
  90%     62
  95%     69
  98%     77
  99%    284
 100%   5769 (longest request)
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;2-応用&#34;&gt;2.応用&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;(2-1) コマンドサンプル&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;その他、個人的によく使うオプションを記載します。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Cookieを指定。(C : [Cookie名]=[値])&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;ab -n 100 -c 10 -C &#39;id=test&#39; &amp;quot;http://test.vm/test.php&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;複数のCookieを指定。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;ab -n 100 -c 10 -C &#39;id=test;flag=1&#39; &amp;quot;http://test.vm/test.php&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;(2-2) host名の指定が必要な場合&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;host名の指定が必要なサイトで、かつ /etc/hosts で名前解決ができない環境の場合、下記のようにヘッダオプション(-H) と Host を使います。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;このオプションは   Apache 2.2.22 以降の ab にあり、僕のApacheはそれより古かったため、別途ソースを落としてきてビルドしました。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;font color=&#34;red&#34;&gt;(注意) ab を使うだけなので、Apacheのインストール(make install)は行いません。&lt;/font&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# cd /usr/local/src/
# wget http://ftp.meisei-u.ac.jp/mirror/apache/dist//httpd/httpd-2.2.27.tar.gz
# tar xzf httpd-2.2.27.tar.gz
# cd httpd-2.2.27
# ./configure
# make
# 
# /usr/local/src/httpd-2.2.27/support/ab -n 100 -c 10 -H &#39;Host: test.vm&#39; &amp;quot;http://192.168.130.130/test.php&amp;quot;
#
# /usr/local/src/httpd-2.2.27/support/ab -V
#This is ApacheBench, Version 2.3 &amp;lt;$Revision: 655654 $&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上記URLはIP指定ですが、&lt;a href=&#34;http://test.vm/test.php&#34;&gt;http://test.vm/test.php&lt;/a&gt; でアクセスしたのと同じになります。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>かんたんSubversionリポジトリ作成</title>
      <link>https://sankame.github.io/blog/2013-01-19-svn_create_repos/</link>
      <pubDate>Sat, 19 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2013-01-19-svn_create_repos/</guid>
      <description>

&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&#34;color:#d14; float:right;&#34;&gt;更新日：2015年05月08日&lt;/span&gt;&lt;/p&gt;

&lt;h1 id=&#34;0-環境&#34;&gt;0.環境&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;[CentOS]     5.6 (32bit版カーネル)
[Apache]     2.2.3
[Subversion] 1.6.11
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;1-作成手順&#34;&gt;1.作成手順&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;SVNはインストール済みとします。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;(1-1) リポジトリ作成&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ブラウザ経由でリポジトリを見るため、予め mod_dav_svn をインストール。(初回のみ)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# yum install mod_dav_svn
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;データが壊れにくいfsfsを指定し、リポジトリ作成。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# svnadmin create /var/svn/repos/test --fs-type fsfs
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;SVNの作法通り、下記3つを用意します。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;svn mkdir file:///var/svn/repos/test/trunk -m &amp;quot;create&amp;quot;
svn mkdir file:///var/svn/repos/test/tags -m &amp;quot;create&amp;quot;
svn mkdir file:///var/svn/repos/test/branches -m &amp;quot;create&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;(1-2) 既存リポジトリのソースを引き継ぐ場合&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;(例)test_orgリポジトリのソースを一時ディレクトリに出力。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# svn export file:///var/svn/repos/test_org/ /tmp/test_org
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;上記で出力したソースをtestリポジトリへ取り込みます。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# svn import /tmp/test_org/trunk file:///var/svn/repos/test/trunk -m &amp;quot;first import&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;(1-3) アクセス設定&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ブラウザからアクセスするため、apache設定ファイルを修正。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# vim /etc/httpd/conf.d/subversion.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;下記を追記。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-apache&#34;&gt;&amp;lt;Location /svn/test&amp;gt;
    DAV svn
    SVNPath /var/svn/repos/test
&amp;lt;/Location&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;apacheを再起動します。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# /etc/init.d/httpd restart
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;下記URLでブラウザからリポジトリにアクセス。(localhostは環境に応じて読み替え)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# http://localhost/svn/test/
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;コミットするときにエラーが出たので、作成したリポジトリのパーミッションをゆるめに変更しました。&lt;font color=&#34;red&#34;&gt;(注1)&lt;/font&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# cd /var/svn/repos
# chmod -R 777 test
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;font color=&#34;red&#34;&gt;(注1) 開発環境など、セキュリティ要件が高くない場合に限ってのみ行って下さい。&lt;/font&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>