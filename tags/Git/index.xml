<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on プログラマー備忘録</title>
    <link>https://sankame.github.io/tags/git/index.xml</link>
    <description>Recent content in Git on プログラマー備忘録</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <atom:link href="https://sankame.github.io/tags/git/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>.gitignoreをaddできない</title>
      <link>https://sankame.github.io/blog/2016-08-21-how-to-add-gitignore/</link>
      <pubDate>Sun, 21 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2016-08-21-how-to-add-gitignore/</guid>
      <description>

&lt;h3 id=&#34;0-環境&#34;&gt;0. 環境&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;[git] 2.7.4 (Apple Git-66)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1-問題&#34;&gt;1. 問題&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;アプリのルートディレクトリに.gitignoreをおいたのですが、git status で見ても追加対象として出てきません。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;2-解決&#34;&gt;2. 解決&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;最初(A)のように書いていたのですが、これだとダメで、[除外設定]→[例外] の順に書かないといけないようです。&lt;/p&gt;

&lt;p&gt;(「. が先頭にあるファイルは除外してね」→「但し .gitignore は例外だよ」)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;(A) 修正前&lt;/li&gt;
&lt;/ul&gt;

&lt;script src=&#34;https://gist.github.com/Sankame/5918ea08bcdc09322907a34434277f08.js&#34;&gt;&lt;/script&gt;

&lt;ul&gt;
&lt;li&gt;(B) 修正後&lt;/li&gt;
&lt;/ul&gt;

&lt;script src=&#34;https://gist.github.com/Sankame/dc68236f9088ca8964f43009cae285cd.js&#34;&gt;&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>GithubからBitbucketへソース移行</title>
      <link>https://sankame.github.io/blog/2014-06-21-github_to_bitbucket/</link>
      <pubDate>Sat, 21 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2014-06-21-github_to_bitbucket/</guid>
      <description>

&lt;h5 id=&#34;0-環境&#34;&gt;0.環境&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;  [CentOS]   5.6 (32bit版カーネル)
  [Git]      1.9.4
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;1-ダウンロード&#34;&gt;1.ダウンロード&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Githubのソース取得&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://sankame.github.io/assets/posts/img/github_to_bitbucket/1.github.png&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;50%&#34; height=&#34;50%&#34; title=&#34;githubリポジトリ&#34; alt=&#34;githubリポジトリ&#34; src=&#34;https://sankame.github.io/assets/posts/img/github_to_bitbucket/1.github.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;任意のディレクトリへ移動。&lt;/p&gt;

&lt;p&gt;GitHubのリポジトリから対象ソースを取得。(上図の画面右下がURL)&lt;/p&gt;

&lt;p&gt;&lt;code&gt;# git clone git@github.com:Sankame/repo-of-github.git&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;取得したソースの第1階層へ移動。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;# cd repo-of-github/&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Bitbucketへソースアップ&lt;/p&gt;

&lt;p&gt;予めBitbucket上で任意のリポジトリを作っておきます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://sankame.github.io/assets/posts/img/github_to_bitbucket/2.bitbucket_make_repo.png&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;50%&#34; height=&#34;50%&#34; title=&#34;bitbucketリポジトリ作成&#34; alt=&#34;bitbucketリポジトリ作成&#34; src=&#34;https://sankame.github.io/assets/posts/img/github_to_bitbucket/2.bitbucket_make_repo.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;空のリポジトリができました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://sankame.github.io/assets/posts/img/github_to_bitbucket/3.bitbucket_new_repo.png&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;50%&#34; height=&#34;50%&#34; title=&#34;bitbucket新規リポジトリ&#34; alt=&#34;bitbucket新規リポジトリ&#34; src=&#34;https://sankame.github.io/assets/posts/img/github_to_bitbucket/3.bitbucket_new_repo.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;上記で GitHub から取得したソースは origin がGitHubになっているので、 Bitbucket へ変更。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# git remote -v
 origin  git@github.com:Sankame/repo-of-github.git (fetch) 
 origin  git@github.com:Sankame/repo-of-github.git (push)
     
 # git remote rm origin
 # git remote add origin git@bitbucket.org:Sankame/repo-of-bitbucket.git
 # git push -u origin --all # pushes up the repo and its refs for the first time
 # git push -u origin --tags # pushes up any tags
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;GithubのソースがBitbucketへ取り込まれました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://sankame.github.io/assets/posts/img/github_to_bitbucket/4.bitbucket_imported_repo.png&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;50%&#34; height=&#34;50%&#34; title=&#34;bitbucket取り込んだソース&#34; alt=&#34;bitbucket取り込んだソース&#34; src=&#34;https://sankame.github.io/assets/posts/img/github_to_bitbucket/4.bitbucket_imported_repo.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;※上記 &amp;quot;git remote add origin&amp;quot; でプロトコルにhttpsを指定していて、&amp;quot;git push&amp;quot; で下記エラーが出た場合は下記の「2.git pushが動かない場合」参照。&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;fatal: Unable to find remote helper for &#39;https&#39;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;2-git-pushが動かない場合&#34;&gt;2.git pushが動かない場合&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Gitをhttpsへ対応させる&lt;/p&gt;

&lt;p&gt;下記URLを見るとcurl-develがないのが原因と書いてあったが、自分の環境には既に入っていたので、&lt;/p&gt;

&lt;p&gt;gitを再コンパイル＆インストールしたところうまくいきました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://clavier.hatenablog.com/entry/2013/05/18/204050&#34; target=&#34;_blank&#34;&gt;CentOSに最新のgitをインストールする&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;※gitのソースが手元にある場合は再取得しなくてもOKです。&lt;/p&gt;

&lt;p&gt;※rootで操作しているのでインストール時にprefix指定&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# wget https://www.kernel.org/pub/software/scm/git/git-1.9.4.tar.gz
 # tar xzf git-1.9.4.tar.gz
 # cd git-1.9.4
 # ./configure
 # make clean
 # make
 # make prefix=/usr install
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Gitコマンド メモ</title>
      <link>https://sankame.github.io/blog/2013-09-09-git_command/</link>
      <pubDate>Mon, 09 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2013-09-09-git_command/</guid>
      <description>

&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&#34;color:#d14; float:right;&#34;&gt;更新日：2016年11月13日&lt;/span&gt;&lt;/p&gt;

&lt;h2 id=&#34;gitコマンド-メモ-自分用&#34;&gt;Gitコマンド メモ (自分用)&lt;/h2&gt;

&lt;h3 id=&#34;1-gitignoreファイル-参考ページ-http-www-omakase-org-misc-gitignore-html&#34;&gt;(1) .gitignoreファイル &lt;a href=&#34;http://www.omakase.org/misc/gitignore.html&#34;&gt;参考ページ&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;gitの管理外にしたいファイルを定義。下記のようにディレクトリ指定も可能。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# view .gitignore
app/logs/
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;2-インデックスから降ろす-git管理外にする&#34;&gt;(2) インデックスから降ろす(git管理外にする)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;インデックスから降ろすだけ。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# git rm --cached -f hoge.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;インデックスから降ろして、ファイルを物理削除。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# git rm -f hoge.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;3-ブランチ操作-2013-10-07&#34;&gt;(3) ブランチ操作(2013/10/07)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;今いるブランチは？&lt;/p&gt;

&lt;p&gt;```sh&lt;/p&gt;

&lt;h1 id=&#34;git-branch&#34;&gt;git branch&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;master
```&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ブランチtest1を作って、test1へ切り替える。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# git branch test1
# git checkout test1
Switched to branch &#39;test1&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;masterブランチへ戻る。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# git checkout master
Switched to branch &#39;master&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;使わなくなったブランチtest1を削除。&lt;/p&gt;

&lt;p&gt;```sh&lt;/p&gt;

&lt;h1 id=&#34;git-branch-d-test1&#34;&gt;git branch -d test1&lt;/h1&gt;

&lt;p&gt;Deleted branch test1 (was 0854f22).&lt;/p&gt;

&lt;h1 id=&#34;git-branch-1&#34;&gt;git branch&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;master
```&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;4-githubからソースを取得-2013-10-07&#34;&gt;(4) GitHubからソースを取得(2013/10/07)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;4-1.GitHubで対象のリポジトリに移動後、画面右下のボタン(下記)をクリックしてURLをクリップボードにコピー。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://sankame.github.io/assets/posts/img/git_command/github-clone.jpg&#34; alt=&#34;github-clone&#34; title=&#34;github-clone&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;4-2.git clone の後に上記4-1でコピーしたURLを貼り付ける。&lt;/p&gt;

&lt;p&gt;予めGitHubに登録した公開鍵のパスフレーズを入力。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# git clone git@github.com:Sankame/test.git
Cloning into &#39;test&#39;...
Enter passphrase for key &#39;/root/.ssh/id_rsa&#39;: 
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;5-ローカル変更の取り消し-2014-02-24&#34;&gt;(5) ローカル変更の取り消し(2014/02/24)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ファイル指定でローカル変更を取り消し。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# git checkout filename
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;全てのローカル変更を取り消し。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# git checkout .
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;6-リモートのブランチをローカルに取り込む-2016-11-13&#34;&gt;(6) リモートのブランチをローカルに取り込む(2016/11/13)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;リモートブランチを全て表示。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# git branch -a
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;最新情報を取得。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# git fetch
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ローカルブランチ名を指定してリモートブランチをチェックアウトし、指定したローカルブランチへ切り替え。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# git checkout -b branch_name origin/branch_name
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;7-ローカル変更を破棄してリモートの最新を取り込む-2016-11-13&#34;&gt;(7) ローカル変更を破棄してリモートの最新を取り込む(2016/11/13)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;とにかくリモートの情報で上書きしたい時。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# git fetch origin
# git reset --hard origin/master
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Nexus7とGitHubでプログラミング環境を作る</title>
      <link>https://sankame.github.io/blog/2013-08-11-nexus7_github_devenv/</link>
      <pubDate>Sun, 11 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2013-08-11-nexus7_github_devenv/</guid>
      <description>

&lt;h1 id=&#34;0-環境&#34;&gt;0.環境&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;[端末] Nexus7
[OS]   Android 4.2.2
[BlueToothキーボード] ELECOM TK-FBP013
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;1-インストール&#34;&gt;1.インストール&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;(1-1) Nexus7にBit Web Serverをインストールします。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.andi.serverweb&#34; target=&#34;_blank&#34;&gt;ダウンロード
&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;Android上でPHPとMySQLを動かせるアプリ。(有料 約230円)
root化しないで使用可能。
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;(1-2) Nexus7にTerminal IDEをインストールします。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.spartacusrex.spartacuside&#34; target=&#34;_blank&#34;&gt;ダウンロード&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;Android用の開発環境。(java、c、c++等のコンパイラを含む)
root化しないで使用可能。
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;2-hello-world&#34;&gt;2.Hello World&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Nexus7にBlueToothキーボードを接続。&lt;/p&gt;

&lt;p&gt;Nexus7でTerminal IDEを起動します。&lt;/p&gt;

&lt;p&gt;いくつかボタンが表示されるので、[Install System]をクリック。&lt;/p&gt;

&lt;p&gt;Overwrite ALLにチェックを入れ、[Install System]をクリックし、システムアップデート。&lt;/p&gt;

&lt;p&gt;[Terminal IDE]をクリック。&lt;/p&gt;

&lt;p&gt;コンソールが起動するので、ファイルを作成し、下記内容を書き込みます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd $HOME/sdcard/wwww
$
$ vim test_hello.php
&lt;/code&gt;&lt;/pre&gt;

&lt;script src=&#34;https://gist.github.com/Sankame/29b89884b38df722f9c6.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;Nexus7でBit Web Serverを起動。&lt;/p&gt;

&lt;p&gt;[Localhost]をクリック。&lt;/p&gt;

&lt;p&gt;ブラウザが起動し、表示されたファイル一覧から上記で作成したtest_hello.phpをクリック。&lt;/p&gt;

&lt;p&gt;ブラウザにhelloと表示されれば成功です。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;3-githubにファイルをプッシュ-準備&#34;&gt;3.GitHubにファイルをプッシュ(準備)&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;せっかくなのでNexus7からGitHubにファイルをプッシュしてみます。&lt;/p&gt;

&lt;p&gt;公開鍵と秘密鍵を作成。(Nexus7で下記コマンドを実行)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ dropbearkey -t rsa -f $HOME/.ssh/id_rsa
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;作成した鍵を表示。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ dropbearkey -y -f ~/.ssh/id_rsa
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ssh-rsaの1行(公開鍵)をコピーします。&lt;/p&gt;

&lt;p&gt;GitHubダッシュボード画面の右上「Account Settings」をクリック。(GitHubアカウントは作成済みとします)&lt;/p&gt;

&lt;p&gt;左メニューの「SSH Keys」クリック。&lt;/p&gt;

&lt;p&gt;「Add SSH key」をクリックし、Titleに任意の値、Keyに上記でコピーした内容(公開鍵)を入力します。&lt;/p&gt;

&lt;p&gt;GitHubのダッシュボードで[Repositories]-[New]をクリックし、新規リポジトリを作成。&lt;/p&gt;

&lt;p&gt;Nexus7に戻り、下記ファイルを作成し、追記内容を書き込みます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim /data/data/com.spartacusrex.spartacuside/files/bin/ssh-with-default-key
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;--------------(追記内容)-----------
#!/data/data/com.spartacusrex.spartacuside/files/system/bin/bash
exec ssh -i ~/.ssh/id_rsa &amp;quot;$@&amp;quot;
--------------(追記内容)-----------
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;$ chmod 755 /data/data/com.spartacusrex.spartacuside/files/bin/ssh-with-default-key
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;さらに下記ファイルに追記します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim $HOME/.bashrc
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;--------------(追記内容)-----------
export GIT_SSH=$HOME/bin/ssh-with-default-key
--------------(追記内容)-----------
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;4-githubにファイルをプッシュ&#34;&gt;4.GitHubにファイルをプッシュ&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Nexus7に戻って下記コマンドを打ちます。(【】内は読み替えて下さい)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd $HOME/sdcard/wwww
$ git init
$ touch new.txt
$ git add .
$ git commit -m &#39;add new.txt&#39;
$ git remote add origin git@github.com:【アカウント名】/【リポジトリ名】.git
$ git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;これでGitHubにnew.txtが上がっていれば成功です。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;参考にしたページ&#34;&gt;参考にしたページ&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.andi.serverweb&#34; target=&#34;_blank&#34;&gt;Terminal IDEの設定&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://blog.katsuma.tv/2009/02/first_github.html&#34; target=&#34;_blank&#34;&gt;はじめてのgithub&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://jp.linux.com/linux-community/blog/236-mirainoitsuka/403358&#34; target=&#34;_blank&#34;&gt;ローカルで作ったリポジトリをgithubに初めてpushする方法&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>