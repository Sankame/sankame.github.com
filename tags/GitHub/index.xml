<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GitHub on プログラマー備忘録</title>
    <link>https://sankame.github.io/tags/github/index.xml</link>
    <description>Recent content in GitHub on プログラマー備忘録</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <atom:link href="https://sankame.github.io/tags/github/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>GithubからBitbucketへソース移行</title>
      <link>https://sankame.github.io/blog/2014-06-21-github_to_bitbucket/</link>
      <pubDate>Sat, 21 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2014-06-21-github_to_bitbucket/</guid>
      <description>

&lt;h1 id=&#34;0-環境&#34;&gt;0.環境&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;  [CentOS]   5.6 (32bit版カーネル)
  [Git]      1.9.4
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;1-ダウンロード&#34;&gt;1.ダウンロード&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;(1-1) Githubのソース取得&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://sankame.github.io/assets/posts/img/github_to_bitbucket/1.github.png&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;50%&#34; height=&#34;50%&#34; title=&#34;githubリポジトリ&#34; alt=&#34;githubリポジトリ&#34; src=&#34;https://sankame.github.io/assets/posts/img/github_to_bitbucket/1.github.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;任意のディレクトリでGitHubのリポジトリから対象ソースを取得します。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;(上図の画面右下がURL)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# git clone git@github.com:Sankame/repo-of-github.git
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;取得したソースの第1階層へ移動。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# cd repo-of-github/
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;(1-2) Bitbucketへソースアップ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;予めBitbucket上で任意のリポジトリを作っておきます。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://sankame.github.io/assets/posts/img/github_to_bitbucket/2.bitbucket_make_repo.png&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;50%&#34; height=&#34;50%&#34; title=&#34;bitbucketリポジトリ作成&#34; alt=&#34;bitbucketリポジトリ作成&#34; src=&#34;https://sankame.github.io/assets/posts/img/github_to_bitbucket/2.bitbucket_make_repo.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;空のリポジトリができました。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://sankame.github.io/assets/posts/img/github_to_bitbucket/3.bitbucket_new_repo.png&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;50%&#34; height=&#34;50%&#34; title=&#34;bitbucket新規リポジトリ&#34; alt=&#34;bitbucket新規リポジトリ&#34; src=&#34;https://sankame.github.io/assets/posts/img/github_to_bitbucket/3.bitbucket_new_repo.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;上記(1-1)で GitHub から取得したソースは origin がGitHubになっているので、 Bitbucket へ変更します。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# git remote -v
origin  git@github.com:Sankame/repo-of-github.git (fetch) 
origin  git@github.com:Sankame/repo-of-github.git (push)

# git remote rm origin
# git remote add origin git@bitbucket.org:Sankame/repo-of-bitbucket.git
# git push -u origin --all # pushes up the repo and its refs for the first time
# git push -u origin --tags # pushes up any tags
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;GitHubにあったソースをBitbucketへプッシュできました。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://sankame.github.io/assets/posts/img/github_to_bitbucket/4.bitbucket_imported_repo.png&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;50%&#34; height=&#34;50%&#34; title=&#34;bitbucket取り込んだソース&#34; alt=&#34;bitbucket取り込んだソース&#34; src=&#34;https://sankame.github.io/assets/posts/img/github_to_bitbucket/4.bitbucket_imported_repo.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;もし上記 &amp;ldquo;git remote add origin&amp;rdquo; でプロトコルにhttpsを指定していて、&amp;rdquo;git push&amp;rdquo; で下記エラーが出た場合は「2.git pushが動かない場合」を参照して下さい。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;fatal: Unable to find remote helper for &#39;https&#39;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;2-git-pushが動かない場合&#34;&gt;2.git pushが動かない場合&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;(2-1) Gitをhttpsへ対応させる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://clavier.hatenablog.com/entry/2013/05/18/204050&#34; target=&#34;_blank&#34;&gt;このページ&lt;/a&gt;によるとcurl-develがないのが原因と書いてありましたが、僕の環境には既に入っていたので、gitを再コンパイル＆インストールしたところうまくいきました。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;(gitのソースが手元にある場合は再取得しなくてもOKです)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;(rootで操作しているのでインストール時にprefixを指定しました)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# wget https://www.kernel.org/pub/software/scm/git/git-1.9.4.tar.gz
# tar xzf git-1.9.4.tar.gz
# cd git-1.9.4
# ./configure
# make clean
# make
# make prefix=/usr install
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Nexus7とGitHubでプログラミング環境を作る</title>
      <link>https://sankame.github.io/blog/2013-08-11-nexus7_github_devenv/</link>
      <pubDate>Sun, 11 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2013-08-11-nexus7_github_devenv/</guid>
      <description>

&lt;h1 id=&#34;0-環境&#34;&gt;0.環境&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;[端末] Nexus7
[OS]   Android 4.2.2
[BlueToothキーボード] ELECOM TK-FBP013
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;1-インストール&#34;&gt;1.インストール&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;(1-1) Nexus7にBit Web Serverをインストールします。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.andi.serverweb&#34; target=&#34;_blank&#34;&gt;ダウンロード
&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;Android上でPHPとMySQLを動かせるアプリ。(有料 約230円)
root化しないで使用可能。
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;(1-2) Nexus7にTerminal IDEをインストールします。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.spartacusrex.spartacuside&#34; target=&#34;_blank&#34;&gt;ダウンロード&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;Android用の開発環境。(java、c、c++等のコンパイラを含む)
root化しないで使用可能。
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;2-hello-world&#34;&gt;2.Hello World&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Nexus7にBlueToothキーボードを接続。&lt;/p&gt;

&lt;p&gt;Nexus7でTerminal IDEを起動します。&lt;/p&gt;

&lt;p&gt;いくつかボタンが表示されるので、[Install System]をクリック。&lt;/p&gt;

&lt;p&gt;Overwrite ALLにチェックを入れ、[Install System]をクリックし、システムアップデート。&lt;/p&gt;

&lt;p&gt;[Terminal IDE]をクリック。&lt;/p&gt;

&lt;p&gt;コンソールが起動するので、ファイルを作成し、下記内容を書き込みます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd $HOME/sdcard/wwww
$
$ vim test_hello.php
&lt;/code&gt;&lt;/pre&gt;

&lt;script src=&#34;https://gist.github.com/Sankame/29b89884b38df722f9c6.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;Nexus7でBit Web Serverを起動。&lt;/p&gt;

&lt;p&gt;[Localhost]をクリック。&lt;/p&gt;

&lt;p&gt;ブラウザが起動し、表示されたファイル一覧から上記で作成したtest_hello.phpをクリック。&lt;/p&gt;

&lt;p&gt;ブラウザにhelloと表示されれば成功です。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;3-githubにファイルをプッシュ-準備&#34;&gt;3.GitHubにファイルをプッシュ(準備)&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;せっかくなのでNexus7からGitHubにファイルをプッシュしてみます。&lt;/p&gt;

&lt;p&gt;公開鍵と秘密鍵を作成。(Nexus7で下記コマンドを実行)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ dropbearkey -t rsa -f $HOME/.ssh/id_rsa
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;作成した鍵を表示。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ dropbearkey -y -f ~/.ssh/id_rsa
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ssh-rsaの1行(公開鍵)をコピーします。&lt;/p&gt;

&lt;p&gt;GitHubダッシュボード画面の右上「Account Settings」をクリック。(GitHubアカウントは作成済みとします)&lt;/p&gt;

&lt;p&gt;左メニューの「SSH Keys」クリック。&lt;/p&gt;

&lt;p&gt;「Add SSH key」をクリックし、Titleに任意の値、Keyに上記でコピーした内容(公開鍵)を入力します。&lt;/p&gt;

&lt;p&gt;GitHubのダッシュボードで[Repositories]-[New]をクリックし、新規リポジトリを作成。&lt;/p&gt;

&lt;p&gt;Nexus7に戻り、下記ファイルを作成し、追記内容を書き込みます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim /data/data/com.spartacusrex.spartacuside/files/bin/ssh-with-default-key
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;--------------(追記内容)-----------
#!/data/data/com.spartacusrex.spartacuside/files/system/bin/bash
exec ssh -i ~/.ssh/id_rsa &amp;quot;$@&amp;quot;
--------------(追記内容)-----------
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;$ chmod 755 /data/data/com.spartacusrex.spartacuside/files/bin/ssh-with-default-key
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;さらに下記ファイルに追記します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim $HOME/.bashrc
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;--------------(追記内容)-----------
export GIT_SSH=$HOME/bin/ssh-with-default-key
--------------(追記内容)-----------
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;4-githubにファイルをプッシュ&#34;&gt;4.GitHubにファイルをプッシュ&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Nexus7に戻って下記コマンドを打ちます。(【】内は読み替えて下さい)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd $HOME/sdcard/wwww
$ git init
$ touch new.txt
$ git add .
$ git commit -m &#39;add new.txt&#39;
$ git remote add origin git@github.com:【アカウント名】/【リポジトリ名】.git
$ git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;これでGitHubにnew.txtが上がっていれば成功です。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;参考にしたページ&#34;&gt;参考にしたページ&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.andi.serverweb&#34; target=&#34;_blank&#34;&gt;Terminal IDEの設定&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://blog.katsuma.tv/2009/02/first_github.html&#34; target=&#34;_blank&#34;&gt;はじめてのgithub&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://jp.linux.com/linux-community/blog/236-mirainoitsuka/403358&#34; target=&#34;_blank&#34;&gt;ローカルで作ったリポジトリをgithubに初めてpushする方法&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>GitHubPagesが動かない</title>
      <link>https://sankame.github.io/blog/2012-12-27-github_pages_doesnt_work/</link>
      <pubDate>Thu, 27 Dec 2012 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2012-12-27-github_pages_doesnt_work/</guid>
      <description>

&lt;h4 id=&#34;githubpagesでブログを公開しようと-下記ページに従って作業したがindex-htmlすら表示されない&#34;&gt;GitHubPagesでブログを公開しようと、下記ページに従って作業したがindex.htmlすら表示されない…&lt;/h4&gt;

&lt;h4 id=&#34;参考ページ-http-tokkono-cute-coocan-jp-blog-slow-index-php-programming-github-pages-almost-perfect-guide&#34;&gt;&lt;a href=&#34;http://tokkono.cute.coocan.jp/blog/slow/index.php/programming/github-pages-almost-perfect-guide/&#34;&gt;参考ページ&lt;/a&gt;&lt;/h4&gt;

&lt;h4 id=&#34;1-githubに登録したメールアドレスの受信箱をチェック&#34;&gt;1.GitHubに登録したメールアドレスの受信箱をチェック&lt;/h4&gt;

&lt;p&gt;&amp;ldquo;Page build failure&amp;rdquo;というサブジェクトでGitHubからメールが届いていた。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;The page build failed with the following error:

You need a verified email address in your GitHub account to publish Pages.
You can verify your email addresses from your Settings panel:

https://github.com/settings/emails
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;設定パネルであなたのメアドが正しいことを確認してください、と書いてある。&lt;/p&gt;

&lt;p&gt;上記メール内のリンクを押してページ遷移した後、メールアドレスの確認ボタンをクリック。&lt;/p&gt;

&lt;p&gt;その後、github pagesのページ作成ボタンを押すと下記URLにアクセスできた。
(usernameは読み替え)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://username.github.com/&#34;&gt;http://username.github.com/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Jekyllとgithubでブログ作成</title>
      <link>https://sankame.github.io/blog/2012-12-23-jekyll_and_github/</link>
      <pubDate>Sun, 23 Dec 2012 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2012-12-23-jekyll_and_github/</guid>
      <description>

&lt;h4 id=&#34;ローカルpcのvmwareplayerにruby-rubygems-jekyllをインストール&#34;&gt;ローカルPCのVmwarePlayerにRuby, RubyGems, Jekyllをインストール。&lt;/h4&gt;

&lt;h4 id=&#34;jekyllで作ったブログをgithubに設置する&#34;&gt;Jekyllで作ったブログをGitHubに設置する。&lt;/h4&gt;

&lt;h4 id=&#34;1-rubyインストール&#34;&gt;1.Rubyインストール&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;# インストール済みか？
# rpm -q ruby
# インストールされていない場合、インストールを行う。
# yum install ruby ruby-devel rdoc irb
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-rubygemsインストール&#34;&gt;2.RubyGemsインストール&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;# wget http://rubyforge.org/frs/download.php/60718/rubygems-1.3.5.tgz
# tar xzf rubygems-1.3.5.tgz
# cd rubygems-1.3.5
# ruby setup.rb
# インストールされたgemsのバージョン確認。
# gem -v
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-jekyllインストール&#34;&gt;3.Jekyllインストール&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;# gem install jekyll
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下記メッセージ(抜粋)でインストール失敗…&lt;/p&gt;

&lt;p&gt;buffer overflow detected&lt;/p&gt;

&lt;h5 id=&#34;3-1-vmware-playerの割り当てメモリ変更-192mb-256mb-問題の解決とは無関係と思われる&#34;&gt;3-1. vmware playerの割り当てメモリ変更。192MB -&amp;gt; 256MB (問題の解決とは無関係と思われる)&lt;/h5&gt;

&lt;h5 id=&#34;3-2-ruby再インストール&#34;&gt;3-2. Ruby再インストール&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# cd /etc/yum.repos.d/
# wget http://rubyworks.rubyforge.org/RubyWorks.repo
# yum install ruby

# ruby -v
ruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;3-3-jekyll再インストール&#34;&gt;3-3. Jekyll再インストール&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# gem install jekyll
ERROR: Error installing jekyll:
liquid requires RubyGems version &amp;gt;= 1.3.7
# またもやエラー。
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;3-4-rubygems再インストール&#34;&gt;3-4. RubyGems再インストール&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# 上記3-3でRubyGemsのバージョンが違うというエラーが出たのでRuby Forgeで当該バージョンのURLをコピー。
# http://rubyforge.org/frs/?group_id=126

# wget http://rubyforge.org/frs/download.php/60718/rubygems-1.3.7.tgz
# cd rubygems-1.3.7
# ruby setup.rb
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;3-5-jekyll再インストール&#34;&gt;3-5. Jekyll再インストール&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# gem install jekyll
# 今回はインストール成功。
# jekyll -v
Jekyll 0.11.2
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;3-6-参考ページ-http-help-papertrailapp-com-discussions-questions-114-buffer-overflow-detected&#34;&gt;3-6. &lt;a href=&#34;http://help.papertrailapp.com/discussions/questions/114-buffer-overflow-detected&#34;&gt;参考ページ&lt;/a&gt;&lt;/h5&gt;

&lt;h4 id=&#34;4-jekyll-bootstrap取得&#34;&gt;4.Jekyll Bootstrap取得&lt;/h4&gt;

&lt;h5 id=&#34;1から作ると大変なのでテンプレートを利用&#34;&gt;1から作ると大変なのでテンプレートを利用。&lt;/h5&gt;

&lt;h5 id=&#34;var-www-html-はapacheのドキュメントルート&#34;&gt;※/var/www/html/はapacheのドキュメントルート&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# cd /var/www/html/jekyll
# git clone http://github.com/plusjade/jekyll-bootstrap.git JEKYLL_HOME
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;5-jekyll起動&#34;&gt;5.Jekyll起動&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;# jekyll --server --auto

WARNING: Could not read configuration. Using defaults (and options).
No such file or directory - /root/_config.yml
Auto-regenerating enabled: /root -&amp;gt; /root/_site

# 起動失敗…
# エラーメッセージを見ると、_config.ymlが見つからないと言っている。

# Jekyll Bootstrapを配置したディレクトリへ移動して起動すると成功。
# cd /var/www/html/jekyll/JEKYLL_HOME
# jekyll --server --auto
Configuration from /var/www/html/jekyll/JEKYLL_HOME/_config.yml
Auto-regenerating enabled: /var/www/html/jekyll/JEKYLL_HOME -&amp;gt; /var/www/html/jekyll/JEKYLL_HOME/_site

# ブラウザで下記URLへアクセスすると初期画面が表示される。(localhostの部分は環境によって読み替える)
# http://localhost:4000/

# 後は下記ディレクトリに記事ファイルを追加していく。
# /var/www/html/jekyll/JEKYLL_HOME/_posts/YYYY-MM-DD-*.md
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;6-githubへアップ&#34;&gt;6.GitHubへアップ&lt;/h4&gt;

&lt;h5 id=&#34;任意のディレクトリをgitの作業ツリーにして-そこからhtmlをgithubへpushする&#34;&gt;任意のディレクトリをGitの作業ツリーにして、そこからHTMLをGitHubへPushする。&lt;/h5&gt;

&lt;h5 id=&#34;注意-var-www-html-jekyll-jekyll-home-site-を作業ツリーにするとjekyllを起動する度に-gitが削除されるので適さない&#34;&gt;&lt;code&gt;【注意】/var/www/html/jekyll/JEKYLL_HOME/_site/ を作業ツリーにするとJekyllを起動する度に.gitが削除されるので適さない。&lt;/code&gt;&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;# Jekyllが生成したHTMLをGit作業ツリー(任意のディレクトリ)へコピーする。
# cp -pr /var/www/html/jekyll/JEKYLL_HOME/_site/* /var/www/html/sankame.github.com/
# cd /var/www/html/sankame.github.com
# git init
# git add .
# git commit -m &amp;quot;initial commit.&amp;quot;
# git remote add origin git@github.com:Sankame/sankame.github.com.git
# git fetch
# git merge -s ours origin/master
# git push
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>