<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on プログラマー備忘録</title>
    <link>https://sankame.github.io/tags/java/index.xml</link>
    <description>Recent content in Java on プログラマー備忘録</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>Powered by [Hugo](//gohugo.io). Theme by [hugo-theme-wave](https://github.com/syui/hugo-theme-wave).</copyright>
    <atom:link href="https://sankame.github.io/tags/java/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>【Androidアプリ開発】CursorWindowAllocationException エラー</title>
      <link>https://sankame.github.io/blog/2018-08-05-android_cursor_error/</link>
      <pubDate>Sun, 05 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2018-08-05-android_cursor_error/</guid>
      <description>

&lt;p&gt;CursorWindowAllocationException が発生した時の対処方法です。&lt;/p&gt;

&lt;h1 id=&#34;0-環境&#34;&gt;0. 環境&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;[Windows] 7&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[Java] 1.8&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[Android] 5.1.1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[Android API] 26&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&#34;1-問題&#34;&gt;1. 問題&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;開発中のAndroidアプリでSQLiteを使ってます。&lt;/p&gt;

&lt;p&gt;サブクエリを使って、今までより抽出データが多くなるSQLを書いたところ、画面遷移中に頻繁にクラッシュするようになりました。&lt;/p&gt;

&lt;p&gt;しかも、特定のテスト機(Galaxy S4(Android5.0.1))のみです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;(A)エラー内容&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Fatal Exception: android.database.CursorWindowAllocationException
Cursor window allocation of 2048 kb failed. # Open Cursors=700 (# cursors opened by this proc=700)
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;(B)エラー箇所&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;前述のサブクエリを適用した箇所とは全く別の箇所が毎回落ちるポイントでした。(下記2行目)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;Cursor cursorCountUsers = db.rawQuery(&amp;quot;SELECT COUNT(user_id) FROM users&amp;quot;, null);
cursorCountUsers.moveToFirst();
int countUserId = cursorCountUsers.getInt(0);
return countUserId;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;2-対策&#34;&gt;2. 対策&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/21219039/android-database-cursorwindowallocationexception-when-moving-a-cursor&#34; target=&#34;_blank&#34;&gt;Slackoverflow&lt;/a&gt;で同じ問題を見つけました。&lt;/p&gt;

&lt;p&gt;まず、毎回同じ箇所で落ちるので、上記(B)に&lt;code&gt;cursorCountUsers.close();&lt;/code&gt;を入れたけど直りませんでした。&lt;/p&gt;

&lt;p&gt;次に、ソースコード全体を&amp;rdquo;Cursor&amp;rdquo;で検索をかけ、closeしてない箇所が20くらいあったので全てに追記したところ問題は解消されました。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Javaはgcがあると思ってcloseを甘く見てましたね・・・気を付けないと。&lt;/p&gt;

&lt;p&gt;RAMの空きが30数%あるのに落ちるということは、Slackoverflowの回答者が言う通り、cursorのために用意されたメモリ容量に上限があって、今までよりメモリを使うSQLを書いたせいで、そこが圧迫されたということかもしれません。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>【Androidアプリ開発】FileUriExposedException エラー</title>
      <link>https://sankame.github.io/blog/2018-07-23-android_use_fileprovider/</link>
      <pubDate>Mon, 23 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2018-07-23-android_use_fileprovider/</guid>
      <description>

&lt;p&gt;Android7 で android.os.FileUriExposedException が発生した時の対処方法です。&lt;/p&gt;

&lt;p&gt;(文中の【】は読み替えて下さい)&lt;/p&gt;

&lt;h1 id=&#34;0-環境&#34;&gt;0. 環境&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;[Windows] 7&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[Java] 1.8&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[Android] 5.1.1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[Android API] 26&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&#34;1-問題&#34;&gt;1. 問題&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Androidアプリから一時ファイルを作成して、そのURIを外部のアプリに渡すという処理を実装してました。&lt;/p&gt;

&lt;p&gt;(ファイルを作成して、Gmailに添付するなど)&lt;/p&gt;

&lt;p&gt;Android7からfile://による指定ができなくなったため、下記のエラーが発生します。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;android.os.FileUriExposedException: file:///storage/emulated/0/Android/data/【アプリのパッケージ名】/temporary/【一時ファイル名】 exposed beyond app through ClipData.Item.getUri()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;URIはFileProviderで作らないといけないそうです。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;2-対策&#34;&gt;2. 対策&lt;/h1&gt;

&lt;h2 id=&#34;2-1-androidmanifest-xml&#34;&gt;2-1. AndroidManifest.xml&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;まず、AndroidManifest.xmlにFileProviderの定義を追加します。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;android:resource&lt;/code&gt;には、2-2で作成するファイル名を指定。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;script src=&#34;https://gist.github.com/Sankame/9a8e44313453ca63dcdc18870bfd1179.js&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;2-2-res-xml-provider-paths-xml&#34;&gt;2-2. res/xml/provider_paths.xml&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;次に、res/xml/provider_paths.xml を作成します。&lt;/p&gt;

&lt;p&gt;後述の2-3でfileの保存先を &lt;code&gt;Environment.getExternalStorageDirectory()&lt;/code&gt; の直下にしたので、それを表す&lt;code&gt;external-path&lt;/code&gt;を指定します。&lt;/p&gt;

&lt;p&gt;また、直下なので&lt;code&gt;path&lt;/code&gt;はカレントディレクトリになります。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;script src=&#34;https://gist.github.com/Sankame/6cee8d95f46725bf967ef207e13d2ba8.js&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;2-3-該当処理を行っているactivity&#34;&gt;2-3. 該当処理を行っているActivity&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;最後に、URIの生成を下記(1)から(2)に変更しました。&lt;/li&gt;
&lt;/ul&gt;

&lt;script src=&#34;https://gist.github.com/Sankame/67c40ef8056fba82c23937e2ab54b161.js&#34;&gt;&lt;/script&gt;

&lt;h1 id=&#34;3-参考&#34;&gt;3. 参考&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.android.com/reference/android/support/v4/content/FileProvider&#34; target=&#34;_blank&#34;&gt;FileProviderリファレンス&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>【Androidアプリ開発】 &#34;Socket is closed&#34; エラー</title>
      <link>https://sankame.github.io/blog/2018-05-07-android_socket_is_closed/</link>
      <pubDate>Mon, 07 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2018-05-07-android_socket_is_closed/</guid>
      <description>

&lt;h1 id=&#34;0-環境&#34;&gt;0. 環境&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;[Windows] 7
[Java] 1.8
[Android] 5.1.1
[Android API] 26
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;1-問題&#34;&gt;1. 問題&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Androidアプリの開発で、自前のAPIからデータを取得する処理を組んでいたところ、下記エラーが発生するようになりました。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;java.net.SocketException: Socket is closed
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;コードはこちら。&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/Sankame/848d54b5e12f210811db5b80f8512553.js&#34;&gt;&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;2-対策&#34;&gt;2. 対策&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;まずAPI側でApacheのログを確認したところ、ステータスコード200で問題なしでした。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-apache&#34;&gt;127.0.0.1 - - [05/May/2018:22:55:02 +0900] &amp;quot;POST /api/test HTTP/1.0&amp;quot; 200 11130
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;正常終了するケースとの違いは、レスポンスのデータ量が多くなってることかな。(上記ログ右端)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;次にAndroidアプリ側の処理があやしいと考えて、いろいろ試した結果、HttpsURLConnectionのクローズのタイミングが問題だと分かりました。&lt;/p&gt;

&lt;p&gt;同オブジェクトを参照しているオブジェクトを全て使い終わってから、クローズする必要がありそうです。(上記(1)→(2)に移す)&lt;/p&gt;

&lt;p&gt;また、クローズ処理を消すだけでも冒頭のエラーは出なくなりましたが、なるべくオブジェクトは明示的に閉じた方が良いと思います。&lt;/p&gt;

&lt;p&gt;なので、最終的にオブジェクトの作成順とは逆にクローズしていく処理を入れました。(下記(3)(4))&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/Sankame/561d4244e309efd1b9f8f4c2aa72e714.js&#34;&gt;&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>【Androidアプリ開発】onPrepareActionModeが呼ばれない</title>
      <link>https://sankame.github.io/blog/2017-10-17-android_onprepareactionmode_not_called/</link>
      <pubDate>Tue, 17 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2017-10-17-android_onprepareactionmode_not_called/</guid>
      <description>

&lt;h2 id=&#34;0-環境&#34;&gt;0. 環境&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;[Windows] 7
[Java] 1.8
[Android] 5.1.1
[Android API] 26
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;1-問題&#34;&gt;1. 問題&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;build.gradleで下記の値を上げたところ、onPrepareActionModeが実行されなくなってました。&lt;/p&gt;

&lt;p&gt;onPrepareActionModeは、ListViewのロングタップ時にアクションモードへ切り替えた後、アクションバー内のあるアイコンを隠す処理で使っていたので、困りました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;compileSdkVersion : 21 → 26&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;buildToolsVersion : 21.1.2 → 26.0.2&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;2-対策&#34;&gt;2. 対策&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;試しに下記 (A) にあった処理を (B) へ移してみたところ、思った通りの動きをしてくれました。&lt;/p&gt;

&lt;p&gt;うーん、前はダメだったからonPrepareActionModeを使ったんだけどなあ。。&lt;/p&gt;

&lt;p&gt;他にネットで情報を見つけられなかったので、一旦これにしておくか。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;list1 = findViewById(R.id.listView1);

list1.setMultiChoiceModeListener(new AbsListView.MultiChoiceModeListener() {

    @Override
    public boolean onPrepareActionMode(ActionMode mode, Menu menu) {
        //(A)
        //MenuItem menuItem1 = menu.findItem(R.id.menu_item1);
        //menuItem1.setVisible(false);
        return false;
    }

    @Override
    public boolean onCreateActionMode(ActionMode mode, Menu menu) {
        MenuInflater inflater = getMenuInflater();
        inflater.inflate(R.menu.menu_action_mode, menu);

        //(B)
        MenuItem menuItem1 = menu.findItem(R.id.menu_item1);
        menuItem1.setVisible(false);

        return true;
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>【Androidアプリ開発】ライブラリ追加時にビルドエラー</title>
      <link>https://sankame.github.io/blog/2017-10-13-android_duplicate_files_error/</link>
      <pubDate>Fri, 13 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2017-10-13-android_duplicate_files_error/</guid>
      <description>

&lt;h2 id=&#34;0-環境&#34;&gt;0. 環境&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;[Windows] 7
[Java] 1.8
[Android] 5.1.1
[Android API] 21
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;1-エラー内容&#34;&gt;1. エラー内容&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;commons-langを使いたくなったので下記のように追記してビルドしたら、エラーが発生しました。 (文中の【】は読み替えて下さい)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;(アプリルート)/mobile/build.gradle&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;dependencies {
    compile &#39;【他のライブラリ】&#39;
    compile &#39;【他のライブラリ】&#39;
    compile &#39;【他のライブラリ】&#39;
    compile &#39;org.apache.commons:commons-lang3:3.4&#39;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;エラー&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;Error:duplicate files during packaging of APK C:\【パス】\mobile-debug-unaligned.apk
Path in archive: META-INF/LICENSE.txt
Origin 1: C:\【パス】\commons-cli-1.2.jar
Origin 2: C:\【パス】\commons-lang3-3.4.jar
You can ignore those files in your build.gradle:
android {
packagingOptions {
    exclude &#39;META-INF/LICENSE.txt&#39;
}
}
Error:Execution failed for task &#39;:mobile:packageDebug&#39;.
&amp;gt; Duplicate files copied in APK META-INF/LICENSE.txt
File 1: C:\【パス】\commons-cli-1.2.jar
File 2: C:\【パス】\commons-lang3-3.4.jar
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;2-解決方法&#34;&gt;2. 解決方法&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;apkを作る際、複数のjarから、META-INFフォルダに同名のファイルを書き込もうとしてエラーになっているようです。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;エラーメッセージの通り、build.gradle内でLICENSE.txtの除外を指定したら解消しました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;(アプリルート)/mobile/build.gradle&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;apply plugin: &#39;com.android.application&#39;

android {
    compileSdkVersion 【バージョン】
    buildToolsVersion 【バージョン】
    //エラーが起きたファイルをここに追記。
    packagingOptions {
        exclude &#39;META-INF/LICENSE.txt&#39;
        exclude &#39;META-INF/NOTICE.txt&#39;
    }
    defaultConfig {
        //省略
    }
    buildTypes {
        release {
            //省略
        }
    }
}

//以下省略
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ちなみにapk内のMETA-INFOフォルダを確認するには、拡張子apkをzipに変えた後、解凍ソフトでapkを展開して下さい。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>【Androidアプリ開発】「次回から表示しない」ボタン</title>
      <link>https://sankame.github.io/blog/2017-10-03-android_handling_dialog_using_preference/</link>
      <pubDate>Tue, 03 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2017-10-03-android_handling_dialog_using_preference/</guid>
      <description>

&lt;h2 id=&#34;0-環境&#34;&gt;0. 環境&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;[Android] 5.1.1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[Android API] 21&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;1-preferenceで実装&#34;&gt;1. Preferenceで実装&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Preferenceを使ってダイアログに「次回から表示しない」ボタンをつける方法をメモ。&lt;/p&gt;

&lt;p&gt;ユーザーに1回だけ何かを伝えたい場合を想定しています。&lt;/p&gt;

&lt;p&gt;(MainActivity.thisなど、適宜読み替えて下さい)&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/Sankame/9ec48534fad7d8663305f6d9681128b0.js&#34;&gt;&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;2-stethoでpreferenceを編集&#34;&gt;2. stethoでPreferenceを編集&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;開発中にPreferenceの値を変えたり、消したりしたくなると思いますが、そんな時はstethoが便利です。&lt;/p&gt;

&lt;p&gt;stethoを起動し、[Local Storage]で該当のActivityを選択すると右側にPreferenceの値(上記コード17行目)が出ます。&lt;/p&gt;

&lt;p&gt;右クリックで編集や削除が可能です。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://sankame.github.io/assets/posts/img/android_handling_dialog_using_preference/stetho.jpg&#34; target=&#34;_blank&#34;&gt;
&lt;img width=&#34;80%&#34; height=&#34;80%&#34; title=&#34;stethoで編集&#34; alt=&#34;stethoで編集&#34; src=&#34;https://sankame.github.io/assets/posts/img/android_handling_dialog_using_preference/stetho.jpg&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;stethoの設定方法は下記記事の「4. stetho 利用」を参照して下さい。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;関連記事&#34;&gt;関連記事&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://sankame.github.io/blog/2017-05-14-view_sqlite_on_android/&#34; target=&#34;_blank&#34;&gt;AndroidのSQLite DBを参照&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>【Java】Listから配列へ変換</title>
      <link>https://sankame.github.io/blog/2017-08-14-java_list_to_array/</link>
      <pubDate>Mon, 14 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2017-08-14-java_list_to_array/</guid>
      <description>

&lt;h3 id=&#34;0-環境&#34;&gt;0.環境&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;[Java] 1.8
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1-内容&#34;&gt;1. 内容&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;いつも忘れるので、JavaでList型からString型配列へ変換する方法をメモ。&lt;/li&gt;
&lt;/ul&gt;

&lt;script src=&#34;https://gist.github.com/Sankame/9fba3734d8c3c061215221ac8f81aaae.js&#34;&gt;&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>型 UrlValidator は使用すべきではありません</title>
      <link>https://sankame.github.io/blog/2016-10-06-urlvalidator-is-deprecated/</link>
      <pubDate>Thu, 06 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2016-10-06-urlvalidator-is-deprecated/</guid>
      <description>

&lt;h3 id=&#34;0-環境&#34;&gt;0. 環境&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;[OS] Mac OS X 10.11.4
[Java] 1.8.0
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1-問題&#34;&gt;1. 問題&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;久々にJavaで実装する機会がありました。標準ライブラリのjava.net.URLクラスは、URLとして解釈できない文字列を渡すと例外が投げられるので扱いずらいですね。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;// IllegalArgumentException が発生。
url = URL.create(&amp;quot;不正なURL&amp;quot;);

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;うーん、最初、RFCを見て「URLとして許可されている文字列だけ渡す」という処理を入れようか迷いました。&lt;/p&gt;

&lt;p&gt;が、一から組むのも骨が折れるなあ～と思って、困った時の&lt;a href=&#34;https://commons.apache.org/&#34; target=&#34;_blank&#34;&gt;Apache Commons&lt;/a&gt;を探してみたら、しめしめ&lt;a href=&#34;https://commons.apache.org/proper/commons-validator/download_validator.cgi&#34; target=&#34;_blank&#34;&gt;Apache Commons Validator&lt;/a&gt;にUrlValidatorクラスというのがありました。&lt;/p&gt;

&lt;p&gt;早速このクラスをimportして使おうと思ったら、下記の警告が出てしまいました。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;型 UrlValidator は使用すべきではありません&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;2-解決&#34;&gt;2. 解決&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;調べてみたところ、①のパッケージは非推奨で②に変えたら警告も消えました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;font color=&#34;red&#34;&gt;①こっちは非推奨&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;import org.apache.commons.validator.UrlValidator;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;font color=&#34;green&#34;&gt;②これを使って！&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;import org.apache.commons.validator.routines.UrlValidator;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;3-参考&#34;&gt;3. 参考&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/14274919/the-type-urlvalidator-is-deprecated&#34; target=&#34;_blank&#34;&gt;The type UrlValidator is deprecated&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>