<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Apache on プログラマー備忘録</title>
    <link>https://sankame.github.io/tags/apache/</link>
    <description>Recent content in Apache on プログラマー備忘録</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Fri, 11 May 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://sankame.github.io/tags/apache/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>MonitでApacheとMySQLを復旧</title>
      <link>https://sankame.github.io/blog/2018-05-11-monit_for_apache_mysql/</link>
      <pubDate>Fri, 11 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2018-05-11-monit_for_apache_mysql/</guid>
      <description>MonitでApacheとMySQLを復旧させる最低限の設定です。
(文中のドメイン名やメールアドレスは読み替えて下さい)
0. 環境 [CentOS] 6.4 (64bit版カーネル) [Monit] 5.25.1 [Apache] 2.2.15 [MySQL] 5.1.73  1. セットアップ  インストール
# yum install monit  自動起動を設定
# chkconfig monit on   2. 設定 2-1. Apacheの監視設定  httpd.conf を開いて、
# vim /etc/monit.d/httpd.conf  下記を記載。
check process httpd with pidfile /var/run/httpd/httpd.pid start program = &amp;quot;/etc/init.d/httpd start&amp;quot; stop program = &amp;quot;/etc/init.d/httpd stop&amp;quot; if 5 restarts within 5 cycles then timeout if failed host example.</description>
    </item>
    
    <item>
      <title>ApacheのProxyPassでhtmlタグがそのまま表示される</title>
      <link>https://sankame.github.io/blog/2016-12-25-mod_proxy_text_plain/</link>
      <pubDate>Sun, 25 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2016-12-25-mod_proxy_text_plain/</guid>
      <description>0. 環境 [CentOS] 6.8 (64bit版カーネル) [Apache] 2.2.15  1. 問題  ApacheのProxyPassディレクティブ(mod_proxy)を指定して、バックエンドから受け取ったコンテンツを表示しようとするとhtmlタグがそのまま表示されてしまいます。
 Apache設定ファイルの抜粋
NameVirtualHost *:80 # 省略 &amp;lt;VirtualHost *:80&amp;gt; ServerAdmin test@local ServerName test.local ProxyPreserveHost On ProxyPass / http://127.0.0.1:8080/ ProxyPassReverse / http://127.0.0.1:8080/ ErrorLog logs/test.local-error_log CustomLog logs/test.local-access_log combined &amp;lt;/VirtualHost&amp;gt;    2. 対策  ChromeのDeveloper Toolsなどで見ると、下記のようにHTTPレスポンスヘッダーで平文が指定されています。
Content-Type text/plain; charset=UTF-8
 デフォルトのMIMEタイプ指定を無効にすることで解消しました。
 Apache設定ファイルの抜粋
NameVirtualHost *:80 # 省略 &amp;lt;VirtualHost *:80&amp;gt; ServerAdmin test@local ServerName test.local # ----- この行を追加 ----- DefaultType None # ----- この行を追加 ----- ProxyPreserveHost On ProxyPass / http://127.</description>
    </item>
    
    <item>
      <title>ベーシック認証設定 (VirtualHostの場合)</title>
      <link>https://sankame.github.io/blog/2014-08-20-http_basic_authentication/</link>
      <pubDate>Wed, 20 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2014-08-20-http_basic_authentication/</guid>
      <description>0.環境 [CentOS] 5.6 (32bit版カーネル) [Apache] 2.2.3  1.パスワードファイル作成  適当な場所にパスワードファイルを作成。(&amp;ldquo;user1&amp;rdquo;は作成したいユーザー名で読み替えて下さい)
# htpasswd -c /etc/httpd/conf/.htpasswd user1 New password: Re-type new password: Adding password for user user1   2.パスワードファイル設定  VirtualHostを設定している場合、Directoryディレクティブ内に下記を追加。
AuthUserFileには上記1で作ったパスワードファイルを指定。
AuthNameはブラウザの認証ダイアログに表示されるメッセージとなります。
(マルチバイト文字は化ける可能性あり)
下記はApache設定ファイル(/etc/httpd/conf/httpd.conf) の抜粋
NameVirtualHost *:80 &amp;lt;Directory /web/test&amp;gt; Options FollowSymLinks AllowOverride FileInfo Options=All,MultiViews # --- ベーシック認証追加 --- AuthType Basic AuthUserFile &amp;quot;/etc/httpd/conf/.htpasswd&amp;quot; AuthName &amp;quot;Here is a message.&amp;quot; Require valid-user # --- ベーシック認証追加 --- &amp;lt;/Directory&amp;gt; &amp;lt;VirtualHost *:80&amp;gt; ServerAdmin test@sample.co.jp DocumentRoot &amp;quot;/web/test&amp;quot; ServerName test.</description>
    </item>
    
    <item>
      <title>ポイントだけ ApacheBench</title>
      <link>https://sankame.github.io/blog/2014-06-07-apache_bench/</link>
      <pubDate>Sat, 07 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2014-06-07-apache_bench/</guid>
      <description>0.環境  [CentOS] 5.6 (32bit版カーネル) [Apache] 2.2.3 [ApacheBench] 2.0.40-dev  1.基本  (1-1) 実行方法
 Apacheをインストールすると ab というコマンドで負荷テストができます。
 主に使うのは2つのオプションで、下記のように実行します。
 後述の &amp;ldquo;Requests per second&amp;rdquo; が十分な値になるよう、n と c の値を増やして負荷をかけます。
 (n : リクエスト数　c : 同時接続数)
ab -n 10000 -c 100 &amp;quot;http://test.vm/test.php&amp;quot;  abでテストできるのはサーバ側の処理だけなので、HTMLレンダリングやJavascript実行等、トータルの計測を行いたい場合は、下記のようなツールを検討して下さい。
 GTmetrix
 PageSpeed
   (1-2) 結果の確認
 実行すると下記サンプルのような結果が表示されるので、主に2つの項目を確認します。
 ① Failed requests (失敗したリクエスト数)
 この項目が0であることを確認します。
 但し、表示毎にHTMLのバイト数が異なるページの場合、この項目と内訳を表す &amp;ldquo;Length:&amp;rdquo; がともにカウントされます。(1つ前の結果とHTMLのバイト数を比較し、異なる場合は Length がカウントされる仕様)
 このようなページの場合、&amp;rdquo;Failed requests&amp;rdquo; に数字があっても、全て Length が原因ならば無視してかまいませんが、念のため、Apacheのアクセスログを確認し、HTTP Response Code が全て200になっていることを確認しましょう。</description>
    </item>
    
    <item>
      <title>かんたんSubversionリポジトリ作成</title>
      <link>https://sankame.github.io/blog/2013-01-19-svn_create_repos/</link>
      <pubDate>Sat, 19 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2013-01-19-svn_create_repos/</guid>
      <description>&amp;nbsp;更新日：2015年05月08日
0.環境 [CentOS] 5.6 (32bit版カーネル) [Apache] 2.2.3 [Subversion] 1.6.11  1.作成手順  SVNはインストール済みとします。
 (1-1) リポジトリ作成
 ブラウザ経由でリポジトリを見るため、予め mod_dav_svn をインストール。(初回のみ)
# yum install mod_dav_svn  データが壊れにくいfsfsを指定し、リポジトリ作成。
# svnadmin create /var/svn/repos/test --fs-type fsfs  SVNの作法通り、下記3つを用意します。
svn mkdir file:///var/svn/repos/test/trunk -m &amp;quot;create&amp;quot; svn mkdir file:///var/svn/repos/test/tags -m &amp;quot;create&amp;quot; svn mkdir file:///var/svn/repos/test/branches -m &amp;quot;create&amp;quot;   (1-2) 既存リポジトリのソースを引き継ぐ場合
 (例)test_orgリポジトリのソースを一時ディレクトリに出力。
# svn export file:///var/svn/repos/test_org/ /tmp/test_org  上記で出力したソースをtestリポジトリへ取り込みます。
# svn import /tmp/test_org/trunk file:///var/svn/repos/test/trunk -m &amp;quot;first import&amp;quot;   (1-3) アクセス設定</description>
    </item>
    
  </channel>
</rss>