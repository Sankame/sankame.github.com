<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on プログラマー備忘録</title>
    <link>https://sankame.github.io/tags/java/</link>
    <description>Recent content in Java on プログラマー備忘録</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sun, 05 Aug 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://sankame.github.io/tags/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>【Androidアプリ開発】CursorWindowAllocationException エラー</title>
      <link>https://sankame.github.io/blog/2018-08-05-android_cursor_error/</link>
      <pubDate>Sun, 05 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2018-08-05-android_cursor_error/</guid>
      <description>CursorWindowAllocationException が発生した時の対処方法です。
0. 環境 [Windows] 7
[Java] 1.8
[Android] 5.1.1
[Android API] 26
1. 問題  開発中のAndroidアプリでSQLiteを使ってます。
サブクエリを使って、今までより抽出データが多くなるSQLを書いたところ、画面遷移中に頻繁にクラッシュするようになりました。
しかも、特定のテスト機(Galaxy S4(Android5.0.1))のみです。
 (A)エラー内容
Fatal Exception: android.database.CursorWindowAllocationException Cursor window allocation of 2048 kb failed. # Open Cursors=700 (# cursors opened by this proc=700)  (B)エラー箇所
 前述のサブクエリを適用した箇所とは全く別の箇所が毎回落ちるポイントでした。(下記2行目)
Cursor cursorCountUsers = db.rawQuery(&amp;quot;SELECT COUNT(user_id) FROM users&amp;quot;, null); cursorCountUsers.moveToFirst(); int countUserId = cursorCountUsers.getInt(0); return countUserId;     2. 対策  Slackoverflowで同じ問題を見つけました。
まず、毎回同じ箇所で落ちるので、上記(B)にcursorCountUsers.close();を入れたけど直りませんでした。</description>
    </item>
    
    <item>
      <title>【Androidアプリ開発】FileUriExposedException エラー</title>
      <link>https://sankame.github.io/blog/2018-07-23-android_use_fileprovider/</link>
      <pubDate>Mon, 23 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2018-07-23-android_use_fileprovider/</guid>
      <description> Android7 で android.os.FileUriExposedException が発生した時の対処方法です。
(文中の【】は読み替えて下さい)
0. 環境 [Windows] 7
[Java] 1.8
[Android] 5.1.1
[Android API] 26
1. 問題  Androidアプリから一時ファイルを作成して、そのURIを外部のアプリに渡すという処理を実装してました。
(ファイルを作成して、Gmailに添付するなど)
Android7からfile://による指定ができなくなったため、下記のエラーが発生します。
android.os.FileUriExposedException: file:///storage/emulated/0/Android/data/【アプリのパッケージ名】/temporary/【一時ファイル名】 exposed beyond app through ClipData.Item.getUri()  URIはFileProviderで作らないといけないそうです。
  2. 対策 2-1. AndroidManifest.xml  まず、AndroidManifest.xmlにFileProviderの定義を追加します。
android:resourceには、2-2で作成するファイル名を指定。
   2-2. res/xml/provider_paths.xml  次に、res/xml/provider_paths.xml を作成します。
後述の2-3でfileの保存先を Environment.getExternalStorageDirectory() の直下にしたので、それを表すexternal-pathを指定します。
また、直下なのでpathはカレントディレクトリになります。
   2-3. 該当処理を行っているActivity  最後に、URIの生成を下記(1)から(2)に変更しました。   3. 参考  FileProviderリファレンス  </description>
    </item>
    
    <item>
      <title>【Androidアプリ開発】 &#34;Socket is closed&#34; エラー</title>
      <link>https://sankame.github.io/blog/2018-05-07-android_socket_is_closed/</link>
      <pubDate>Mon, 07 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2018-05-07-android_socket_is_closed/</guid>
      <description> 0. 環境 [Windows] 7 [Java] 1.8 [Android] 5.1.1 [Android API] 26  1. 問題  Androidアプリの開発で、自前のAPIからデータを取得する処理を組んでいたところ、下記エラーが発生するようになりました。
java.net.SocketException: Socket is closed  コードはこちら。
  2. 対策  まずAPI側でApacheのログを確認したところ、ステータスコード200で問題なしでした。
127.0.0.1 - - [05/May/2018:22:55:02 +0900] &amp;quot;POST /api/test HTTP/1.0&amp;quot; 200 11130  正常終了するケースとの違いは、レスポンスのデータ量が多くなってることかな。(上記ログ右端)
 次にAndroidアプリ側の処理があやしいと考えて、いろいろ試した結果、HttpsURLConnectionのクローズのタイミングが問題だと分かりました。
同オブジェクトを参照しているオブジェクトを全て使い終わってから、クローズする必要がありそうです。(上記(1)→(2)に移す)
また、クローズ処理を消すだけでも冒頭のエラーは出なくなりましたが、なるべくオブジェクトは明示的に閉じた方が良いと思います。
なので、最終的にオブジェクトの作成順とは逆にクローズしていく処理を入れました。(下記(3)(4))
  </description>
    </item>
    
    <item>
      <title>【Androidアプリ開発】onPrepareActionModeが呼ばれない</title>
      <link>https://sankame.github.io/blog/2017-10-17-android_onprepareactionmode_not_called/</link>
      <pubDate>Tue, 17 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2017-10-17-android_onprepareactionmode_not_called/</guid>
      <description>0. 環境 [Windows] 7 [Java] 1.8 [Android] 5.1.1 [Android API] 26  1. 問題  build.gradleで下記の値を上げたところ、onPrepareActionModeが実行されなくなってました。
onPrepareActionModeは、ListViewのロングタップ時にアクションモードへ切り替えた後、アクションバー内のあるアイコンを隠す処理で使っていたので、困りました。
 compileSdkVersion : 21 → 26
 buildToolsVersion : 21.1.2 → 26.0.2
   2. 対策  試しに下記 (A) にあった処理を (B) へ移してみたところ、思った通りの動きをしてくれました。
うーん、前はダメだったからonPrepareActionModeを使ったんだけどなあ。。
他にネットで情報を見つけられなかったので、一旦これにしておくか。
list1 = findViewById(R.id.listView1); list1.setMultiChoiceModeListener(new AbsListView.MultiChoiceModeListener() { @Override public boolean onPrepareActionMode(ActionMode mode, Menu menu) { //(A) //MenuItem menuItem1 = menu.findItem(R.id.menu_item1); //menuItem1.setVisible(false); return false; } @Override public boolean onCreateActionMode(ActionMode mode, Menu menu) { MenuInflater inflater = getMenuInflater(); inflater.</description>
    </item>
    
    <item>
      <title>【Androidアプリ開発】ライブラリ追加時にビルドエラー</title>
      <link>https://sankame.github.io/blog/2017-10-13-android_duplicate_files_error/</link>
      <pubDate>Fri, 13 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2017-10-13-android_duplicate_files_error/</guid>
      <description>0. 環境 [Windows] 7 [Java] 1.8 [Android] 5.1.1 [Android API] 21  1. エラー内容  commons-langを使いたくなったので下記のように追記してビルドしたら、エラーが発生しました。 (文中の【】は読み替えて下さい)
 (アプリルート)/mobile/build.gradle
dependencies { compile &#39;【他のライブラリ】&#39; compile &#39;【他のライブラリ】&#39; compile &#39;【他のライブラリ】&#39; compile &#39;org.apache.commons:commons-lang3:3.4&#39; }  エラー
Error:duplicate files during packaging of APK C:\【パス】\mobile-debug-unaligned.apk Path in archive: META-INF/LICENSE.txt Origin 1: C:\【パス】\commons-cli-1.2.jar Origin 2: C:\【パス】\commons-lang3-3.4.jar You can ignore those files in your build.gradle: android { packagingOptions { exclude &#39;META-INF/LICENSE.txt&#39; } } Error:Execution failed for task &#39;:mobile:packageDebug&#39;.</description>
    </item>
    
    <item>
      <title>【Androidアプリ開発】「次回から表示しない」ボタン</title>
      <link>https://sankame.github.io/blog/2017-10-03-android_handling_dialog_using_preference/</link>
      <pubDate>Tue, 03 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2017-10-03-android_handling_dialog_using_preference/</guid>
      <description> 0. 環境 [Android] 5.1.1
[Android API] 21
1. Preferenceで実装  Preferenceを使ってダイアログに「次回から表示しない」ボタンをつける方法をメモ。
ユーザーに1回だけ何かを伝えたい場合を想定しています。
(MainActivity.thisなど、適宜読み替えて下さい)
  2. stethoでPreferenceを編集  開発中にPreferenceの値を変えたり、消したりしたくなると思いますが、そんな時はstethoが便利です。
stethoを起動し、[Local Storage]で該当のActivityを選択すると右側にPreferenceの値(上記コード17行目)が出ます。
右クリックで編集や削除が可能です。

stethoの設定方法は下記記事の「4. stetho 利用」を参照して下さい。
  関連記事  AndroidのSQLite DBを参照  </description>
    </item>
    
    <item>
      <title>【Java】Listから配列へ変換</title>
      <link>https://sankame.github.io/blog/2017-08-14-java_list_to_array/</link>
      <pubDate>Mon, 14 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2017-08-14-java_list_to_array/</guid>
      <description> 0.環境 [Java] 1.8  1. 内容  いつも忘れるので、JavaでList型からString型配列へ変換する方法をメモ。   </description>
    </item>
    
    <item>
      <title>型 UrlValidator は使用すべきではありません</title>
      <link>https://sankame.github.io/blog/2016-10-06-urlvalidator-is-deprecated/</link>
      <pubDate>Thu, 06 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2016-10-06-urlvalidator-is-deprecated/</guid>
      <description> 0. 環境 [OS] Mac OS X 10.11.4 [Java] 1.8.0  1. 問題  久々にJavaで実装する機会がありました。標準ライブラリのjava.net.URLクラスは、URLとして解釈できない文字列を渡すと例外が投げられるので扱いずらいですね。
// IllegalArgumentException が発生。 url = URL.create(&amp;quot;不正なURL&amp;quot;);  うーん、最初、RFCを見て「URLとして許可されている文字列だけ渡す」という処理を入れようか迷いました。
が、一から組むのも骨が折れるなあ～と思って、困った時のApache Commonsを探してみたら、しめしめApache Commons ValidatorにUrlValidatorクラスというのがありました。
早速このクラスをimportして使おうと思ったら、下記の警告が出てしまいました。
型 UrlValidator は使用すべきではありません
  2. 解決  調べてみたところ、①のパッケージは非推奨で②に変えたら警告も消えました。
 ①こっちは非推奨
import org.apache.commons.validator.UrlValidator;
 ②これを使って！
import org.apache.commons.validator.routines.UrlValidator;
   3. 参考  The type UrlValidator is deprecated  </description>
    </item>
    
  </channel>
</rss>