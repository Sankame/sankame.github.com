<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nextjs on プログラマー備忘録</title>
    <link>https://sankame.github.io/tags/nextjs/</link>
    <description>Recent content in Nextjs on プログラマー備忘録</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Wed, 04 Jan 2023 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://sankame.github.io/tags/nextjs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>【Next.js】ハイフンを含むクエリ文字列</title>
      <link>https://sankame.github.io/blog/2023-01-04-get_hyphenated_querystring_in_nextjs/</link>
      <pubDate>Wed, 04 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2023-01-04-get_hyphenated_querystring_in_nextjs/</guid>
      <description> 0. 環境 [Next.js] 12.0.10
1. 課題 既存システムのリプレースなどで、どうしてもハイフンを含むQueryStringをNext.jsで扱わなければならない場合。 (例) https://example.com/index?user-id=100
 この書き方だと
const { query: { user-id }, } = req;  エラーになります。
Error: error: Expected &#39;,&#39;, got &#39;-&#39; | 22 | query: { user-id }, | ^ Caused by: 0: failed to process js file 1: Syntax Error   2. 対策  これで回避できました。
const userId = req.query[&#39;user-id&#39;];   </description>
    </item>
    
    <item>
      <title>Next.jsが遅い</title>
      <link>https://sankame.github.io/blog/2022-05-21-nextjs_so_slow/</link>
      <pubDate>Sat, 21 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2022-05-21-nextjs_so_slow/</guid>
      <description> 0. 環境 [OS] ubuntu 16.04
[Node.js] 17.1.0
[Next.js] 12.1.6
[Prisma] 3.13.0
1. 問題  Next.jsを勉強するため、下記構成のサンプルアプリをいじってたのですが、とにかく画面ロード時間が遅くて使い物にならない。
 構成
 [Next.js] -&amp;gt; [Prisma] -&amp;gt; [PlanetScale(サーバーレスDB)]  起動コマンド
# npm run dev    2. 対応  最初、当てずっぽうで、PlanetScaleへの通信が遅いのかと考え、DBをローカルに持ってきましたが変わりませんでした。
 その後、Prismaの処理をコメントアウトしても重かったので、Next.jsに照準を絞りました。
原因の切り分けをしないと、ググることすらできないです。 (最初、「Prisma 遅い」とかで調べてました・・・)
 最終的にポーリングの間隔を長くしたら、画面の表示は軽くなりました。
 自分が知らない技術を勉強する際、最初の環境設定が面倒なので、ついつい、Githubなどから公開されてるソースを落としてきて動かすことが多いです。
各パラメーターの意味を知らないまま始めるので、今回のようにハマることがあります。
  </description>
    </item>
    
  </channel>
</rss>