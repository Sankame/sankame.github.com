<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ReactNative on プログラマー備忘録</title>
    <link>https://sankame.github.io/tags/reactnative/</link>
    <description>Recent content in ReactNative on プログラマー備忘録</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Thu, 23 Jul 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://sankame.github.io/tags/reactnative/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>【ReactNative】expo-sqliteのテーブルを開発ツールから参照する方法</title>
      <link>https://sankame.github.io/blog/2020-07-23-expo_sqlite_db_browsing/</link>
      <pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://sankame.github.io/blog/2020-07-23-expo_sqlite_db_browsing/</guid>
      <description> 0. 環境 [OS] MacOS 10.11.6
[React Native] 0.61.4
[SQLite Studio] 3.2.1
1. 背景 React NativeでiOSアプリを作成中です。 ローカルストレージとしてExpoのSQLiteを使っていますが、開発ツールからテーブル参照する方法が分からず調べてました。 アプリから登録されたレコードの確認など、なにかとこの手のツールは必要です。 Androidアプリ開発のStethoみたいなのがないかなーと思ってましたが、結局こんな感じにしました。
2. 手順(DBファイルの格納先)  expo-sqliteが作成するDBファイルの保存先は${FileSystem.documentDirectory}/SQLite/${name}」なので、まず${FileSystem.documentDirectory}がどこなのか調べます。
 (詳細はこちらのページの&amp;rdquo;SQLite.openDatabase&amp;rdquo;参照)  アプリ実行時に必ず通る箇所にログを仕込みます。(importとconsoleの行だけあればどこでもOK)
import * as FileSystem from &#39;expo-file-system&#39; class DB { static db; static getDB(){ console.log(&amp;quot;FileSystem; &amp;quot; + FileSystem.documentDirectory); :  コンソールに出力されたパスからfile://を削ったものが${FileSystem.documentDirectory}です。
 さらに上記${name}は、SQLite.openDatabase();の引数で指定しているDB名になります。
  3. 手順(SQLiteStudio)  MacにSQLiteStudioをインストール。
 SQLiteStudioのメニューで[Database]-[Add a database]を選び、上記2で調べたパスを[File]に入力して[OK]をクリック。
  
 左ペインにテーブルが表示されれば成功です。  </description>
    </item>
    
  </channel>
</rss>